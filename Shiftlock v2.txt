local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

-- GUI Setup
local ShiftLockUI = Instance.new("ScreenGui")
local ToggleButton = Instance.new("ImageButton")
ShiftLockUI.Parent = game:GetService("CoreGui")
ShiftLockUI.ResetOnSpawn = false

ToggleButton.Parent = ShiftLockUI
ToggleButton.BackgroundTransparency = 1
ToggleButton.Size = UDim2.new(0, 40, 0, 40)
ToggleButton.Position = UDim2.new(1, -50, 0.5, -20)
ToggleButton.Image = "rbxasset://textures/ui/mouseLock_off@2x.png"

-- System Variables
local IsActive = false
local Yaw = 0
local Connection

local function RotateCharacter(deltaX)
    local Character = Player.Character
    if not Character then return end
    
    local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
    if HumanoidRootPart then
        Yaw = Yaw - (deltaX * 0.4) -- Adjust sensitivity here
        HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart.Position) 
            * CFrame.Angles(0, math.rad(Yaw), 0)
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    IsActive = not IsActive
    ToggleButton.Image = IsActive and "rbxasset://textures/ui/mouseLock_on@2x.png" 
        or "rbxasset://textures/ui/mouseLock_off@2x.png"

    if IsActive then
        -- Initialize rotation
        local HumanoidRootPart = Player.Character:FindFirstChild("HumanoidRootPart")
        if HumanoidRootPart then
            Yaw = HumanoidRootPart.Orientation.Y
            Player.Character.Humanoid.AutoRotate = false
        end

        -- Mouse movement handler
        Connection = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                RotateCharacter(input.Delta.X)
            end
        end)
    else
        Player.Character.Humanoid.AutoRotate = true
        if Connection then
            Connection:Disconnect()
        end
    end
end)
