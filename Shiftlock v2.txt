local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Configuration
local SHIFT_LOCK_ACTIVE = false
local MOUSE_SENSITIVITY = Vector2.new(0.25, 0.25)
local BASE_OFFSET = Vector3.new(0, 3, 10)

-- State management
local character, humanoidRootPart
local cameraAngle = Vector2.new()
local lastInputTime = 0

-- Initialize character reference
local function InitializeCharacter()
    character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
end

-- Immediate shiftlock toggle
local function ToggleShiftlock()
    SHIFT_LOCK_ACTIVE = not SHIFT_LOCK_ACTIVE
    
    -- Set mouse behavior
    UserInputService.MouseBehavior = SHIFT_LOCK_ACTIVE and 
        (UserInputService.TouchEnabled 
            and Enum.MouseBehavior.LockCurrentPosition 
            or Enum.MouseBehavior.LockCenter) 
        or Enum.MouseBehavior.Default
    
    -- Configure camera
    Camera.CameraType = SHIFT_LOCK_ACTIVE and Enum.CameraType.Scriptable or Enum.CameraType.Custom
    
    -- Reset camera angles when activating
    if SHIFT_LOCK_ACTIVE then
        cameraAngle = Vector2.new(math.rad(-15), 0)
    end
end

-- Camera update logic
local function UpdateCamera()
    if not SHIFT_LOCK_ACTIVE or not humanoidRootPart then return end
    
    -- Get mouse delta
    local mouseDelta = UserInputService:GetMouseDelta()
    cameraAngle += Vector2.new(
        -mouseDelta.Y * MOUSE_SENSITIVITY.Y,
        mouseDelta.X * MOUSE_SENSITIVITY.X
    )
    
    -- Clamp vertical angle
    cameraAngle = Vector2.new(
        math.clamp(cameraAngle.X, math.rad(-60), math.rad(60)),
        cameraAngle.Y
    )
    
    -- Calculate camera position
    local rootPosition = humanoidRootPart.Position
    local cameraRot = CFrame.Angles(cameraAngle.X, cameraAngle.Y, 0)
    local cameraOffset = cameraRot * BASE_OFFSET
    
    -- Apply camera transform
    Camera.CFrame = CFrame.new(rootPosition + cameraOffset, rootPosition)
end

-- Input handling
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftShift then
        lastInputTime = os.clock()
        ToggleShiftlock()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftShift then
        -- Only toggle if key was pressed briefly
        if os.clock() - lastInputTime < 0.2 then
            ToggleShiftlock()
        end
    end
end)

-- Character tracking
LocalPlayer.CharacterAdded:Connect(InitializeCharacter)
InitializeCharacter()

-- Smooth camera updates
RunService.RenderStepped:Connect(UpdateCamera)

print("ShiftLock System Ready - Single Press Toggle")
