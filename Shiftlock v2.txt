local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

-- GUI Setup
local ShiftLockUI = Instance.new("ScreenGui")
ShiftLockUI.Parent = game:GetService("CoreGui")
ShiftLockUI.ResetOnSpawn = false

local ToggleButton = Instance.new("ImageButton")
ToggleButton.Parent = ShiftLockUI
ToggleButton.BackgroundTransparency = 1
ToggleButton.Size = UDim2.new(0, 40, 0, 40)
ToggleButton.Position = UDim2.new(1, -50, 0.5, -20)
ToggleButton.Image = "rbxasset://textures/ui/mouseLock_off@2x.png"

-- System Variables
local IsActive = false
local InputConnection
local LastMousePosition = Vector2.new()
local Sensitivity = 0.5

local function UpdateCharacterRotation(delta)
    local character = Player.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    -- Convert mouse delta to rotation
    local yaw = -delta.X * Sensitivity
    rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, math.rad(yaw), 0)
end

local function HandleInput(input, gameProcessed)
    if not IsActive or gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.MouseMovement
    or input.UserInputType == Enum.UserInputType.Touch then
        -- Get mouse delta from screen center
        local currentPosition = input.Position
        local delta = currentPosition - LastMousePosition
        LastMousePosition = currentPosition
        
        UpdateCharacterRotation(delta)
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    IsActive = not IsActive
    ToggleButton.Image = IsActive and "rbxasset://textures/ui/mouseLock_on@2x.png" 
        or "rbxasset://textures/ui/mouseLock_off@2x.png"

    if IsActive then
        -- Initialize
        Player.Character.Humanoid.AutoRotate = false
        LastMousePosition = UserInputService:GetMouseLocation()
        InputConnection = UserInputService.InputChanged:Connect(HandleInput)
    else
        -- Cleanup
        Player.Character.Humanoid.AutoRotate = true
        if InputConnection then
            InputConnection:Disconnect()
        end
    end
end)
