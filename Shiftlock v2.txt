local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

-- GUI Setup
local ShiftLockUI = Instance.new("ScreenGui")
ShiftLockUI.Parent = game:GetService("CoreGui")
ShiftLockUI.ResetOnSpawn = false

local ToggleButton = Instance.new("ImageButton")
ToggleButton.Parent = ShiftLockUI
ToggleButton.BackgroundTransparency = 1
ToggleButton.Size = UDim2.new(0, 40, 0, 40)
ToggleButton.Position = UDim2.new(1, -50, 0.5, -20)
ToggleButton.Image = "rbxasset://textures/ui/mouseLock_off@2x.png"

-- System Variables
local IsActive = false
local BaseCFrame = CFrame.new()
local RenderConnection
local TOUCH_SENSITIVITY = 0.8 -- Increase for faster rotation

local function UpdateRotation()
    if not IsActive then return end
    
    local character = Player.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    local camera = workspace.CurrentCamera
    
    if rootPart and camera then
        -- Get input delta (works for both touch and mouse)
        local delta = UserInputService:GetMouseDelta()
        
        -- Calculate new rotation (fixed inversion)
        local yaw = delta.X * TOUCH_SENSITIVITY
        local pitch = delta.Y * TOUCH_SENSITIVITY
        
        -- Rotate character
        rootPart.CFrame = rootPart.CFrame * CFrame.Angles(0, -math.rad(yaw), 0)
        
        -- Rotate camera (no RMB needed)
        camera.CFrame = camera.CFrame * CFrame.Angles(-math.rad(pitch), 0, 0)
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    IsActive = not IsActive
    ToggleButton.Image = IsActive and "rbxasset://textures/ui/mouseLock_on@2x.png" 
        or "rbxasset://textures/ui/mouseLock_off@2x.png"

    if IsActive then
        -- Initialize lock
        local character = Player.Character
        local humanoid = character and character:FindFirstChild("Humanoid")
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        
        if humanoid and rootPart then
            humanoid.AutoRotate = false
            BaseCFrame = rootPart.CFrame
            workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
        end
        
        -- Start rotation updates
        RenderConnection = RunService.RenderStepped:Connect(UpdateRotation)
    else
        -- Cleanup
        local character = Player.Character
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.AutoRotate = true
            workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
        end
        if RenderConnection then
            RenderConnection:Disconnect()
        end
    end
end)
