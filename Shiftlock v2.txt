local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

-- GUI Setup
local ShiftLockUI = Instance.new("ScreenGui")
ShiftLockUI.Parent = game:GetService("CoreGui")
ShiftLockUI.ResetOnSpawn = false

local ToggleButton = Instance.new("ImageButton")
ToggleButton.Parent = ShiftLockUI
ToggleButton.BackgroundTransparency = 1
ToggleButton.Size = UDim2.new(0, 40, 0, 40)
ToggleButton.Position = UDim2.new(1, -50, 0.5, -20)
ToggleButton.Image = "rbxasset://textures/ui/mouseLock_off@2x.png"

-- System Variables
local IsActive = false
local BaseCFrame = CFrame.new()
local RenderConnection
local SENSITIVITY = 0.35
local CAMERA_OFFSET = CFrame.new(0, 3, 10) -- Fixed camera distance

local function UpdateRotation()
    if not IsActive then return end
    
    local character = Player.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    local camera = workspace.CurrentCamera
    
    if rootPart and camera then
        local delta = UserInputService:GetMouseDelta()
        
        -- Rotate character
        local yaw = -delta.X * SENSITIVITY
        rootPart.CFrame = CFrame.new(rootPart.Position) 
            * CFrame.Angles(0, math.rad(yaw), 0)
            * BaseCFrame.Rotation
        
        -- Update camera position (fixed offset)
        camera.CFrame = rootPart.CFrame 
            * CAMERA_OFFSET 
            * CFrame.Angles(math.rad(-delta.Y * SENSITIVITY), 0, 0)
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    IsActive = not IsActive
    ToggleButton.Image = IsActive and "rbxasset://textures/ui/mouseLock_on@2x.png" 
        or "rbxasset://textures/ui/mouseLock_off@2x.png"

    if IsActive then
        local character = Player.Character
        local rootPart = character and character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            BaseCFrame = CFrame.new(rootPart.Position, rootPart.Position + workspace.CurrentCamera.CFrame.LookVector)
            Player.Character.Humanoid.AutoRotate = false
            workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
        end
        
        RenderConnection = RunService.RenderStepped:Connect(UpdateRotation)
    else
        if Player.Character and Player.Character:FindFirstChild("Humanoid") then
            Player.Character.Humanoid.AutoRotate = true
            workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
        end
        if RenderConnection then
            RenderConnection:Disconnect()
        end
    end
end)
