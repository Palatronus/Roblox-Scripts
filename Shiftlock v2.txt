local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = workspace.CurrentCamera

-- Configuration
local SHIFT_LOCK_ENABLED = false
local MOUSE_SENSITIVITY = 0.5
local FOV = 70

-- Initialize camera state
Camera.CameraType = Enum.CameraType.Custom
Camera.FieldOfView = FOV

-- Shiftlock UI container
local ShiftlockUI = Instance.new("ScreenGui")
ShiftlockUI.Name = "ShiftlockSystem"
ShiftlockUI.ResetOnSpawn = false
ShiftlockUI.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Mouse control frame
local ControlFrame = Instance.new("Frame")
ControlFrame.Size = UDim2.new(0, 0, 0, 0)
ControlFrame.Visible = false
ControlFrame.Parent = ShiftlockUI

-- State management
local function UpdateShiftlockState(enabled)
    SHIFT_LOCK_ENABLED = enabled
    
    -- Set mouse behavior
    UserInputService.MouseBehavior = enabled and 
        (UserInputService.TouchEnabled 
            and Enum.MouseBehavior.LockCurrentPosition 
            or Enum.MouseBehavior.LockCenter) 
        or Enum.MouseBehavior.Default
    
    -- Set camera state
    Camera.CameraType = enabled and Enum.CameraType.Scriptable or Enum.CameraType.Custom
    ControlFrame.Visible = enabled
    Mouse.TargetFilter = enabled and ControlFrame or nil
    
    -- Reset mouse on disable
    if not enabled then
        Mouse.Icon = ""
    end
end

-- Immediate input handling
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftShift then
        UpdateShiftlockState(not SHIFT_LOCK_ENABLED)
    end
end)

-- Camera rotation logic
local function UpdateCamera()
    if not SHIFT_LOCK_ENABLED then return end
    
    local mouseDelta = UserInputService:GetMouseDelta()
    local currentCFrame = Camera.CFrame
    
    -- Apply rotation
    local newCFrame = currentCFrame * CFrame.Angles(
        0,
        -math.rad(mouseDelta.X * MOUSE_SENSITIVITY),
        0
    )
    
    -- Maintain camera distance
    Camera.CFrame = newCFrame
end

-- Smooth camera updates
RunService.RenderStepped:Connect(UpdateCamera)

-- Cleanup on shift release
UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.LeftShift then
        UpdateShiftlockState(false)
    end
end)

print("Instant ShiftLock System Active - Press Shift to Toggle")
