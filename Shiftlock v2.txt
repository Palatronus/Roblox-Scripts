local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

-- GUI Setup
local ShiftLockUI = Instance.new("ScreenGui")
ShiftLockUI.Parent = game:GetService("CoreGui")
ShiftLockUI.ResetOnSpawn = false

local ToggleButton = Instance.new("ImageButton")
ToggleButton.Parent = ShiftLockUI
ToggleButton.BackgroundTransparency = 1
ToggleButton.Size = UDim2.new(0, 40, 0, 40)
ToggleButton.Position = UDim2.new(1, -50, 0.5, -20)
ToggleButton.Image = "rbxasset://textures/ui/mouseLock_off@2x.png"

-- System Variables
local IsActive = false
local InputConnection
local RenderConnection
local Yaw = 0
local TouchObject = nil
local Sensitivity = 0.5

-- Configure these to match your preferred camera view
local CAMERA_OFFSET = Vector3.new(0, 3, 8) -- (Y-axis height, Z-axis distance)

local function UpdateCamera()
    local character = Player.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    
    -- Update camera position
    workspace.CurrentCamera.CFrame = CFrame.lookAt(
        rootPart.Position + Vector3.new(0, CAMERA_OFFSET.Y, 0),
        rootPart.Position
    ) * CFrame.new(0, 0, CAMERA_OFFSET.Z) * CFrame.Angles(0, math.rad(Yaw), 0)
end

local function HandleInput(input, gameProcessed)
    if not IsActive or gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.Touch then
        if input.UserInputState == Enum.UserInputState.Begin then
            TouchObject = input
        elseif input.UserInputState == Enum.UserInputState.Change then
            -- Calculate rotation from touch delta
            local delta = input.Delta
            Yaw = Yaw - (delta.X * Sensitivity)
            UpdateCamera()
        end
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    IsActive = not IsActive
    ToggleButton.Image = IsActive and "rbxasset://textures/ui/mouseLock_on@2x.png" 
        or "rbxasset://textures/ui/mouseLock_off@2x.png"

    if IsActive then
        -- Initialize
        Player.Character.Humanoid.AutoRotate = false
        workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
        
        -- Set initial rotation
        Yaw = Player.Character.HumanoidRootPart.Orientation.Y
        UpdateCamera()
        
        -- Connect input
        InputConnection = UserInputService.InputChanged:Connect(HandleInput)
        RenderConnection = RunService.RenderStepped:Connect(UpdateCamera)
    else
        -- Cleanup
        Player.Character.Humanoid.AutoRotate = true
        workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
        if InputConnection then InputConnection:Disconnect() end
        if RenderConnection then RenderConnection:Disconnect() end
    end
end)
