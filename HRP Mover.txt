local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local TARGET_POSITION = Vector3.new(100, 50, 200) -- Your coordinates
local SEPARATION_ACTIVE = false
local RealCharacter, CharacterClone

local function createCharacterClone()
    if not LocalPlayer.Character then return false end
    RealCharacter = LocalPlayer.Character
    RealCharacter.Archivable = true -- Must be true to clone

    -- Create a visual clone and position it where the character is
    CharacterClone = RealCharacter:Clone()
    CharacterClone.Parent = workspace
    CharacterClone:SetPrimaryPartCFrame(RealCharacter.HumanoidRootPart.CFrame)

    -- Make the real character invisible and non-collidable
    for _, part in ipairs(RealCharacter:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 1
            part.CanCollide = false
        end
    end

    -- Ensure the clone is visible but non-interactive
    for _, part in ipairs(CharacterClone:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 0
            part.CanCollide = false
            part.Anchored = true -- Keep the clone in place
        end
    end

    -- Remove the Humanoid from the clone to prevent movement
    local cloneHumanoid = CharacterClone:FindFirstChildOfClass("Humanoid")
    if cloneHumanoid then
        cloneHumanoid:Destroy()
    end
    return true
end

local function startSeparation()
    if SEPARATION_ACTIVE then return end
    if not createCharacterClone() then return end

    SEPARATION_ACTIVE = true
    local RealHRP = RealCharacter:FindFirstChild("HumanoidRootPart")

    -- Main loop to keep the real HRP at the target position
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not SEPARATION_ACTIVE or not RealHRP or not RealHRP.Parent then
            connection:Disconnect()
            return
        end
        -- Use CFrame to maintain the character's rotation and avoid Position
        RealHRP.CFrame = CFrame.new(TARGET_POSITION) * RealHRP.CFrame.Rotation
        RealHRP.Velocity = Vector3.new(0,0,0) -- Cancel any physics forces
    end)
end

local function stopSeparation()
    if not SEPARATION_ACTIVE then return end
    SEPARATION_ACTIVE = false

    -- Restore the real character's visibility
    if RealCharacter then
        for _, part in ipairs(RealCharacter:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 0
                part.CanCollide = true
            end
        end
        -- Move real character back to the clone's position
        RealCharacter:SetPrimaryPartCFrame(CharacterClone.HumanoidRootPart.CFrame)
    end

    -- Destroy the clone
    if CharacterClone then
        CharacterClone:Destroy()
        CharacterClone = nil
    end
end

-- Connect this to your 'Äž' keybind
local function toggleSeparation()
    if SEPARATION_ACTIVE then
        stopSeparation()
    else
        startSeparation()
    end
end
