-- HRP Separation Script - Educational Purpose Only
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Configuration
local SAFE_POSITION = Vector3.new(0, 1000, 0) -- Safe location above map
local DECOY_POSITION = humanoidRootPart.Position -- Original position for decoy
local isSeparationActive = false

local function createHRPSeparation()
    if isSeparationActive then return end
    isSeparationActive = true
    
    -- Store original HRP properties
    local originalCFrame = humanoidRootPart.CFrame
    local originalAnchored = humanoidRootPart.Anchored
    
    -- Create invisible HRP at safe location
    local safeHRP = humanoidRootPart:Clone()
    safeHRP.Name = "SafeHRP"
    safeHRP.Transparency = 1
    safeHRP.CanCollide = false
    safeHRP.Anchored = true
    safeHRP.CFrame = CFrame.new(SAFE_POSITION)
    safeHRP.Parent = character
    
    -- Modify original HRP to be visible decoy
    humanoidRootPart.Name = "DecoyHRP"
    humanoidRootPart.Anchored = true
    humanoidRootPart.CanCollide = false
    
    -- Maintain camera focus on decoy
    local camera = workspace.CurrentCamera
    camera.CameraSubject = character.Humanoid
    
    -- Continuous position maintenance
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not isSeparationActive then
            connection:Disconnect()
            return
        end
        
        -- Keep safe HRP anchored at safe location
        safeHRP.CFrame = CFrame.new(SAFE_POSITION)
        
        -- Optional: Make decoy HRP follow mouse or maintain position
        humanoidRootPart.CFrame = originalCFrame
    end)
    
    return {
        Disconnect = function()
            isSeparationActive = false
            connection:Disconnect()
            
            -- Restore original setup
            safeHRP:Destroy()
            humanoidRootPart.Name = "HumanoidRootPart"
            humanoidRootPart.Anchored = originalAnchored
            humanoidRootPart.CanCollide = true
        end
    }
end

-- Control functions
local separationHandler

local function startSeparation()
    if not separationHandler then
        separationHandler = createHRPSeparation()
        print("HRP separation activated - Hitbox moved to safe location")
    end
end

local function stopSeparation()
    if separationHandler then
        separationHandler.Disconnect()
        separationHandler = nil
        print("HRP separation deactivated - Normal hitbox restored")
    end
end

-- Input bindings (customize based on your executor)
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Insert then
        startSeparation()
    elseif input.KeyCode == Enum.KeyCode.Delete then
        stopSeparation()
    end
end)

print("HRP Separation Script Loaded")
print("Press Insert to activate, Delete to deactivate")
