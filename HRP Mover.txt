-- HRP Reanimation Script
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- CONFIGURATION
local TARGET_POSITION = Vector3.new(100, 500, 200) -- Set your desired HRP location here
local REANIM_ACTIVE = false

-- Internal Variables
local RealCharacter, FakeRig
local RealHRP, FakeHRP, FakeHumanoid

-- Function 1: Creates the duplicate character (rig) that you will see and control.
local function CreateFakeRig()
    if not LocalPlayer.Character then return false end

    RealCharacter = LocalPlayer.Character
    RealHRP = RealCharacter:WaitForChild("HumanoidRootPart")

    -- Enable archiving and clone the real character:cite[5]
    RealCharacter.Archivable = true
    FakeRig = RealCharacter:Clone()

    -- Configure the fake rig for client-side use
    for _, part in ipairs(FakeRig:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 0.1 -- Slightly transparent so you know it's the fake
            part.CanCollide = false
            part.Anchored = false
        end
    end

    -- Remove the original Humanoid to prevent interference
    local oldHum = FakeRig:FindFirstChildOfClass("Humanoid")
    if oldHum then oldHum:Destroy() end

    -- Create a new Humanoid for the fake rig:cite[9]
    FakeHumanoid = Instance.new("Humanoid")
    FakeHumanoid.Parent = FakeRig
    FakeHRP = FakeRig:WaitForChild("HumanoidRootPart")

    -- Position and parent the fake rig:cite[1]
    FakeRig.Parent = workspace
    FakeRig:SetPrimaryPartCFrame(RealHRP.CFrame) -- Spawns fake where your character is

    return true
end

-- Function 2: Hides the real character and anchors the real HRP.
local function SetupReanimation()
    if not CreateFakeRig() then return end

    -- Hide the real character on your client only:cite[5]
    for _, part in ipairs(RealCharacter:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 1 -- Fully transparent
            part.CanCollide = false
        end
    end

    -- Anchor the real HRP (your hitbox) at the target location
    RealHRP.Anchored = true
    RealHRP.CFrame = CFrame.new(TARGET_POSITION)

    -- CRITICAL: Redirect the camera to follow the FAKE rig, not the real HRP:cite[9]
    Camera.CameraSubject = FakeHumanoid

    REANIM_ACTIVE = true
    print("Reanimation Active | HRP anchored at: " .. tostring(TARGET_POSITION))
end

-- Function 3: Your movement keys (WASD) now control the fake rig.
local function SyncRigMovement()
    RunService.Heartbeat:Connect(function()
        if not REANIM_ACTIVE or not RealHRP or not FakeHRP then return end

        -- Force the real HRP to stay at the target location
        RealHRP.CFrame = CFrame.new(TARGET_POSITION)

        -- Basic movement controls for the fake rig
        local moveDirection = Vector3.new(0, 0, 0)
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection - FakeHRP.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection + FakeHRP.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - FakeHRP.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + FakeHRP.CFrame.RightVector
        end

        -- Apply the movement to the fake rig
        if moveDirection.Magnitude > 0 then
            moveDirection = moveDirection.Unit * 2
            FakeHRP.Position = FakeHRP.Position + moveDirection
        end
    end)
end

-- Function 4: Stops the reanimation and restores the normal state.
local function StopReanimation()
    if not REANIM_ACTIVE then return end
    REANIM_ACTIVE = false

    -- Restore the real character
    if RealCharacter then
        for _, part in ipairs(RealCharacter:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 0
                part.CanCollide = true
            end
        end
        RealHRP.Anchored = false

        -- Restore the camera to the real character:cite[9]
        local realHum = RealCharacter:FindFirstChildOfClass("Humanoid")
        if realHum then
            Camera.CameraSubject = realHum
        end
    end

    -- Destroy the fake rig
    if FakeRig then
        FakeRig:Destroy()
        FakeRig = nil
    end
    print("Reanimation Stopped")
end

-- Toggle with F key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F then
        if REANIM_ACTIVE then
            StopReanimation()
        else
            SetupReanimation()
            SyncRigMovement()
        end
    end
end)

-- Reconnect on respawn
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    if REANIM_ACTIVE then
        StopReanimation()
        task.wait(2)
        SetupReanimation()
        SyncRigMovement()
    end
end)

print("Reanimation System Loaded | Press F to toggle")
