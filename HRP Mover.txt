-- Enhanced HRP Teleport & Transparency Script
-- Client-Side, Executor Compatible

if not game:IsLoaded() then game.Loaded:Wait() end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Configuration: Set your desired coordinates and transparency here.
local TARGET_POSITION = Vector3.new(100, 50, 200) -- World coordinates (X, Y, Z)
local HRP_TRANSPARENCY = 0.5 -- 0 is fully visible, 1 is fully invisible.
local IS_ACTIVE = false

-- Core function to safely manipulate the HRP
local function manipulateHRP()
    local success, err = pcall(function()
        if not Character or not HumanoidRootPart or not HumanoidRootPart.Parent then
            error("HRP or Character is invalid. They may have been destroyed.")
        end

        -- Use CFrame to set position and preserve rotation, avoiding known bugs :cite[1].
        HumanoidRootPart.CFrame = CFrame.new(TARGET_POSITION) * HumanoidRootPart.CFrame.Rotation
        HumanoidRootPart.Transparency = HRP_TRANSPARENCY
        HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0) -- Stop physics-induced movement.
    end)

    if not success then
        warn("HRP Manipulation Error: " .. err)
    end
end

-- Function to toggle the effect on and off
local function toggleHRPControl()
    IS_ACTIVE = not IS_ACTIVE
    if IS_ACTIVE then
        print("HRP Control [ACTIVE] - HRP is being teleported and made transparent.")
        -- Run the manipulation in a loop while active.
        while IS_ACTIVE and task.wait(0.1) do -- Adjust the wait time for responsiveness.
            manipulateHRP()
        end
    else
        print("HRP Control [INACTIVE]")
    end
end

-- Robust key connection using UserInputService :cite[2]:cite[6]
local keyConnection
keyConnection = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    -- Check if the key is 'P' and ensure the game isn't using the input (like in a text box).
    if input.KeyCode == Enum.KeyCode.P and not gameProcessedEvent then
        toggleHRPControl()
    end
end)

-- Automatic re-initialization after character respawn
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    -- Wait for the character model to be fully loaded.
    local newHRP = newCharacter:WaitForChild("HumanoidRootPart")
    HumanoidRootPart = newHRP
    print("Character respawn detected. HRP Control has been re-linked.")

    -- If the control was active before respawn, re-activate it.
    if IS_ACTIVE then
        task.wait(0.5) -- Brief delay for character stabilization.
        toggleHRPControl()
    end
end)

print("HRP Teleport & Transparency Script Initialized Successfully.")
print("Press 'P' to toggle the effect. Current target: " .. tostring(TARGET_POSITION))
