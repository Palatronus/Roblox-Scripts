-- Client-Side HRP Illusion Script
-- This creates a visual separation effect on your client only.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

local TARGET_POSITION = Vector3.new(0, 500, 0) -- Position far above the map
local EFFECT_ACTIVE = false
local FakeHRP

local function createFakeHRP()
    local character = LocalPlayer.Character
    if not character then return nil end

    local realHRP = character:FindFirstChild("HumanoidRootPart")
    if not realHRP then return nil end

    -- Create a visible, anchored fake HRP at the target location
    FakeHRP = Instance.new("Part")
    FakeHRP.Name = "FakeHitbox"
    FakeHRP.Size = Vector3.new(2, 2, 1)
    FakeHRP.Transparency = 0.7 -- Semi-transparent
    FakeHRP.Color = Color3.new(1, 0, 0) -- Red color for visibility
    FakeHRP.Material = Enum.Material.Neon
    FakeHRP.CanCollide = false
    FakeHRP.Anchored = true
    FakeHRP.CFrame = CFrame.new(TARGET_POSITION)
    FakeHRP.Parent = workspace

    return FakeHRP
end

local function startEffect()
    if EFFECT_ACTIVE then return end

    local character = LocalPlayer.Character
    if not character then return end

    local realHRP = character:FindFirstChild("HumanoidRootPart")
    if not realHRP then return end

    -- Create the visual fake HRP
    if not createFakeHRP() then
        warn("Failed to create fake HRP")
        return
    end

    EFFECT_ACTIVE = true
    print("HRP illusion active. Visible hitbox is anchored, but server hitbox is on your character.")

    -- Apply a constant force to pull the real HRP towards the target
    -- Note: The server will frequently correct this, causing a "tug-of-war" effect
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.MaxForce = Vector3.new(40000, 40000, 40000)
    bodyVelocity.Parent = realHRP

    RunService.Heartbeat:Connect(function()
        if not EFFECT_ACTIVE or not realHRP or not realHRP.Parent then
            bodyVelocity:Destroy()
            return
        end

        -- Calculate direction to the target and apply velocity
        local direction = (TARGET_POSITION - realHRP.Position).Unit
        local distance = (TARGET_POSITION - realHRP.Position).Magnitude
        bodyVelocity.Velocity = direction * math.min(distance * 2, 100)

        -- Keep the fake HRP at the target position
        if FakeHRP then
            FakeHRP.CFrame = CFrame.new(TARGET_POSITION)
        end
    end)
end

local function stopEffect()
    if not EFFECT_ACTIVE then return end
    EFFECT_ACTIVE = false

    -- Destroy the fake HRP
    if FakeHRP then
        FakeHRP:Destroy()
        FakeHRP = nil
    end

    -- Remove forces from the real HRP
    local character = LocalPlayer.Character
    if character then
        local realHRP = character:FindFirstChild("HumanoidRootPart")
        if realHRP then
            for _, item in ipairs(realHRP:GetChildren()) do
                if item:IsA("BodyVelocity") then
                    item:Destroy()
                end
            end
        end
    end
    print("HRP illusion stopped.")
end

-- Toggle with the F key
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F then
        if EFFECT_ACTIVE then
            stopEffect()
        else
            startEffect()
        end
    end
end)
