[file name]: AI Bot Sf Prototypes.txt
[file content begin]
-- Ultra Simple Sword AI (Guaranteed Working)
print("=== Sword AI Starting ===")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
if not player then
    print("ERROR: No player found")
    return
end

print("Player: " .. player.Name)

-- Wait for character
if not player.Character then
    print("Waiting for character...")
    player.CharacterAdded:Wait()
end

wait(2) -- Ensure character loads

local character = player.Character
local humanoid = character:FindFirstChild("Humanoid")
local rootPart = character:FindFirstChild("HumanoidRootPart")

if not humanoid or not rootPart then
    print("ERROR: Missing humanoid or root part")
    return
end

print("Character loaded successfully")

-- Simple GUI
local gui = Instance.new("ScreenGui")
gui.Name = "SwordAI"
gui.Parent = game.CoreGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 60)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.3
frame.Parent = gui

local status = Instance.new("TextLabel")
status.Size = UDim2.new(1, -10, 1, -10)
status.Position = UDim2.new(0, 5, 0, 5)
status.BackgroundTransparency = 1
status.TextColor3 = Color3.new(1, 1, 1)
status.Text = "AI: READY"
status.Font = Enum.Font.SourceSansBold
status.TextSize = 16
status.TextXAlignment = Enum.TextXAlignment.Left
status.Parent = frame

-- Find sword function
local function getSword()
    -- Check character
    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Tool") then
            return item
        end
    end
    
    -- Check backpack
    local backpack = player:FindFirstChild("Backpack")
    if backpack then
        for _, item in pairs(backpack:GetChildren()) do
            if item:IsA("Tool") then
                return item
            end
        end
    end
    
    return nil
end

-- Equip sword
local sword = getSword()
if sword then
    sword.Parent = character
    print("Sword equipped: " .. sword.Name)
    status.Text = "AI: SWORD READY"
else
    print("WARNING: No sword found")
    status.Text = "AI: NO SWORD"
end

-- Main AI function
local function findTarget()
    local closest = nil
    local distance = 9999
    
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character then
            local targetRoot = p.Character:FindFirstChild("HumanoidRootPart")
            local targetHumanoid = p.Character:FindFirstChild("Humanoid")
            
            if targetRoot and targetHumanoid and targetHumanoid.Health > 0 then
                local dist = (targetRoot.Position - rootPart.Position).Magnitude
                if dist < distance and dist < 50 then
                    distance = dist
                    closest = p
                end
            end
        end
    end
    
    return closest, distance
end

-- Attack function
local lastAttack = 0
local function attack()
    if sword and sword.Parent == character then
        sword:Activate()
    end
end

-- Main loop
print("Starting AI loop...")
status.Text = "AI: RUNNING"

RunService.Heartbeat:Connect(function()
    -- Get target
    local target, distance = findTarget()
    
    if target and target.Character then
        local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
        
        if targetRoot then
            status.Text = "AI: TARGET " .. target.Name .. " (" .. math.floor(distance) .. ")"
            
            -- Face target
            rootPart.CFrame = CFrame.lookAt(rootPart.Position, targetRoot.Position)
            
            if distance < 15 then
                -- Close enough to attack
                humanoid:MoveTo(rootPart.Position) -- Stop moving
                
                if tick() - lastAttack > 1.5 then
                    attack()
                    lastAttack = tick()
                end
            else
                -- Move toward target
                humanoid:MoveTo(targetRoot.Position)
            end
        end
    else
        status.Text = "AI: NO TARGET"
        humanoid:MoveTo(rootPart.Position) -- Stop moving
    end
end)

print("=== Sword AI Started Successfully ===")
[file content end]
