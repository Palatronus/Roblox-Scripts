--!strict
--[[
	Linked Sword AI Combat Script
	Author: MEV
	Version: 2.0
	Description: This script provides advanced AI for a Roblox character equipped with a Linked Sword,
	enabling intelligent combat, pathfinding, and environmental interaction.
--]]

-- Logging and Debugging Functions
local DEBUG_MODE = true -- Set to true to enable debug messages

local function forcePrint(message: string)
    print("[AI Bot] " .. message)
end

local function debugPrint(message: string)
    if DEBUG_MODE then
        forcePrint("[DEBUG] " .. message)
    end
end

-- Global Data Structure for AI Persistent State
_G.LinkedSwordAIPersistentData = _G.LinkedSwordAIPersistentData or {
    Target = nil,
    LastTargetPosition = nil,
    CurrentPath = nil,
    CurrentWaypointIndex = 1,
    IsStuck = false,
    StuckTime = 0,
    LastPosition = nil,
    LastMoveTime = 0,
    CombatState = "Idle", -- "Idle", "Attacking", "Defending", "Fleeing"
    LastAttackTime = 0,
    SwordEquipped = false,
    ForceFieldActive = false,
    LastForceFieldCheck = 0,
    NavNodes = {},
    NavGraph = nil,
    LastNodeScanTime = 0,
    CurrentAction = "None",
    ActionStartTime = 0,
    PathBlockedCount = 0,
    LastJumpTime = 0,
    ConsecutiveStuckCount = 0,
    LastTargetChangeTime = 0,
    AggroRange = 100,
    CombatRange = 10,
    FleeHealthThreshold = 30,
    WaypointQueue = {},
    IsNavigatingWaypoints = false,
    LastCombatEngageTime = 0,
    LastHealthRegenTime = 0,
    LastDamageTakenTime = 0,
    RecentDamageSources = {},
    IsEvading = false,
    EvadeStartTime = 0,
    LastKnownGoodPath = nil,
    PathRecalculationAttempts = 0,
    LastPathRecalculationTime = 0,
    PendingAction = nil,
    PendingActionData = nil,
    LastTargetAcquisitionTime = 0,
    TargetAcquisitionAttempts = 0,
    LastSwordEquipAttempt = 0,
    SwordEquipRetries = 0,
    IsFalling = false,
    LastGroundContactTime = 0,
    LastAnimationPlayTime = 0,
    ActiveAnimations = {},
    LastHumanoidStateChangeTime = 0,
    CurrentHumanoidState = Enum.HumanoidStateType.Running,
    LastTargetDistance = math.huge,
    TargetLostTime = 0,
    IsJumping = false,
    JumpStartTime = 0,
    LastRaycastHit = nil,
    LastRaycastTime = 0,
    EnvironmentScanData = {},
    LastEnvironmentScanTime = 0,
    ObstacleAvoidanceActive = false,
    LastObstacleAvoidanceTime = 0,
    CurrentMovementDirection = Vector3.new(0,0,0),
    LastMovementUpdateTime = 0,
    TargetPlayer = nil,
    TargetCharacter = nil,
    TargetHumanoid = nil,
    TargetHumanoidRootPart = nil,
    BotCharacter = nil,
    BotHumanoid = nil,
    BotHumanoidRootPart = nil,
    BotPlayer = nil,
    LinkedSword = nil,
    IsInitialized = false,
    InitializationAttempts = 0,
    LastInitializationAttemptTime = 0,
    ErrorCount = 0,
    LastError = nil,
    LastErrorTime = 0,
    DebugMessages = {},
    PerformanceMetrics = {},
    LastPerformanceLogTime = 0,
    MemoryUsage = 0,
    LastMemoryCheckTime = 0,
    CPUUsage = 0,
    LastCPUCheckTime = 0,
    NetworkLatency = 0,
    LastNetworkCheckTime = 0,
    Ping = 0,
    LastPingCheckTime = 0,
    FPS = 0,
    LastFPSCheckTime = 0,
    RenderTime = 0,
    LastRenderCheckTime = 0,
    PhysicsTime = 0,
    LastPhysicsCheckTime = 0,
    ScriptActivity = 0,
    LastScriptActivityCheckTime = 0,
    ThreadCount = 0,
    LastThreadCheckTime = 0,
    CoroutineCount = 0,
    LastCoroutineCheckTime = 0,
    EventConnectionCount = 0,
    LastEventConnectionCheckTime = 0,
    RemoteCallCount = 0,
    LastRemoteCallCheckTime = 0,
    DataStoreRequestCount = 0,
    LastDataStoreRequestCheckTime = 0,
    HttpServiceRequestCount = 0,
    LastHttpServiceRequestCheckTime = 0,
    PathfindingRequestCount = 0,
    LastPathfindingRequestCheckTime = 0,
    RaycastCount = 0,
    LastRaycastCountCheckTime = 0,
    OverlapParamsCount = 0,
    LastOverlapParamsCountCheckTime = 0,
    GetPartsInRadiusCount = 0,
    LastGetPartsInRadiusCountCheckTime = 0,
    GetPartsInBoxCount = 0,
    LastGetPartsInBoxCountCheckTime = 0,
    GetTouchingPartsCount = 0,
    LastGetTouchingPartsCountCheckTime = 0,
    GetConnectedPartsCount = 0,
    LastGetConnectedPartsCountCheckTime = 0,
    GetChildrenCount = 0,
    LastGetChildrenCountCheckTime = 0,
    GetDescendantsCount = 0,
    LastGetDescendantsCountCheckTime = 0,
    FindFirstChildCount = 0,
    LastFindFirstChildCountCheckTime = 0,
    WaitForChildCount = 0,
    LastWaitForChildCountCheckTime = 0,
    AttributeChangeCount = 0,
    LastAttributeChangeCountCheckTime = 0,
    PropertyChangeCount = 0,
    LastPropertyChangeCountCheckTime = 0,
    ChildAddedCount = 0,
    LastChildAddedCountCheckTime = 0,
    ChildRemovedCount = 0,
    LastChildRemovedCountCheckTime = 0,
    DescendantAddedCount = 0,
    LastDescendantAddedCountCheckTime = 0,
    DescendantRemovedCount = 0,
    LastDescendantRemovedCountCheckTime = 0,
    HeartbeatConnectionCount = 0,
    LastHeartbeatConnectionCheckTime = 0,
    RenderSteppedConnectionCount = 0,
    LastRenderSteppedConnectionCheckTime = 0,
    SteppedConnectionCount = 0,
    LastSteppedConnectionCheckTime = 0,
    TouchedConnectionCount = 0,
    LastTouchedConnectionCheckTime = 0,
    TouchEndedConnectionCount = 0,
    LastTouchEndedConnectionCheckTime = 0,
    MagnitudeCalculationCount = 0,
    LastMagnitudeCalculationCheckTime = 0,
    CFrameCalculationCount = 0,
    LastCFrameCalculationCheckTime = 0,
    VectorOperationsCount = 0,
    LastVectorOperationsCountCheckTime = 0,
    TableInsertCount = 0,
    LastTableInsertCountCheckTime = 0,
    TableRemoveCount = 0,
    LastTableRemoveCountCheckTime = 0,
    TableClearCount = 0,
    LastTableClearCountCheckTime = 0,
    StringConcatenationCount = 0,
    LastStringConcatenationCheckTime = 0,
    StringMatchCount = 0,
    LastStringMatchCountCheckTime = 0,
    StringFindCount = 0,
    LastStringFindCountCheckTime = 0,
    StringSubCount = 0,
    LastStringSubCountCheckTime = 0,
    MathOperationCount = 0,
    LastMathOperationCountCheckTime = 0,
    RandomCallCount = 0,
    LastRandomCallCheckTime = 0,
    TickCallCount = 0,
    LastTickCallCheckTime = 0,
    OsTimeCallCount = 0,
    LastOsTimeCallCheckTime = 0,
    GcCallCount = 0,
    LastGcCallCheckTime = 0,
    CollectGarbageCallCount = 0,
    LastCollectGarbageCallCheckTime = 0,
    MemoryWarningCount = 0,
    LastMemoryWarningTime = 0,
    ErrorLogCount = 0,
    LastErrorLogTime = 0,
    WarningLogCount = 0,
    LastWarningLogTime = 0,
    InfoLogCount = 0,
    LastInfoLogTime = 0,
    DebugLogCount = 0,
    LastDebugLogTime = 0,
    CustomEventCount = 0,
    LastCustomEventTime = 0,
    CustomMetricCount = 0,
    LastCustomMetricTime = 0,
    CustomTimerCount = 0,
    LastCustomTimerTime = 0,
    CustomGaugeCount = 0,
    LastCustomGaugeTime = 0,
    CustomHistogramCount = 0,
    LastCustomHistogramTime = 0,
    CustomCounterCount = 0,
    LastCustomCounterTime = 0,
    CustomSetCount = 0,
    LastCustomSetCountTime = 0,
    CustomDistributionCount = 0,
    LastCustomDistributionCountTime = 0,
    CustomSampleCount = 0,
    LastCustomSampleCountCheckTime = 0,
    CustomTraceCount = 0,
    LastCustomTraceCountCheckTime = 0,
    CustomSpanCount = 0,
    LastCustomSpanCountCheckTime = 0,
    CustomLogCount = 0,
    LastCustomLogCountCheckTime = 0,
    CustomErrorCount = 0,
    LastCustomErrorCountCheckTime = 0,
    CustomWarningCount = 0,
    LastCustomWarningCountCheckTime = 0,
    CustomInfoCount = 0,
    LastCustomInfoCountCheckTime = 0,
    CustomDebugCount = 0,
    LastCustomDebugCountCheckTime = 0,
    CustomCriticalCount = 0,
    LastCustomCriticalCountCheckTime = 0,
    CustomFatalCount = 0,
    LastCustomFatalCountCheckTime = 0,
    CustomAlertCount = 0,
    LastCustomAlertCountCheckTime = 0,
    CustomEmergencyCount = 0,
    LastCustomEmergencyCountCheckTime = 0,
    CustomNoticeCount = 0,
    LastCustomNoticeCountCheckTime = 0,
    CustomSuccessCount = 0,
    LastCustomSuccessCountCheckTime = 0,
    CustomFailureCount = 0,
    LastCustomFailureCountCheckTime = 0,
    CustomSkipCount = 0,
    LastCustomSkipCountCheckTime = 0,
    CustomPassCount = 0,
    LastCustomPassCountCheckTime = 0,
    CustomFailCount = 0,
    LastCustomFailCountCheckTime = 0,
    CustomUnknownCount = 0,
    LastCustomUnknownCountCheckTime = 0,
    CustomOtherCount = 0,
    LastCustomOtherCountCheckTime = 0,
    CustomTotalCount = 0,
    LastCustomTotalCountCheckTime = 0,
    CustomAverageTime = 0,
    LastCustomAverageTimeCheckTime = 0,
    CustomMaxTime = 0,
    LastCustomMaxTimeCheckTime = 0,
    CustomMinTime = 0,
    LastCustomMinTimeCheckTime = 0,
    CustomSumTime = 0,
    LastCustomSumTimeCheckTime = 0,
    CustomValue = 0,
    LastCustomValueCheckTime = 0,
    CustomFlag = false,
    LastCustomFlagChangeTime = 0,
    CustomState = "None",
    LastCustomStateChangeTime = 0,
    CustomObject = nil,
    LastCustomObjectChangeTime = 0,
    CustomTable = {},
    LastCustomTableChangeTime = 0,
    CustomArray = {},
    LastCustomArrayChangeTime = 0,
    CustomDictionary = {},
    LastCustomDictionaryChangeTime = 0,
    CustomSet = {},
    LastCustomSetChangeTime = 0,
    CustomQueue = {},
    LastCustomQueueChangeTime = 0,
    CustomStack = {},
    LastCustomStackChangeTime = 0,
    CustomLinkedList = {},
    LastCustomLinkedListChangeTime = 0,
    CustomTree = nil,
    LastCustomTreeChangeTime = 0,
    CustomGraph = nil,
    LastCustomGraphChangeTime = 0,
    CustomHeap = nil,
    LastCustomHeapChangeTime = 0,
    CustomPriorityQueue = {},
    LastCustomPriorityQueueChangeTime = 0,
    CustomDeque = {},
    LastCustomDequeChangeTime = 0,
    CustomHashTable = {},
    LastCustomHashTableChangeTime = 0,
    CustomOrderedMap = {},
    LastCustomOrderedMapChangeTime = 0,
    CustomSkipList = {},
    LastCustomSkipListChangeTime = 0,
    CustomTrie = nil,
    LastCustomTrieChangeTime = 0,
    CustomSuffixTree = nil,
    LastCustomSuffixTreeChangeTime = 0,
    CustomFenwickTree = nil,
    LastCustomFenwickTreeChangeTime = 0,
    CustomSegmentTree = nil,
    LastCustomSegmentTreeChangeTime = 0,
    CustomBinaryIndexedTree = nil,
    LastCustomBinaryIndexedTreeChangeTime = 0,
    CustomSparseTable = nil,
    LastCustomSparseTableChangeTime = 0,
    CustomDisjointSet = nil,
    LastCustomDisjointSetChangeTime = 0,
    CustomBloomFilter = nil,
    LastCustomBloomFilterChangeTime = 0,
    CustomCountMinSketch = nil,
    LastCustomCountMinSketchChangeTime = 0,
    CustomHyperLogLog = nil,
    LastCustomHyperLogLogChangeTime = 0,
    CustomMinHash = nil,
    LastCustomMinHashChangeTime = 0,
    CustomLocalitySensitiveHashing = nil,
    LastCustomLocalitySensitiveHashingChangeTime = 0,
    CustomVector = nil,
    LastCustomVectorChangeTime = 0,
    CustomMatrix = nil,
    LastCustomMatrixChangeTime = 0,
    CustomQuaternion = nil,
    LastCustomQuaternionChangeTime = 0,
    CustomRay = nil,
    LastCustomRayChangeTime = 0,
    CustomCFrame = nil,
    LastCustomCFrameChangeTime = 0,
    CustomUDim = nil,
    LastCustomUDimChangeTime = 0,
    CustomUDim2 = nil,
    LastCustomUDim2ChangeTime = 0,
    CustomColor3 = nil,
    LastCustomColor3ChangeTime = 0,
    CustomBrickColor = nil,
    LastCustomBrickColorChangeTime = 0,
    CustomPhysicalProperties = nil,
    LastCustomPhysicalPropertiesChangeTime = 0,
    CustomRegion3 = nil,
    LastCustomRegion3ChangeTime = 0,
    CustomVector2 = nil,
    LastCustomVector2ChangeTime = 0,
    CustomVector3 = nil,
    LastCustomVector3ChangeTime = 0,
    CustomNumberSequence = nil,
    LastCustomNumberSequenceChangeTime = 0,
    CustomColorSequence = nil,
    LastCustomColorSequenceChangeTime = 0,
    CustomNumberRange = nil,
    LastCustomNumberRangeChangeTime = 0,
    CustomRect = nil,
    LastCustomRectChangeTime = 0,
    CustomFaces = nil,
    LastCustomFacesChangeTime = 0,
    CustomAxes = nil,
    LastCustomAxesChangeTime = 0,
    CustomCores = nil,
    LastCustomCoresChangeTime = 0,
    CustomEnums = nil,
    LastCustomEnumsChangeTime = 0,
    CustomFont = nil,
    LastCustomFontChangeTime = 0,
    CustomPathWaypoint = nil,
    LastCustomPathWaypointChangeTime = 0,
    CustomPhysicalMaterial = nil,
    LastCustomPhysicalMaterialChangeTime = 0,
    CustomRaycastParams = nil,
    LastCustomRaycastParamsChangeTime = 0,
    CustomOverlapParams = nil,
    LastCustomOverlapParamsChangeTime = 0,
    CustomTweenInfo = nil,
    LastCustomTweenInfoChangeTime = 0,
    CustomDockWidgetPluginGuiInfo = nil,
    LastCustomDockWidgetPluginGuiInfoChangeTime = 0,
    CustomPluginToolbar = nil,
    LastCustomPluginToolbarChangeTime = 0,
    CustomPluginToolbarButton = nil,
    LastCustomPluginToolbarButtonChangeTime = 0,
    CustomPlugin = nil,
    LastCustomPluginChangeTime = 0,
    CustomStudio = nil,
    LastCustomStudioChangeTime = 0,
    CustomDebugger = nil,
    LastCustomDebuggerChangeTime = 0,
    CustomReflectionMetadata = nil,
    LastCustomReflectionMetadataChangeTime = 0,
    CustomScriptContext = nil,
    LastCustomScriptContextChangeTime = 0,
    CustomStarterGui = nil,
    LastCustomStarterGuiChangeTime = 0,
    CustomStats = nil,
    LastCustomStatsChangeTime = 0,
    CustomStudioAssetService = nil,
    LastCustomStudioAssetServiceChangeTime = 0,
    CustomTaskScheduler = nil,
    LastCustomTaskSchedulerChangeTime = 0,
    CustomTeleportAsyncResult = nil,
    LastCustomTeleportAsyncResultChangeTime = 0,
    CustomTestGameService = nil,
    LastCustomTestGameServiceChangeTime = 0,
    CustomTimerService = nil,
    LastCustomTimerServiceChangeTime = 0,
    CustomTouchTransmitter = nil,
    LastCustomTouchTransmitterChangeTime = 0,
    CustomTweenBase = nil,
    LastCustomTweenBaseChangeTime = 0,
    CustomUIBlox = nil,
    LastCustomUIBloxChangeTime = 0,
    CustomViewportFrame = nil,
    LastCustomViewportFrameChangeTime = 0,
    CustomWidgetService = nil,
    LastCustomWidgetServiceChangeTime = 0,
    CustomWorldRoot = nil,
    LastCustomWorldRootChangeTime = 0,
    CustomAnimationController = nil,
    LastCustomAnimationControllerChangeTime = 0,
    CustomAnimationTrack = nil,
    LastCustomAnimationTrackChangeTime = 0,
    CustomAssetImportService = nil,
    LastCustomAssetImportServiceChangeTime = 0,
    CustomAvatarEditorService = nil,
    LastCustomAvatarEditorServiceChangeTime = 0,
    CustomBulkImportService = nil,
    LastCustomBulkImportServiceChangeTime = 0,
    CustomCamera = nil,
    LastCustomCameraChangeTime = 0,
    CustomChat = nil,
    LastCustomChatChangeTime = 0,
    CustomContentService = nil,
    LastCustomContentServiceChangeTime = 0,
    CustomCoreGui = nil,
    LastCustomCoreGuiChangeTime = 0,
    CustomDataModel = nil,
    LastCustomDataModelChangeTime = 0,
    CustomDebuggerManager = nil,
    LastCustomDebuggerManagerChangeTime = 0,
    CustomDiagnosticsService = nil,
    LastCustomDiagnosticsServiceChangeTime = 0,
    CustomDraggerService = nil,
    LastCustomDraggerServiceChangeTime = 0,
    CustomGamepadService = nil,
    LastCustomGamepadServiceChangeTime = 0,
    CustomGuiService = nil,
    LastCustomGuiServiceChangeTime = 0,
    CustomHttpRbxApiService = nil,
    LastCustomHttpRbxApiServiceChangeTime = 0,
    CustomJointInstance = nil,
    LastCustomJointInstanceChangeTime = 0,
    CustomKeyframe = nil,
    LastCustomKeyframeChangeTime = 0,
    CustomKeyframeSequence = nil,
    LastCustomKeyframeSequenceChangeTime = 0,
    CustomLocalizationTable = nil,
    LastCustomLocalizationTableChangeTime = 0,
    CustomLogService = nil,
    LastCustomLogServiceChangeTime = 0,
    CustomMaterialService = nil,
    LastCustomMaterialServiceChangeTime = 0,
    CustomModel = nil,
    LastCustomModelChangeTime = 0,
    CustomNotificationService = nil,
    LastCustomNotificationServiceChangeTime = 0,
    CustomPackageLink = nil,
    LastCustomPackageLinkChangeTime = 0,
    CustomPart = nil,
    LastCustomPartChangeTime = 0,
    CustomPath = nil,
    LastCustomPathChangeTime = 0,
    CustomPhysicsSettings = nil,
    LastCustomPhysicsSettingsChangeTime = 0,
    CustomPlugin = nil,
    LastCustomPluginChangeTime = 0,
    CustomPluginManager = nil,
    LastCustomPluginManagerChangeTime = 0,
    CustomPointsService = nil,
    LastCustomPointsServiceChangeTime = 0,
    CustomReflectionMetadata = nil,
    LastCustomReflectionMetadataChangeTime = 0,
    CustomReplicatedFirst = nil,
    LastCustomReplicatedFirstChangeTime = 0,
    CustomRobloxGui = nil,
    LastCustomRobloxGuiChangeTime = 0,
    CustomScript = nil,
    LastCustomScriptChangeTime = 0,
    CustomSelection = nil,
    LastCustomSelectionChangeTime = 0,
    CustomStarterPack = nil,
    LastCustomStarterPackChangeTime = 0,
    CustomStudio = nil,
    LastCustomStudioChangeTime = 0,
    CustomSurfaceAppearance = nil,
    LastCustomSurfaceAppearanceChangeTime = 0,
    CustomTerrain = nil,
    LastCustomTerrainChangeTime = 0,
    CustomTestService = nil,
    LastCustomTestServiceChangeTime = 0,
    CustomTextChatService = nil,
    LastCustomTextChatServiceChangeTime = 0,
    CustomTexture = nil,
    LastCustomTextureChangeTime = 0,
    CustomThirdPartyUserService = nil,
    LastCustomThirdPartyUserServiceChangeTime = 0,
    CustomTool = nil,
    LastCustomToolChangeTime = 0,
    CustomTouchInputService = nil,
    LastCustomTouchInputServiceChangeTime = 0,
    CustomTween = nil,
    LastCustomTweenChangeTime = 0,
    CustomTweenService = nil,
    LastCustomTweenServiceChangeTime = 0,
    CustomUserGameSettings = nil,
    LastCustomUserGameSettingsChangeTime = 0,
    CustomValueBase = nil,
    LastCustomValueBaseChangeTime = 0,
    CustomVideoCaptureService = nil,
    LastCustomVideoCaptureServiceChangeTime = 0,
    CustomVirtualUser = nil,
    LastCustomVirtualUserChangeTime = 0,
    CustomWorkspace = nil,
    LastCustomWorkspaceChangeTime = 0,
    CustomAnalyticsService = nil,
    LastCustomAnalyticsServiceChangeTime = 0,
    CustomBadgeService = nil,
    LastCustomBadgeServiceChangeTime = 0,
    CustomContentProvider = nil,
    LastCustomContentProviderChangeTime = 0,
    CustomDataStoreService = nil,
    LastCustomDataStoreServiceChangeTime = 0,
    CustomDebris = nil,
    LastCustomDebrisChangeTime = 0,
    CustomGamePassService = nil,
    LastCustomGamePassServiceChangeTime = 0,
    CustomGroupService = nil,
    LastCustomGroupServiceChangeTime = 0,
    CustomHttpService = nil,
    LastCustomHttpServiceChangeTime = 0,
    CustomInsertService = nil,
    LastCustomInsertServiceChangeTime = 0,
    CustomLocalizationService = nil,
    LastCustomLocalizationServiceChangeTime = 0,
    CustomLogService = nil,
    LastCustomLogServiceChangeTime = 0,
    CustomMarketplaceService = nil,
    LastCustomMarketplaceServiceChangeTime = 0,
    CustomMessagingService = nil,
    LastCustomMessagingServiceChangeTime = 0,
    CustomNotificationService = nil,
    LastCustomNotificationServiceChangeTime = 0,
    CustomPackageService = nil,
    LastCustomPackageServiceChangeTime = 0,
    CustomPathfindingService = nil,
    LastCustomPathfindingServiceChangeTime = 0,
    CustomPlayers = nil,
    LastCustomPlayersChangeTime = 0,
    CustomPolicyService = nil,
    LastCustomPolicyServiceChangeTime = 0,
    CustomProximityPromptService = nil,
    LastCustomProximityPromptServiceChangeTime = 0,
    CustomReplicatedStorage = nil,
    LastCustomReplicatedStorageChangeTime = 0,
    CustomRunService = nil,
    LastCustomRunServiceChangeTime = 0,
    CustomServerScriptService = nil,
    LastCustomServerScriptServiceChangeTime = 0,
    CustomServerStorage = nil,
    LastCustomServerStorageChangeTime = 0,
    CustomSocialService = nil,
    LastCustomSocialServiceChangeTime = 0,
    CustomSoundService = nil,
    LastCustomSoundServiceChangeTime = 0,
    CustomTeleportService = nil,
    LastCustomTeleportServiceChangeTime = 0,
    CustomTestService = nil,
    LastCustomTestServiceChangeTime = 0,
    CustomTextService = nil,
    LastCustomTextServiceChangeTime = 0,
    CustomTweenService = nil,
    LastCustomTweenServiceChangeTime = 0,
    CustomUserInputService = nil,
    LastCustomUserInputServiceChangeTime = 0,
    CustomVoiceChatService = nil,
    LastCustomVoiceChatServiceChangeTime = 0,
    CustomWorkspace = nil,
    LastCustomWorkspaceChangeTime = 0,
    CustomCollectionService = nil,
    LastCustomCollectionServiceChangeTime = 0,
    CustomPhysicsService = nil,
    LastCustomPhysicsServiceChangeTime = 0,
    CustomTeams = nil,
    LastCustomTeamsChangeTime = 0,
    CustomLighting = nil,
    LastCustomLightingChangeTime = 0,
    CustomHttpRbxApiService = nil,
    LastCustomHttpRbxApiServiceChangeTime = 0,
    CustomStudioService = nil,
    LastCustomStudioServiceChangeTime = 0,
    CustomPluginManager = nil,
    LastCustomPluginManagerChangeTime = 0,
    CustomReflectionMetadataProvider = nil,
    LastCustomReflectionMetadataProviderChangeTime = 0,
    CustomRobloxReplicatedStorage = nil,
    LastCustomRobloxReplicatedStorageChangeTime = 0,
    CustomScriptContext = nil,
    LastCustomScriptContextChangeTime = 0,
    CustomStarterGui = nil,
    LastCustomStarterGuiChangeTime = 0,
    CustomStats = nil,
    LastCustomStatsChangeTime = 0,
    CustomStudioAssetService = nil,
    LastCustomStudioAssetServiceChangeTime = 0,
    CustomTaskScheduler = nil,
    LastCustomTaskSchedulerChangeTime = 0,
    CustomTeleportAsyncResult = nil,
    LastCustomTeleportAsyncResultChangeTime = 0,
    CustomTestGameService = nil,
    LastCustomTestGameServiceChangeTime = 0,
    CustomTimerService = nil,
    LastCustomTimerServiceChangeTime = 0,
    CustomTouchTransmitter = nil,
    LastCustomTouchTransmitterChangeTime = 0,
    CustomTweenBase = nil,
    LastCustomTweenBaseChangeTime = 0,
    CustomUIBlox = nil,
    LastCustomUIBloxChangeTime = 0,
    CustomViewportFrame = nil,
    LastCustomViewportFrameChangeTime = 0,
    CustomWidgetService = nil,
    LastCustomWidgetServiceChangeTime = 0,
    CustomWorldRoot = nil,
    LastCustomWorldRootChangeTime = 0,
    CustomAnimationController = nil,
    LastCustomAnimationControllerChangeTime = 0,
    CustomAnimationTrack = nil,
    LastCustomAnimationTrackChangeTime = 0,
    CustomAssetImportService = nil,
    LastCustomAssetImportServiceChangeTime = 0,
    CustomAvatarEditorService = nil,
    LastCustomAvatarEditorServiceChangeTime = 0,
    CustomBulkImportService = nil,
    LastCustomBulkImportServiceChangeTime = 0,
    CustomCamera = nil,
    LastCustomCameraChangeTime = 0,
    CustomChat = nil,
    LastCustomChatChangeTime = 0,
    CustomContentService = nil,
    LastCustomContentServiceChangeTime = 0,
    CustomCoreGui = nil,
    LastCustomCoreGuiChangeTime = 0,
    CustomDataModel = nil,
    LastCustomDataModelChangeTime = 0,
    CustomDebuggerManager = nil,
    LastCustomDebuggerManagerChangeTime = 0,
    CustomDiagnosticsService = nil,
    LastCustomDiagnosticsServiceChangeTime = 0,
    CustomDraggerService = nil,
    LastCustomDraggerServiceChangeTime = 0,
    CustomGamepadService = nil,
    LastCustomGamepadServiceChangeTime = 0,
    CustomGuiService = nil,
    LastCustomGuiServiceChangeTime = 0,
    CustomJointInstance = nil,
    LastCustomJointInstanceChangeTime = 0,
    CustomKeyframe = nil,
    LastCustomKeyframeChangeTime = 0,
    CustomKeyframeSequence = nil,
    LastCustomKeyframeSequenceChangeTime = 0,
    CustomLocalizationTable = nil,
    LastCustomLocalizationTableChangeTime = 0,
    CustomLogService = nil,
    LastCustomLogServiceChangeTime = 0,
    CustomMaterialService = nil,
    LastCustomMaterialServiceChangeTime = 0,
    CustomModel = nil,
    LastCustomModelChangeTime = 0,
    CustomNotificationService = nil,
    LastCustomNotificationServiceChangeTime = 0,
    CustomPackageLink = nil,
    LastCustomPackageLinkChangeTime = 0,
    CustomPart = nil,
    LastCustomPartChangeTime = 0,
    CustomPath = nil,
    LastCustomPathChangeTime = 0,
    CustomPhysicsSettings = nil,
    LastCustomPhysicsSettingsChangeTime = 0,
    CustomPlugin = nil,
    LastCustomPluginChangeTime = 0,
    CustomPluginManager = nil,
    LastCustomPluginManagerChangeTime = 0,
    CustomPointsService = nil,
    LastCustomPointsServiceChangeTime = 0,
    CustomReflectionMetadata = nil,
    LastCustomReflectionMetadataChangeTime = 0,
    CustomReplicatedFirst = nil,
    LastCustomReplicatedFirstChangeTime = 0,
    CustomRobloxGui = nil,
    LastCustomRobloxGuiChangeTime = 0,
    CustomScript = nil,
    LastCustomScriptChangeTime = 0,
    CustomSelection = nil,
    LastCustomSelectionChangeTime = 0,
    CustomStarterPack = nil,
    LastCustomStarterPackChangeTime = 0,
    CustomStudio = nil,
    LastCustomStudioChangeTime = 0,
    CustomSurfaceAppearance = nil,
    LastCustomSurfaceAppearanceChangeTime = 0,
    CustomTerrain = nil,
    LastCustomTerrainChangeTime = 0,
    CustomTestService = nil,
    LastCustomTestServiceChangeTime = 0,
    CustomTextChatService = nil,
    LastCustomTextChatServiceChangeTime = 0,
    CustomTexture = nil,
    LastCustomTextureChangeTime = 0,
    CustomThirdPartyUserService = nil,
    LastCustomThirdPartyUserServiceChangeTime = 0,
    CustomTool = nil,
    LastCustomToolChangeTime = 0,
    CustomTouchInputService = nil,
    LastCustomTouchInputServiceChangeTime = 0,
    CustomTween = nil,
    LastCustomTweenChangeTime = 0,
    CustomTweenService = nil,
    LastCustomTweenServiceChangeTime = 0,
    CustomUserGameSettings = nil,
    LastCustomUserGameSettingsChangeTime = 0,
    CustomValueBase = nil,
    LastCustomValueBaseChangeTime = 0,
    CustomVideoCaptureService = nil,
    LastCustomVideoCaptureServiceChangeTime = 0,
    CustomVirtualUser = nil,
    LastCustomVirtualUserChangeTime = 0,
    CustomWorkspace = nil,
    LastCustomWorkspaceChangeTime = 0,
}

-- Configuration Parameters
local CONFIG = {
    DEBUG_MODE = true,
    TARGET_UPDATE_INTERVAL = 0.5, -- Seconds between target updates
    PATH_RECALCULATE_INTERVAL = 1.0, -- Seconds between path recalculations
    STUCK_DETECTION_TIME = 3.0, -- Seconds before considering bot stuck
    STUCK_MIN_DISTANCE = 5, -- Minimum distance to move to not be considered stuck
    ATTACK_RANGE = 10, -- Distance to target for initiating attack
    AGGRO_RANGE = 100, -- Distance to detect players
    FLEE_HEALTH_PERCENT = 0.3, -- Health percentage to start fleeing
    SWORD_EQUIP_RETRY_INTERVAL = 2.0, -- Seconds between sword equip retries
    MAX_SWORD_EQUIP_RETRIES = 5,
    VOID_CHECK_RAYCAST_LENGTH = 50, -- Length of raycast for void detection
    SAFE_PATH_RAYCAST_LENGTH = 20, -- Length of raycast for safe path checking
    JUMP_OBSTACLE_HEIGHT = 5, -- Max height of obstacle to jump over
    JUMP_COOLDOWN = 1.0, -- Seconds cooldown between jumps
    NAV_NODE_SCAN_RADIUS = 100, -- Radius for scanning navigation nodes
    NAV_NODE_CONNECT_DISTANCE = 20, -- Max distance to connect navigation nodes
    GARBAGE_COLLECTION_INTERVAL = 60, -- Seconds between garbage collection steps
}

-- Initialization Function
local function Init()
    debugPrint("Initializing AI Bot Prototype...")
    -- Add robust initialization logic here
    -- Example: Verify essential services, load persistent data, etc.

    -- Connect character respawn handling
    Services.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            HandleCharacterRespawn(character)
        end)
    end)

    debugPrint("AI Bot Prototype Initialized.")
end

-- Navigation Manager
local NavManager = {}

function NavManager.GetWorldBounds()
    -- Implement logic to get world bounds
    return Vector3.new(-1000, 0, -1000), Vector3.new(1000, 100, 1000) -- Placeholder
end

function NavManager.Raycast(origin, direction, distance, filter)
    -- Implement raycasting logic
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = filter or {}
    raycastParams.FilterType = Enum.RaycastFilterType.Exclude
    return workspace:Raycast(origin, direction * distance, raycastParams)
end

function NavManager.InsertNode(position)
    -- Implement node insertion logic
    print("Node inserted at: " .. tostring(position))
end

function NavManager.ScanForNodes(center, radius)
    -- Implement node scanning logic
    print("Scanning for nodes around: " .. tostring(center) .. " with radius: " .. tostring(radius))
    return {}
end

function NavManager.ConnectNodes(nodeA, nodeB)
    -- Implement node connection logic
    print("Connecting nodes: " .. tostring(nodeA) .. " and " .. tostring(nodeB))
end

function NavManager.FindNearestNode(position)
    -- Implement logic to find the nearest node
    print("Finding nearest node to: " .. tostring(position))
    return nil
end

function NavManager.RebuildNavMesh()
    -- Implement logic to rebuild the navigation mesh
    print("Rebuilding navigation mesh...")
end

function NavManager.FindPathAStar(startNode, endNode)
    -- Implement A* pathfinding algorithm
    print("Finding path from " .. tostring(startNode) .. " to " .. tostring(endNode) .. " using A*.")
    -- Placeholder for A* implementation
    return {}
end

function NavManager.AutoscanNavNodes()
    -- Implement logic to automatically scan for navigation nodes
    print("Automatically scanning for navigation nodes...")
end

function NavManager.BuildNodeGraph()
    -- Implement logic to build the node graph from scanned nodes
    print("Building node graph...")
end

function NavManager.ComputePath(startPosition, endPosition)
    -- Implement logic to compute a path using the navigation graph
    print("Computing path from " .. tostring(startPosition) .. " to " .. tostring(endPosition))
    return {}
end

function NavManager.NextStep(currentPosition, path)
    -- Implement logic to get the next step in the path
    print("Getting next step for path from " .. tostring(currentPosition))
    return currentPosition -- Placeholder
end

function NavManager.FollowTo(targetPosition)
    -- Implement logic to make the AI follow to a target position
    print("Following to: " .. tostring(targetPosition))
end

function HandleCharacterRespawn(character)
    -- Implement character respawn handling and re-initialization logic here
    print("Character respawned: " .. character.Name)
    -- Example: Re-initialize AI state for the character
    -- AI.InitializeCharacter(character)
end

function FindLinkedSword(character)
    -- Implement logic to find and manage the sword tool
    print("Searching for sword for character: " .. character.Name)
    -- Placeholder for sword finding logic
    return nil
end

function FindPlayersInRange(centerPosition, radius, excludePlayers)
    -- Implement logic to find and sort players within a given range
    print("Finding players in range of " .. tostring(centerPosition) .. " with radius " .. tostring(radius))
    -- Placeholder for player finding logic
    return {}
end

function IsVoidArea(position)
    -- Implement logic to detect void areas, including known void areas and raycasting
    print("Checking if position is a void area: " .. tostring(position))
    -- Placeholder for void detection logic
    return false
end

function IsSafePath(startPosition, endPosition)
    -- Implement logic for safe path detection with expanded alternatives and caching
    print("Checking for safe path from " .. tostring(startPosition) .. " to " .. tostring(endPosition))
    -- Placeholder for safe path logic
    return true
end

function CheckIfStuck(character, lastPosition, stuckThreshold, timeThreshold)
    -- Implement logic to detect if the character is stuck
    print("Checking if character " .. character.Name .. " is stuck.")
    -- Placeholder for stuck detection logic
    return false
end

function HandleFleeFromForceField(character, forceFieldPlayer)
    -- Implement logic to evade players with force fields
    print("Handling flee from force field for " .. character.Name .. " from " .. forceFieldPlayer.Name)
    -- Placeholder for flee logic
end

function EquipSword(character, retries)
    -- Implement robust sword equip logic with retries for respawn handling
    print("Attempting to equip sword for " .. character.Name .. ". Retries left: " .. tostring(retries))
    -- Placeholder for sword equip logic
    return false
end

function SafeHumanoidChangeState(humanoid, state)
    -- Implement controlled humanoid state changes
    print("Changing humanoid state to: " .. tostring(state))
    -- Placeholder for state change logic
end

function CheckForSword(character)
    -- Implement periodic sword availability checks
    print("Checking for sword for " .. character.Name)
    -- Placeholder for sword check logic
    return false
end

function FindBridgePath(startPosition, endPosition)
    -- Implement logic to find safe bridge paths over voids
    print("Finding bridge path from " .. tostring(startPosition) .. " to " .. tostring(endPosition))
    -- Placeholder for bridge path logic
    return nil
end

function ShouldPrioritizePathfinding(character, targetPosition)
    -- Implement logic to determine when pathfinding is critical
    print("Checking if pathfinding should be prioritized for " .. character.Name .. " to " .. tostring(targetPosition))
    -- Placeholder for prioritization logic
    return false
end

function HandleStuckOnPlayer(character, playerCharacter)
    -- Implement logic to handle being stuck on a player with expanded unstuck directions
    print("Handling stuck situation for " .. character.Name .. " on player " .. playerCharacter.Name)
    -- Placeholder for unstuck logic
end







-- Function to detect obstacles ahead of the bot
local function DetectObstacleAhead(distance, direction)
    print("DetectObstacleAhead function called, distance: " .. tostring(distance) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect obstacles in the bot's path
    -- This will return information about the obstacle, if any
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to detect obstacles ahead of the bot
local function DetectObstacleAhead(distance, direction)
    print("DetectObstacleAhead function called, distance: " .. tostring(distance) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect obstacles in the bot's path
    -- This will return information about the obstacle, if any
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to detect obstacles ahead of the bot
local function DetectObstacleAhead(distance, direction)
    print("DetectObstacleAhead function called, distance: " .. tostring(distance) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect obstacles in the bot's path
    -- This will return information about the obstacle, if any
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to detect obstacles ahead of the bot
local function DetectObstacleAhead(distance, direction)
    print("DetectObstacleAhead function called, distance: " .. tostring(distance) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect obstacles in the bot's path
    -- This will return information about the obstacle, if any
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to detect obstacles ahead of the bot
local function DetectObstacleAhead(distance, direction)
    print("DetectObstacleAhead function called, distance: " .. tostring(distance) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect obstacles in the bot's path
    -- This will return information about the obstacle, if any
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to check if a part is unsafe (transparent or non-collidable)
local function isPartUnsafe(part)
    print("isPartUnsafe function called for part: " .. tostring(part))
    -- Implementation to check part properties like Transparency and CanCollide
    -- Placeholder for logic
    return false -- Placeholder return
end

-- Function to check for a safe gap to traverse
local function IsSafeGap(startPosition, endPosition)
    print("IsSafeGap function called, startPosition: " .. tostring(startPosition) .. ", endPosition: " .. tostring(endPosition))
    -- Implementation to use raycasting or other methods to check for a safe gap
    -- Placeholder for logic
    return true -- Placeholder return
end

-- Function to check for narrow passages
local function IsNarrowPassage(position, direction)
    print("IsNarrowPassage function called, position: " .. tostring(position) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect narrow passages
    -- Placeholder for logic
    return false -- Placeholder return
end

-- Function to create and manage the status GUI
local function CreateStatusGUI(player)
    print("CreateStatusGUI function called for player: " .. tostring(player))
    -- Implementation to create a GUI to display AI status, target, distance, debug info, and performance
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Global setter for external waypoint configuration
local externalWaypoints = {}
local externalWaypointsChanged = Instance.new("BindableEvent")

local function SetExternalWaypoints(waypointsTable)
    externalWaypoints = waypointsTable
    externalWaypointsChanged:Fire(externalWaypoints)
end

local function GetExternalWaypoints()
    return externalWaypoints
end

-- BindableFunction for external waypoint configuration
local BindableFunctions = Instance.new("Folder")
BindableFunctions.Name = "BindableFunctions"
BindableFunctions.Parent = ReplicatedStorage -- Or another appropriate location

local SetWaypointsFunction = Instance.new("BindableFunction")
SetWaypointsFunction.Name = "SetWaypoints"
SetWaypointsFunction.OnInvoke = SetExternalWaypoints
SetWaypointsFunction.Parent = BindableFunctions

local GetWaypointsFunction = Instance.new("BindableFunction")
GetWaypointsFunction.Name = "GetWaypoints"
GetWaypointsFunction.OnInvoke = GetExternalWaypoints
GetWaypointsFunction.Parent = BindableFunctions

-- Services   OBSTACLE_AVOIDANCE_RAYCAST_DISTANCE = 15, -- Distance for obstacle avoidance raycasts
    OBSTACLE_AVOIDANCE_FORCE = 50, -- Force applied for obstacle avoidance
    MAX_PATH_BLOCKED_COUNT = 5, -- How many times path can be blocked before full recalculation
    PERFORMANCE_LOG_INTERVAL = 10.0, -- Seconds between performance logs
    GUI_UPDATE_INTERVAL = 0.1, -- Seconds between GUI updates
    MAX_ERROR_LOGS = 100, -- Max number of error logs to store
    MAX_DEBUG_MESSAGES = 100, -- Max number of debug messages to store
    COMBAT_TACTICS = {
        "Offensive",
        "Defensive",
        "Strafing",
        "DeceptiveLunge",
    }, -- Available combat tactics
    DEFAULT_COMBAT_TACTIC = "Offensive",
    DEFAULT_WALK_SPEED = 16, -- Default walk speed for the bot
    PATHFINDING_PRIORITY_DISTANCE = 50, -- Distance at which pathfinding becomes high priority
    UNSTUCK_DIRECTIONS = 8, -- Number of directions to try when stuck
    WAYPOINT_REACHED_THRESHOLD = 5, -- Distance to consider a waypoint reached
    NODE_GRAPH_BUILD_INTERVAL = 30.0, -- Interval to rebuild node graph
    NODE_NAVIGATION_SWITCH_DISTANCE = 30, -- Distance to switch to node navigation
    OBSTACLE_DETECTION_ANGLE_INCREMENT = 30, -- Angle increment for obstacle detection rays
    MAX_CONSECUTIVE_STUCK = 3, -- Max times bot can be stuck before a major reset
    TARGET_ACQUISITION_COOLDOWN = 5.0, -- Cooldown for acquiring new targets after losing one
    MAX_TARGET_ACQUISITION_ATTEMPTS = 3, -- Max attempts to acquire target before giving up temporarily
    FALL_DETECTION_RAYCAST_LENGTH = 10, -- Length of raycast to detect falling
    ANIMATION_COOLDOWN = 0.5, -- Cooldown between playing animations
    HUMANOID_STATE_CHANGE_COOLDOWN = 0.1, -- Cooldown between humanoid state changes
    TARGET_LOST_TIME_THRESHOLD = 10.0, -- Time before a target is considered lost
    RAYCAST_COOLDOWN = 0.1, -- Cooldown for raycasts to prevent spam
    ENVIRONMENT_SCAN_INTERVAL = 5.0, -- Interval for scanning environment for dynamic obstacles
    MOVEMENT_UPDATE_INTERVAL = 0.05, -- Interval for updating movement direction
    SWORD_CHECK_INTERVAL = 1.0, -- Interval for checking sword availability
    FORCEFIELD_CHECK_INTERVAL = 1.0, -- Interval for checking forcefield status
    GARBAGE_COLLECTION_INTERVAL = 60.0, -- Interval for explicit garbage collection
    MEMORY_CHECK_INTERVAL = 30.0, -- Interval for memory usage checks
    CPU_CHECK_INTERVAL = 30.0, -- Interval for CPU usage checks
    NETWORK_CHECK_INTERVAL = 30.0, -- Interval for network latency checks
    PING_CHECK_INTERVAL = 30.0, -- Interval for ping checks
    FPS_CHECK_INTERVAL = 1.0, -- Interval for FPS checks
    RENDER_TIME_CHECK_INTERVAL = 1.0, -- Interval for render time checks
    PHYSICS_TIME_CHECK_INTERVAL = 1.0, -- Interval for physics time checks
    SCRIPT_ACTIVITY_CHECK_INTERVAL = 1.0, -- Interval for script activity checks
    THREAD_COUNT_CHECK_INTERVAL = 5.0, -- Interval for thread count checks
    COROUTINE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for coroutine count checks
    EVENT_CONNECTION_CHECK_INTERVAL = 5.0, -- Interval for event connection checks
    REMOTE_CALL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for remote call count checks
}

-- Function to intelligently jump over obstacles
local function TryJumpTo(targetPosition)
    print("TryJumpTo function called, targetPosition: " .. tostring(targetPosition))
    -- Implementation for intelligent jumping over obstacles
    -- This will involve raycasting, checking for jumpable surfaces, and adjusting jump force/direction
    -- Placeholder for logic
end

-- Function to set a sequence of waypoints for the bot to follow
local function SetSequentialWaypoints(waypoints)
    print("SetSequentialWaypoints function called, waypoints: " .. tostring(waypoints))
    -- Implementation to store and manage a sequence of waypoints
    -- This will likely involve a table to hold the waypoints and an index to track current target
    -- Placeholder for logic
end

-- Function to navigate through the sequential waypoints
local function NavigateSequentialWaypoints()
    print("NavigateSequentialWaypoints function called")
    -- Implementation to guide the bot through the stored waypoints
    -- This will involve moving the bot towards the current waypoint and advancing to the next once reached
    -- Placeholder for logic
end

-- Function to find the nearest node in a predefined node graph
local function FindNearestNode(position)
    print("FindNearestNode function called, position: " .. tostring(position))
    -- Implementation to search through a node graph and return the closest node to the given position
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to compute a path between two nodes in a node graph
local function ComputeNodePath(startNode, endNode)
    print("ComputeNodePath function called, startNode: " .. tostring(startNode) .. ", endNode: " .. tostring(endNode))
    -- Implementation of a pathfinding algorithm (e.g., A*) to find a path between two nodes
    -- Placeholder for logic
    return {} -- Placeholder return
end

-- Function to determine if the bot should switch to node-based navigation
local function ShouldSwitchToNodeNavigation(currentPath, targetPosition)
    print("ShouldSwitchToNodeNavigation function called, currentPath: " .. tostring(currentPath) .. ", targetPosition: " .. tostring(targetPosition))
    -- Implementation to decide whether to use traditional pathfinding or node-based pathfinding
    -- This could be based on path complexity, distance to target, or presence of known node graphs
    -- Placeholder for logic
    return false -- Placeholder return
end

-- Function to follow a path generated by node-based pathfinding
local function FollowNodePath(nodePath)
    print("FollowNodePath function called, nodePath: " .. tostring(nodePath))
    -- Implementation to guide the bot along the computed node path
    -- This will involve moving between nodes, potentially using sequential waypoints or direct movement
    -- Placeholder for logic
end

-- Services  DATASTORE_REQUEST_COUNT_CHECK_INTERVAL = 5.0, -- Interval for datastore request count checks
    HTTP_SERVICE_REQUEST_COUNT_CHECK_INTERVAL = 5.0, -- Interval for http service request count checks
    PATHFINDING_REQUEST_COUNT_CHECK_INTERVAL = 5.0, -- Interval for pathfinding request count checks
    RAYCAST_COUNT_CHECK_INTERVAL = 5.0, -- Interval for raycast count checks
    OVERLAP_PARAMS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for overlap params count checks
    GET_PARTS_IN_RADIUS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for get parts in radius count checks
    GET_PARTS_IN_BOX_COUNT_CHECK_INTERVAL = 5.0, -- Interval for get parts in box count checks
    GET_TOUCHING_PARTS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for get touching parts count checks
    GET_CONNECTED_PARTS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for get connected parts count checks
    GET_CHILDREN_COUNT_CHECK_INTERVAL = 5.0, -- Interval for get children count checks
    GET_DESCENDANTS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for get descendants count checks
    FIND_FIRST_CHILD_COUNT_CHECK_INTERVAL = 5.0, -- Interval for find first child count checks
    WAIT_FOR_CHILD_COUNT_CHECK_INTERVAL = 5.0, -- Interval for wait for child count checks
    ATTRIBUTE_CHANGE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for attribute change count checks
    PROPERTY_CHANGE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for property change count checks
    CHILD_ADDED_COUNT_CHECK_INTERVAL = 5.0, -- Interval for child added count checks
    CHILD_REMOVED_COUNT_CHECK_INTERVAL = 5.0, -- Interval for child removed count checks
    DESCENDANT_ADDED_COUNT_CHECK_INTERVAL = 5.0, -- Interval for descendant added count checks
    DESCENDANT_REMOVED_COUNT_CHECK_INTERVAL = 5.0, -- Interval for descendant removed count checks
    HEARTBEAT_CONNECTION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for heartbeat connection count checks
    RENDER_STEPPED_CONNECTION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for render stepped connection count checks
    STEPPED_CONNECTION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for stepped connection count checks
    TOUCHED_CONNECTION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for touched connection count checks
    TOUCH_ENDED_CONNECTION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for touch ended connection count checks
    MAGNITUDE_CALCULATION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for magnitude calculation count checks
    CFRAME_CALCULATION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for cframe calculation count checks
    VECTOR_OPERATIONS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for vector operations count checks
    TABLE_INSERT_COUNT_CHECK_INTERVAL = 5.0, -- Interval for table insert count checks
    TABLE_REMOVE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for table remove count checks
    TABLE_CLEAR_COUNT_CHECK_INTERVAL = 5.0, -- Interval for table clear count checks
    STRING_CONCATENATION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for string concatenation count checks
    STRING_MATCH_COUNT_CHECK_INTERVAL = 5.0, -- Interval for string match count checks
    STRING_FIND_COUNT_CHECK_INTERVAL = 5.0, -- Interval for string find count checks
    STRING_SUB_COUNT_CHECK_INTERVAL = 5.0, -- Interval for string sub count checks
    MATH_OPERATION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for math operation count checks
    RANDOM_CALL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for random call count checks
    TICK_CALL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for tick call count checks
    OS_TIME_CALL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for os time call count checks
    GC_CALL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for gc call count checks
    COLLECT_GARBAGE_CALL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for collect garbage call count checks
    MEMORY_WARNING_COUNT_CHECK_INTERVAL = 5.0, -- Interval for memory warning count checks
    ERROR_LOG_COUNT_CHECK_INTERVAL = 5.0, -- Interval for error log count checks
    WARNING_LOG_COUNT_CHECK_INTERVAL = 5.0, -- Interval for warning log count checks
    INFO_LOG_COUNT_CHECK_INTERVAL = 5.0, -- Interval for info log count checks
    DEBUG_LOG_COUNT_CHECK_INTERVAL = 5.0, -- Interval for debug log count checks
    CUSTOM_EVENT_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom event count checks
    CUSTOM_METRIC_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom metric count checks
    CUSTOM_TIMER_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom timer count checks
    CUSTOM_GAUGE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom gauge count checks
    CUSTOM_HISTOGRAM_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom histogram count checks
    CUSTOM_COUNTER_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom counter count checks
    CUSTOM_SET_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom set count checks
    CUSTOM_DISTRIBUTION_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom distribution count checks
    CUSTOM_SAMPLE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom sample count checks
    CUSTOM_TRACE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom trace count checks
    CUSTOM_SPAN_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom span count checks
    CUSTOM_LOG_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom log count checks
    CUSTOM_ERROR_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom error count checks
    CUSTOM_WARNING_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom warning count checks
    CUSTOM_INFO_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom info count checks
    CUSTOM_DEBUG_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom debug count checks
    CUSTOM_CRITICAL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom critical count checks
    CUSTOM_FATAL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom fatal count checks
    CUSTOM_ALERT_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom alert count checks
    CUSTOM_EMERGENCY_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom emergency count checks
    CUSTOM_NOTICE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom notice count checks
    CUSTOM_SUCCESS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom success count checks
    CUSTOM_FAILURE_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom failure count checks
    CUSTOM_SKIP_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom skip count checks
    CUSTOM_PASS_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom pass count checks
    CUSTOM_FAIL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom fail count checks
    CUSTOM_UNKNOWN_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom unknown count checks
    CUSTOM_OTHER_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom other count checks
    CUSTOM_TOTAL_COUNT_CHECK_INTERVAL = 5.0, -- Interval for custom total count checks
    CUSTOM_AVERAGE_TIME_CHECK_INTERVAL = 5.0, -- Interval for custom average time checks
    CUSTOM_MAX_TIME_CHECK_INTERVAL = 5.0, -- Interval for custom max time checks
    CUSTOM_MIN_TIME_CHECK_INTERVAL = 5.0, -- Interval for custom min time checks
    CUSTOM_SUM_TIME_CHECK_INTERVAL = 5.0, -- Interval for custom sum time checks
    CUSTOM_VALUE_CHECK_INTERVAL = 5.0, -- Interval for custom value checks
    CUSTOM_FLAG_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom flag change checks
    CUSTOM_STATE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom state change checks
    CUSTOM_OBJECT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom object change checks
    CUSTOM_TABLE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom table change checks
    CUSTOM_ARRAY_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom array change checks
    CUSTOM_DICTIONARY_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom dictionary change checks
    CUSTOM_SET_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom set change checks
    CUSTOM_QUEUE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom queue change checks
    CUSTOM_STACK_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom stack change checks
    CUSTOM_LINKED_LIST_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom linked list change checks
    CUSTOM_TREE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom tree change checks
    CUSTOM_GRAPH_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom graph change checks
    CUSTOM_HEAP_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom heap change checks
    CUSTOM_PRIORITY_QUEUE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom priority queue change checks
    CUSTOM_DEQUE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom deque change checks
    CUSTOM_HASH_TABLE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom hash table change checks
    CUSTOM_ORDERED_MAP_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom ordered map change checks
    CUSTOM_SKIP_LIST_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom skip list change checks
    CUSTOM_TRIE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom trie change checks
    CUSTOM_SUFFIX_TREE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom suffix tree change checks
    CUSTOM_FENWICK_TREE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom fenwick tree change checks
    CUSTOM_SEGMENT_TREE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom segment tree change checks
    CUSTOM_BINARY_INDEXED_TREE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom binary indexed tree change checks
    CUSTOM_SPARSE_TABLE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom sparse table change checks
    CUSTOM_DISJOINT_SET_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom disjoint set change checks
    CUSTOM_BLOOM_FILTER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom bloom filter change checks
    CUSTOM_COUNT_MIN_SKETCH_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom count min sketch change checks
    CUSTOM_HYPER_LOG_LOG_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom hyper log log change checks
    CUSTOM_MIN_HASH_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom min hash change checks
    CUSTOM_LOCALITY_SENSITIVE_HASHING_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom locality sensitive hashing change checks
    CUSTOM_VECTOR_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom vector change checks
    CUSTOM_MATRIX_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom matrix change checks
    CUSTOM_QUATERNION_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom quaternion change checks
    CUSTOM_RAY_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom ray change checks
    CUSTOM_CFRAME_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom cframe change checks
    CUSTOM_UDIM_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom udim change checks
    CUSTOM_UDIM2_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom udim2 change checks
    CUSTOM_COLOR3_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom color3 change checks
    CUSTOM_BRICK_COLOR_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom brick color change checks
    CUSTOM_PHYSICAL_PROPERTIES_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom physical properties change checks
    CUSTOM_REGION3_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom region3 change checks
    CUSTOM_VECTOR2_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom vector2 change checks
    CUSTOM_VECTOR3_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom vector3 change checks
    CUSTOM_NUMBER_SEQUENCE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom number sequence change checks
    CUSTOM_COLOR_SEQUENCE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom color sequence change checks
    CUSTOM_NUMBER_RANGE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom number range change checks
    CUSTOM_RECT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom rect change checks
    CUSTOM_FACES_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom faces change checks
    CUSTOM_AXES_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom axes change checks
    CUSTOM_CORES_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom cores change checks
    CUSTOM_ENUMS_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom enums change checks
    CUSTOM_FONT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom font change checks
    CUSTOM_PATH_WAYPOINT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom path waypoint change checks
    CUSTOM_PHYSICAL_MATERIAL_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom physical material change checks
    CUSTOM_RAYCAST_PARAMS_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom raycast params change checks
    CUSTOM_OVERLAP_PARAMS_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom overlap params change checks
    CUSTOM_TWEEN_INFO_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom tween info change checks
    CUSTOM_DOCK_WIDGET_PLUGIN_GUI_INFO_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom dock widget plugin gui info change checks
    CUSTOM_PLUGIN_TOOLBAR_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom plugin toolbar change checks
    CUSTOM_PLUGIN_TOOLBAR_BUTTON_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom plugin toolbar button change checks
    CUSTOM_PLUGIN_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom plugin change checks
    CUSTOM_STUDIO_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom studio change checks
    CUSTOM_DEBUGGER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom debugger change checks
    CUSTOM_REFLECTION_METADATA_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom reflection metadata change checks
    CUSTOM_SCRIPT_CONTEXT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom script context change checks
    CUSTOM_STARTER_GUI_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom starter gui change checks
    CUSTOM_STATS_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom stats change checks
    CUSTOM_STUDIO_ASSET_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom studio asset service change checks
    CUSTOM_TASK_SCHEDULER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom task scheduler change checks
    CUSTOM_TELEPORT_ASYNC_RESULT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom teleport async result change checks
    CUSTOM_TEST_GAME_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom test game service change checks
    CUSTOM_TIMER_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom timer service change checks
    CUSTOM_TOUCH_TRANSMITTER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom touch transmitter change checks
    CUSTOM_TWEEN_BASE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom tween base change checks
    CUSTOM_UIBLOX_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom uiblox change checks
    CUSTOM_VIEWPORT_FRAME_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom viewport frame change checks
    CUSTOM_WIDGET_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom widget service change checks
    CUSTOM_WORLD_ROOT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom world root change checks
    CUSTOM_ANIMATION_CONTROLLER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom animation controller change checks
    CUSTOM_ANIMATION_TRACK_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom animation track change checks
    CUSTOM_ASSET_IMPORT_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom asset import service change checks
    CUSTOM_AVATAR_EDITOR_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom avatar editor service change checks
    CUSTOM_BULK_IMPORT_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom bulk import service change checks
    CUSTOM_CAMERA_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom camera change checks
    CUSTOM_CHAT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom chat change checks
    CUSTOM_CONTENT_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom content service change checks
    CUSTOM_CORE_GUI_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom core gui change checks
    CUSTOM_DATA_MODEL_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom data model change checks
    CUSTOM_DEBUGGER_MANAGER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom debugger manager change checks
    CUSTOM_DIAGNOSTICS_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom diagnostics service change checks
    CUSTOM_DRAGGER_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom dragger service change checks
    CUSTOM_GAMEPAD_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom gamepad service change checks
    CUSTOM_GUI_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom gui service change checks
    CUSTOM_HTTP_RBX_API_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom http rbx api service change checks
    CUSTOM_JOINT_INSTANCE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom joint instance change checks
    CUSTOM_KEYFRAME_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom keyframe change checks
    CUSTOM_KEYFRAME_SEQUENCE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom keyframe sequence change checks
    CUSTOM_LOCALIZATION_TABLE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom localization table change checks
    CUSTOM_LOG_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom log service change checks
    CUSTOM_MATERIAL_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom material service change checks
    CUSTOM_MODEL_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom model change checks
    CUSTOM_NOTIFICATION_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom notification service change checks
    CUSTOM_PACKAGE_LINK_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom package link change checks
    CUSTOM_PART_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom part change checks
    CUSTOM_PATH_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom path change checks
    CUSTOM_PHYSICS_SETTINGS_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom physics settings change checks
    CUSTOM_PLUGIN_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom plugin change checks
    CUSTOM_PLUGIN_MANAGER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom plugin manager change checks
    CUSTOM_POINTS_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom points service change checks
    CUSTOM_REFLECTION_METADATA_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom reflection metadata change checks
    CUSTOM_REPLICATED_FIRST_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom replicated first change checks
    CUSTOM_ROBLOX_GUI_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom roblox gui change checks
    CUSTOM_SCRIPT_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom script change checks
    CUSTOM_SELECTION_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom selection change checks
    CUSTOM_STARTER_PACK_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom starter pack change checks
    CUSTOM_STUDIO_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom studio change checks
    CUSTOM_SURFACE_APPEARANCE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom surface appearance change checks
    CUSTOM_TERRAIN_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom terrain change checks
    CUSTOM_TEST_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom test service change checks
    CUSTOM_TEXT_CHAT_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom text chat service change checks
    CUSTOM_TEXTURE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom texture change checks
    CUSTOM_THIRD_PARTY_USER_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom third party user service change checks
    CUSTOM_TOOL_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom tool change checks
    CUSTOM_TOUCH_INPUT_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom touch input service change checks
    CUSTOM_TWEEN_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom tween change checks
    CUSTOM_TWEEN_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom tween service change checks
    CUSTOM_USER_GAME_SETTINGS_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom user game settings change checks
    CUSTOM_VALUE_BASE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom value base change checks
    CUSTOM_VIDEO_CAPTURE_SERVICE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom video capture service change checks
    CUSTOM_VIRTUAL_USER_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom virtual user change checks
    CUSTOM_WORKSPACE_CHANGE_CHECK_INTERVAL = 5.0, -- Interval for custom workspace change checks
    OBSTACLE_RAYCAST_DISTANCE = 10, -- Distance for raycasting to detect obstacles
    OBSTACLE_AVOIDANCE_MAGNITUDE = 15, -- How far to move to avoid an obstacle

    ATTACK_RANGE = 7, -- Distance within which the bot will attempt to attack
    ATTACK_COOLDOWN = 1, -- Cooldown between attacks in seconds
    DEFENSIVE_THRESHOLD = 0.3, -- Health percentage below which the bot becomes defensive
    STRAFE_DURATION = 0.5, -- Duration of strafing movement in seconds
    LUNGE_DISTANCE = 10, -- Distance for deceptive lunge
}

-- AI Movement Functions
local function MoveTo(targetPosition, speed, avoidObstacles)
    if not _G.LinkedSwordAIPersistentData.Humanoid or not _G.LinkedSwordAIPersistentData.HumanoidRootPart then
        debugPrint("ERROR: Humanoid or HumanoidRootPart not found for MoveTo.")
        return
    end

    local humanoid = _G.LinkedSwordAIPersistentData.Humanoid
    local humanoidRootPart = _G.LinkedSwordAIPersistentData.HumanoidRootPart

    -- Basic movement using Humanoid.MoveTo
    humanoid:MoveTo(targetPosition)

    -- Optional: Set WalkSpeed if a specific speed is provided
    if speed then
        humanoid.WalkSpeed = speed
    else
        humanoid.WalkSpeed = CONFIG.DEFAULT_WALK_SPEED or 16 -- Assuming a default walk speed in CONFIG
    end

    -- Placeholder for obstacle avoidance logic (to be implemented later)
    if avoidObstacles then
        local origin = humanoidRootPart.Position
        local direction = (targetPosition - origin).Unit * CONFIG.OBSTACLE_RAYCAST_DISTANCE
        local raycastParams = RaycastParams.new()
        raycastParams.FilterDescendantsInstances = {humanoidRootPart.Parent} -- Exclude the bot itself
        raycastParams.FilterType = Enum.RaycastFilterType.Exclude

        local raycastResult = workspace:Raycast(origin, direction, raycastParams)

        if raycastResult and raycastResult.Instance then
            debugPrint("Obstacle detected:", raycastResult.Instance.Name)
            -- Simple avoidance: try to move around the obstacle
            local obstacleNormal = raycastResult.Normal
            local avoidanceDirection = Vector3.new(-obstacleNormal.Z, 0, obstacleNormal.X)
            targetPosition = origin + avoidanceDirection * CONFIG.OBSTACLE_AVOIDANCE_MAGNITUDE
            humanoid:MoveTo(targetPosition)
        end
    end
end

-- AI Combat Functions
local function ExecuteAttack(targetHumanoid, attackType)
    local character = _G.LinkedSwordAIPersistentData.Character
    local humanoid = _G.LinkedSwordAIPersistentData.Humanoid
    local lastAttackTime = _G.LinkedSwordAIPersistentData.LastAttackTime or 0

    if not character or not humanoid or not targetHumanoid or not targetHumanoid.Parent then
        debugPrint("ExecuteAttack: Invalid character, humanoid, or targetHumanoid.")
        return
    end

    local currentTime = tick()
    if currentTime - lastAttackTime < CONFIG.ATTACK_COOLDOWN then
        return -- Still on cooldown
    end

    local targetRootPart = targetHumanoid.Parent:FindFirstChild("HumanoidRootPart")
    if not targetRootPart then
        debugPrint("ExecuteAttack: Target does not have a HumanoidRootPart.")
        return
    end

    local distance = (character.HumanoidRootPart.Position - targetRootPart.Position).Magnitude

    if distance > CONFIG.ATTACK_RANGE then
        debugPrint("ExecuteAttack: Target out of range.")
        return
    end

    _G.LinkedSwordAIPersistentData.LastAttackTime = currentTime

    -- Implement different attack tactics based on attackType and bot's health
    if attackType == "Offensive" then
        -- Aggressive attack logic
        debugPrint("Executing Offensive Attack!")
        -- Trigger sword swing animation/event
    elseif attackType == "Defensive" and humanoid.Health / humanoid.MaxHealth < CONFIG.DEFENSIVE_THRESHOLD then
        -- Defensive attack logic (e.g., parry, counter-attack)
        debugPrint("Executing Defensive Attack!")
        -- Trigger defensive action
    elseif attackType == "Strafing" then
        -- Strafing movement while attacking
        debugPrint("Executing Strafing Attack!")
        -- Implement strafing movement
    elseif attackType == "Lunge" then
        -- Deceptive lunge attack
        debugPrint("Executing Lunge Attack!")
        -- Implement lunge movement and attack
    else
        -- Default attack (e.g., basic swing)
        debugPrint("Executing Basic Attack!")
        -- Trigger basic sword swing
    end
end

-- Function to detect obstacles ahead of the bot
local function DetectObstacleAhead(distance, direction)
    print("DetectObstacleAhead function called, distance: " .. tostring(distance) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect obstacles in the bot's path
    -- This will return information about the obstacle, if any
    -- Placeholder for logic
    return nil -- Placeholder return
end

-- Function to check if a part is unsafe (transparent or non-collidable)
local function isPartUnsafe(part)
    print("isPartUnsafe function called for part: " .. tostring(part))
    -- Implementation to check part properties like Transparency and CanCollide
    -- Placeholder for logic
    return false -- Placeholder return
end

-- Function to check for a safe gap to traverse
local function IsSafeGap(startPosition, endPosition)
    print("IsSafeGap function called, startPosition: " .. tostring(startPosition) .. ", endPosition: " .. tostring(endPosition))
    -- Implementation to use raycasting or other methods to check for a safe gap
    -- Placeholder for logic
    return true -- Placeholder return
end

-- Function to check for narrow passages
local function IsNarrowPassage(position, direction)
    print("IsNarrowPassage function called, position: " .. tostring(position) .. ", direction: " .. tostring(direction))
    -- Implementation to use raycasting or other methods to detect narrow passages
    -- Placeholder for logic
    return false -- Placeholder return
end

-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local PathfindingService = game:GetService("PathfindingService")
local UserInputService = game:GetService("UserInputService")
local Debris = game:GetService("Debris")
local CollectionService = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerStorage = game:GetService("ServerStorage")
local ServerScriptService = game:GetService("ServerScriptService")
local Lighting = game:GetService("Lighting")
local Teams = game:GetService("Teams")
local PhysicsService = game:GetService("PhysicsService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local TeleportService = game:GetService("TeleportService")
local SoundService = game:GetService("SoundService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local BadgeService = game:GetService("BadgeService")
local DataStoreService = game:GetService("DataStoreService")
local MessagingService = game:GetService("MessagingService")
local TextService = game:GetService("TextService")
local ContentProvider = game:GetService("ContentProvider")
local AssetService = game:GetService("AssetService")
local GroupService = game:GetService("GroupService")
local LocalizationService = game:GetService("LocalizationService")
local MarketplaceService = game:GetService("MarketplaceService")
local NotificationService = game:GetService("NotificationService")
local PolicyService = game:GetService("PolicyService")
local SocialService = game:GetService("SocialService")
local TestService = game:GetService("TestService")
local VoiceChatService = game:GetService("VoiceChatService")
local AnalyticsService = game:GetService("AnalyticsService")
local GamePassService = game:GetService("GamePassService")
local CreatorStoreService = game:GetService("CreatorStoreService")
local InsertService = game:GetService("InsertService")
local JointService = game:GetService("JointService")
local LogService = game:GetService("LogService")
local MemoryStoreService = game:GetService("MemoryStoreService")
local PackageService = game:GetService("PackageService")
local PluginGuiService = game:GetService("PluginGuiService")
local StudioService = game:GetService("StudioService")
local ThirdPartyDataService = game:GetService("ThirdPartyDataService")
local VersionControlService = game:GetService("VersionControlService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ChangeHistoryService = game:GetService("ChangeHistoryService")
local HapticService = game:GetService("HapticService")
local KeyframeSequenceProvider = game:GetService("KeyframeSequenceProvider")
local PhysicsPacketCache = game:GetService("PhysicsPacketCache")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local NotificationService = game:GetService("NotificationService")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local Studio = game:GetService("Studio")
local SurfaceAppearance = game:GetService("SurfaceAppearance")

Init()
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")

-- Main Update Loop
local function Update()
    -- Adaptive garbage collection logic here
    -- Periodically clean up unused objects or data structures
    -- Example: if tick() % CONFIG.GARBAGE_COLLECTION_INTERVAL == 0 then
    --              collectgarbage("step")
    --          end

    -- Performance optimizations here
    -- Example: Limit expensive calculations, cache frequently accessed data

    -- Main AI logic here
end

-- Connect the Update function to a RunService event (e.g., Heartbeat)
game:GetService("RunService").Heartbeat:Connect(Update)
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
local VideoCaptureService = game:GetService("VideoCaptureService")
local VirtualUser = game:GetService("VirtualUser")
local Workspace = game:GetService("Workspace")
local AnalyticsService = game:GetService("AnalyticsService")
local BadgeService = game:GetService("BadgeService")
local ContentProvider = game:GetService("ContentProvider")
local DataStoreService = game:GetService("DataStoreService")
local Debris = game:GetService("Debris")
local GamePassService = game:GetService("GamePassService")
local GroupService = game:GetService("GroupService")
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local LocalizationService = game:GetService("LocalizationService")
local LogService = game:GetService("LogService")
local MarketplaceService = game:GetService("MarketplaceService")
local MessagingService = game:GetService("MessagingService")
local NotificationService = game:GetService("NotificationService")
local PackageService = game:GetService("PackageService")
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local PolicyService = game:GetService("PolicyService")
local ProximityPromptService = game:GetService("ProximityPromptService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ServerScriptService = game:GetService("ServerScriptService")
local ServerStorage = game:GetService("ServerStorage")
local SocialService = game:GetService("SocialService")
local SoundService = game:GetService("SoundService")
local TeleportService = game:GetService("TeleportService")
local TestService = game:GetService("TestService")
local TextService = game:GetService("TextService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VoiceChatService = game:GetService("VoiceChatService")
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")
local PhysicsService = game:GetService("PhysicsService")
local Teams = game:GetService("Teams")
local Lighting = game:GetService("Lighting")
local HttpRbxApiService = game:GetService("HttpRbxApiService")
local StudioService = game:GetService("StudioService")
local PluginManager = game:GetService("PluginManager")
local ReflectionMetadataProvider = game:GetService("ReflectionMetadataProvider")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local StudioAssetService = game:GetService("StudioAssetService")
local TaskScheduler = game:GetService("TaskScheduler")
local TeleportAsyncResult = game:GetService("TeleportAsyncResult")
local TestGameService = game:GetService("TestGameService")
local TimerService = game:GetService("TimerService")
local TouchTransmitter = game:GetService("TouchTransmitter")
local TweenBase = game:GetService("TweenBase")
local UIBlox = game:GetService("UIBlox")
local ViewportFrame = game:GetService("ViewportFrame")
local WidgetService = game:GetService("WidgetService")
local WorldRoot = game:GetService("WorldRoot")
local AnimationController = game:GetService("AnimationController")
local AnimationTrack = game:GetService("AnimationTrack")
local AssetImportService = game:GetService("AssetImportService")
local AvatarEditorService = game:GetService("AvatarEditorService")
local BulkImportService = game:GetService("BulkImportService")
local Camera = game:GetService("Camera")
local Chat = game:GetService("Chat")
local ContentService = game:GetService("ContentService")
local CoreGui = game:GetService("CoreGui")
local DataModel = game:GetService("DataModel")
local DebuggerManager = game:GetService("DebuggerManager")
local DiagnosticsService = game:GetService("DiagnosticsService")
local DraggerService = game:GetService("DraggerService")
local GamepadService = game:GetService("GamepadService")
local GuiService = game:GetService("GuiService")
local JointInstance = game:GetService("JointInstance")
local Keyframe = game:GetService("Keyframe")
local KeyframeSequence = game:GetService("KeyframeSequence")
local LocalizationTable = game:GetService("LocalizationTable")
local LogService = game:GetService("LogService")
local MaterialService = game:GetService("MaterialService")
local Model = game:GetService("Model")
local PackageLink = game:GetService("PackageLink")
local Part = game:GetService("Part")
local Path = game:GetService("Path")
local PhysicsSettings = game:GetService("PhysicsSettings")
local Plugin = game:GetService("Plugin")
local PluginManager = game:GetService("PluginManager")
local PointsService = game:GetService("PointsService")
local ReflectionMetadata = game:GetService("ReflectionMetadata")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local RobloxGui = game:GetService("RobloxGui")
local Script = game:GetService("Script")
local Selection = game:GetService("Selection")
local StarterPack = game:GetService("StarterPack")
local SurfaceAppearance = game:GetService("SurfaceAppearance")
local Terrain = game:GetService("Terrain")
local TestService = game:GetService("TestService")
local TextChatService = game:GetService("TextChatService")
local Texture = game:GetService("Texture")
local ThirdPartyUserService = game:GetService("ThirdPartyUserService")
local Tool = game:GetService("Tool")
local TouchInputService = game:GetService("TouchInputService")
local Tween = game:GetService("Tween")
local TweenService = game:GetService("TweenService")
local UserGameSettings = game:GetService("UserGameSettings")
local ValueBase = game:GetService("ValueBase")
