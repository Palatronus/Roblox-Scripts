-- ROBLOX CHAT SPY (CLIENT-SIDE) - FINAL WORKING VERSION
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = true,
    public = false
}

-- Track active instance
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Message styling
local SpyMessageProperties = {
    Color = Color3.fromRGB(0, 255, 255),
    Font = Enum.Font.SourceSansBold,
    TextSize = 18
}

-- Toggle spy status
local function updateStatus()
    SpyMessageProperties.Text = "[SPY "..(Config.enabled and "ENABLED" or "DISABLED").."]"
    StarterGui:SetCore("ChatMakeSystemMessage", SpyMessageProperties)
end

-- Command handler
player.Chatted:Connect(function(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateStatus()
    end
end)

-- Create message received connection instead of callback
local messageConnection
local function initializeSpy()
    if messageConnection then
        messageConnection:Disconnect()
    end
    
    messageConnection = TextChatService.MessageReceived:Connect(function(message)
        if not Config.enabled or _G.chatSpyInstance ~= instance then return end
        
        local textSource = message.TextSource
        if not textSource then return end
        
        -- Get channel name safely
        local channel = message:GetAttribute("ChatChannel")
        local channelName = channel and channel.Name or "Global"
        
        -- Detect private messages
        local isPrivate = (channelName == "RBXWhisper" or channelName == "RBXTeam")
        local isLocalPlayer = textSource.UserId == player.UserId
        
        if isPrivate and (Config.spyOnMyself or not isLocalPlayer) then
            local msgContent = message.Text or ""
            local senderName = textSource.Name or "Unknown"
            
            if Config.public then
                -- Send to public chat using legacy method
                task.spawn(function()
                    game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents")
                        :WaitForChild("SayMessageRequest"):FireServer(
                            "[SPY] ["..senderName.."]: "..msgContent,
                            "All"
                        )
                end)
            else
                -- Send private system message
                SpyMessageProperties.Text = "[SPY] ["..senderName.."]: "..msgContent
                StarterGui:SetCore("ChatMakeSystemMessage", SpyMessageProperties)
            end
        end
    end)
end

-- Initialize
initializeSpy()
updateStatus()

-- Reinitialize when character respawns
player.CharacterAdded:Connect(initializeSpy)

print("Chat Spy Activated - Type /spy to toggle")
