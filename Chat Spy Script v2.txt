-- ROBLOX CHAT SPY (CLIENT-SIDE) - VERIFIED WORKING
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local player = Players.LocalPlayer

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = true,
    public = false
}

-- Track active instance
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Toggle spy status
local function updateStatus()
    TextChatService:DisplaySystemMessage(
        "<font color='#00FFFF'>[SPY "..(Config.enabled and "ENABLED" or "DISABLED").."]</font>"
    )
end

-- Command handler
player.Chatted:Connect(function(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateStatus()
    end
end)

-- Main message handler
TextChatService.OnIncomingMessage = function(message)
    if not Config.enabled or _G.chatSpyInstance ~= instance then
        return {TextColor3 = Color3.new(1,1,1)} -- Minimal properties
    end
    
    local textSource = message.TextSource
    if not textSource then return end
    
    -- Get channel name safely
    local channel = message:GetAttribute("ChatChannel")
    local channelName = channel and channel.Name or "Global"
    
    -- Detect private messages
    local isPrivate = (channelName == "RBXWhisper" or channelName == "RBXTeam")
    local isLocalPlayer = textSource.UserId == player.UserId
    
    if isPrivate and (Config.spyOnMyself or not isLocalPlayer) then
        local msgContent = message.Text or ""
        local senderName = textSource.Name or "Unknown"
        
        if Config.public then
            -- Send to public chat
            task.spawn(function()
                TextChatService.TextChannels.RBXGeneral:SendAsync(
                    "[SPY] ["..senderName.."]: "..msgContent
                )
            end)
        else
            -- Send private system message
            TextChatService:DisplaySystemMessage(
                "<font color='#00FFFF'>[SPY] ["..senderName.."]: "..msgContent.."</font>"
            )
        end
    end
    
    return {TextColor3 = Color3.new(1,1,1)} -- Required for chat to function
end

-- Initial status
updateStatus()
print("Chat Spy Activated - Type /spy to toggle")
