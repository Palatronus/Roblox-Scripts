-- WORKING CHAT SPY - JULY 2024 VERSION
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = true,
    public = false
}

-- Track active instance
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Toggle spy status
local function updateStatus()
    StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[SPY "..(Config.enabled and "ENABLED" or "DISABLED").."]",
        Color = Color3.fromRGB(0, 255, 255),
        Font = Enum.Font.SourceSansBold,
        TextSize = 18
    })
end

-- Command handler
player.Chatted:Connect(function(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateStatus()
    end
end)

-- MAIN FIX: Use MessageReceived event instead of callback
TextChatService.MessageReceived:Connect(function(message)
    if not Config.enabled or _G.chatSpyInstance ~= instance then return end
    
    local textSource = message.TextSource
    if not textSource then return end
    
    -- Detect private messages by channel
    local channel = message:GetAttribute("ChatChannel")
    local channelName = channel and channel.Name or ""
    local isPrivate = (channelName == "RBXWhisper" or channelName == "RBXTeam")
    local isLocalPlayer = textSource.UserId == player.UserId
    
    if isPrivate and (Config.spyOnMyself or not isLocalPlayer) then
        local msgContent = message.Text or ""
        local senderName = textSource.Name or "Unknown"
        
        if Config.public then
            -- Use legacy chat system for compatibility
            game:GetService("ReplicatedStorage")
                :WaitForChild("DefaultChatSystemChatEvents")
                :WaitForChild("SayMessageRequest")
                :FireServer("[SPY] ["..senderName.."]: "..msgContent, "All")
        else
            StarterGui:SetCore("ChatMakeSystemMessage", {
                Text = "[SPY] ["..senderName.."]: "..msgContent,
                Color = Color3.fromRGB(0, 255, 255),
                Font = Enum.Font.SourceSansBold,
                TextSize = 18
            })
        end
    end
end)

-- Initial status
updateStatus()
print("Chat Spy WORKING - Type /spy to toggle")
