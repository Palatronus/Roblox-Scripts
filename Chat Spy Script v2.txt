--[[
	Ultimate Chat Spy (August 2025)
	Type "/spy" to toggle
	Captures whispers, team chat, and commands
--]]

-- Services
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local StarterGui = game:GetService("StarterGui")

-- Get player with triple redundancy
local player = Players.LocalPlayer
if not player then
    Players.PlayerAdded:Wait()
    player = Players.LocalPlayer
end
if not player then
    repeat task.wait() until Players.LocalPlayer
    player = Players.LocalPlayer
end

-- Config with defaults matching your preferences
local Config = {
    enabled = true,
    spyOnMyself = false,      -- Don't show own messages
    public = false,           -- Private logging only
    publicItalics = true,     -- For public mode
    filterCommands = false    -- Show command messages
}

-- Message properties
local SPY_COLOR = Color3.fromRGB(0, 255, 255)  -- Cyan
local SPY_FONT = Enum.Font.SourceSansBold
local SPY_SIZE = 18

-- Show immediate execution confirmation
StarterGui:SetCore("ChatMakeSystemMessage", {
    Text = "CHAT SPY INJECTED",
    Color = SPY_COLOR,
    Font = SPY_FONT,
    TextSize = SPY_SIZE
})

-- Anti-duplication system
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Show status message with retry logic
local function showStatus()
    for i = 1, 3 do  -- Try 3 times
        pcall(function()
            StarterGui:SetCore("ChatMakeSystemMessage", {
                Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}",
                Color = SPY_COLOR,
                Font = SPY_FONT,
                TextSize = SPY_SIZE
            })
        end)
        task.wait(0.2)
    end
end

-- Core message processing
local function processMessage(message)
    if not Config.enabled or _G.chatSpyInstance ~= instance then return end
    
    -- Get channel and text
    local channel = message.TextChannel
    local text = message.Text or ""
    
    -- Skip non-private messages
    if not channel then return end
    if channel.Name ~= "RBXWhisper" and channel.Name ~= "RBXTeam" then return end
    if text == "" then return end
    
    -- Skip commands if filtering enabled
    if Config.filterCommands and text:match("^%/%w+") then return end
    
    -- Get speaker
    local speaker = message.TextSource
    if not speaker then return end
    
    local speakerPlayer = Players:GetPlayerByUserId(speaker.UserId)
    if not speakerPlayer then return end
    
    -- Skip own messages if disabled
    if speakerPlayer == player and not Config.spyOnMyself then return end
    
    -- Clean text
    local cleanText = text:gsub("[\n\r]", ""):gsub("\t", " "):gsub("%s+", " ")
    
    -- Create spy message
    local spyMessage = "{SPY} [".. speakerPlayer.Name .."]: " .. cleanText
    
    -- Show private system message
    pcall(function()
        StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = spyMessage,
            Color = SPY_COLOR,
            Font = SPY_FONT,
            TextSize = SPY_SIZE
        })
    end)
end

-- Setup message handler
TextChatService.MessageReceived:Connect(processMessage)

-- Command handler
player.Chatted:Connect(function(msg)
    if _G.chatSpyInstance ~= instance then return end
    
    if msg:lower():sub(1,4) == "/spy" then
        Config.enabled = not Config.enabled
        task.wait(0.3)
        showStatus()
    end
end)

-- Initial status with multiple fallbacks
showStatus()  -- Immediate attempt
task.delay(1, showStatus)  -- 1 second delay
task.delay(3, showStatus)  -- 3 second delay

-- Final confirmation
task.delay(0.5, function()
    pcall(function()
        StarterGui:SetCore("ChatMakeSystemMessage", {
            Text = "SPY SYSTEM ACTIVE",
            Color = Color3.new(0, 1, 0),  -- Green
            Font = SPY_FONT,
            TextSize = SPY_SIZE
        })
    end)
end)

task.delay(5, function()
    StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "FINAL CONFIRMATION - SCRIPT WORKS",
        Color = Color3.new(1, 0, 0),
        Font = Enum.Font.SourceSansBold,
        TextSize = 24
    })
end)
