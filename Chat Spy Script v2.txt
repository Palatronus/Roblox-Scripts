--[[
   Modern Chat Spy for TextChatService
   Type "/spy" to toggle
   - Fixes "TextColor3 is not a valid member" error
   - Uses rich text formatting instead of deprecated properties
   - Maintains chat functionality
--]]

-- Services
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local player = Players.LocalPlayer
local systemChannel = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXSystem")

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = true,
    public = false
}

-- Track active instance
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Toggle spy status
local function updateStatus()
    systemChannel:DisplaySystemMessage(
        "<font color='#00FFFF'>[SPY "..(Config.enabled and "ENABLED" or "DISABLED").."]</font>"
    )
end

-- Command handler
player.Chatted:Connect(function(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateStatus()
    end
end)

-- Main message handler
TextChatService.OnIncomingMessage = function(message)
    -- 1. Create valid return object first :cite[1]:cite[7]
    local properties = Instance.new("TextChatMessageProperties")
    properties.Text = message.Text  -- Preserve original message
    
    -- 2. Only process if spy active
    if Config.enabled and _G.chatSpyInstance == instance then
        local textSource = message.TextSource
        if textSource then
            -- 3. Detect private channels (whispers/team chat) :cite[2]:cite[5]
            local channel = message:GetAttribute("ChatChannel")
            local channelName = channel and channel.Name or ""
            local isPrivate = (channelName == "RBXWhisper" or channelName == "RBXTeam")
            local isLocalPlayer = textSource.UserId == player.UserId
            
            if isPrivate and (Config.spyOnMyself or not isLocalPlayer) then
                -- 4. Use rich text instead of TextColor3 :cite[1]:cite[10]
                local spyMessage = string.format(
                    "<font color='#00FFFF'>[SPY] [%s]: %s</font>",
                    textSource.Name,
                    message.Text
                )
                
                if Config.public then
                    -- 5. Use legacy method for public broadcast
                    task.spawn(function()
                        game:GetService("ReplicatedStorage")
                            :WaitForChild("DefaultChatSystemChatEvents")
                            :WaitForChild("SayMessageRequest")
                            :FireServer(spyMessage, "All")
                    end)
                else
                    -- 6. Proper system message display :cite[10]
                    systemChannel:DisplaySystemMessage(spyMessage)
                end
            end
        end
    end
    
    return properties  -- Essential to prevent chat breakage
end

-- Initial status
updateStatus()
