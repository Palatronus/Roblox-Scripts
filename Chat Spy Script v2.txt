-- ROBLOX CHAT SPY (2025 FIXED VERSION)
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local player = Players.LocalPlayer

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = true,
    public = false,
    publicItalics = true
}

-- Instance tracking to prevent conflicts
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Get channels
local textChannels = TextChatService:WaitForChild("TextChannels")
local systemChannel = textChannels:WaitForChild("RBXSystem")
local generalChannel = textChannels:WaitForChild("RBXGeneral")

-- Status update
local function updateStatus()
    systemChannel:DisplaySystemMessage(
        "<font color='#00FFFF'>[SPY " .. (Config.enabled and "ENABLED" or "DISABLED") .. "]</font>"
    )
end

-- Command handler
player.Chatted:Connect(function(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateStatus()
    end
end)

-- FIXED MESSAGE DETECTION
TextChatService.MessageReceived:Connect(function(message)
    if not Config.enabled or _G.chatSpyInstance ~= instance then return end

    local textSource = message.TextSource
    if not textSource then return end
    
    -- FIX 1: Use TextChannel instead of ChatChannel attribute
    local channel = message.TextChannel
    if not channel then return end
    
    -- FIX 2: Correct channel name detection
    local channelName = channel.Name
    local isPrivate = (channelName == "Whisper" or channelName == "Team")  -- Updated channel names
    
    local isLocalPlayer = textSource.UserId == player.UserId

    if isPrivate and (Config.spyOnMyself or not isLocalPlayer) then
        local msgContent = message.Text
        local senderName = textSource.DisplayName or textSource.Name

        if Config.public then
            if not msgContent:find("{SPY}") then
                local formatted = Config.publicItalics and "/me " or ""
                formatted = formatted .. "{SPY} [" .. senderName .. "]: " .. msgContent
                generalChannel:SendAsync(formatted)
            end
        else
            systemChannel:DisplaySystemMessage(
                "<font color='#00FFFF'>[SPY] [" .. senderName .. "]: " .. msgContent .. "</font>"
            )
        end
    end
end)

-- Initialize
updateStatus()
print("Chat Spy Active | Type '/spy' to toggle")
