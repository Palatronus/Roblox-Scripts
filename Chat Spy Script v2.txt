-- ROBLOX CHAT SPY (JULY 2025 VERIFIED)
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local player = Players.LocalPlayer

-- 1. INITIALIZE CHANNELS FIRST :cite[3]
local textChannels = TextChatService:WaitForChild("TextChannels")
local systemChannel = textChannels:WaitForChild("RBXSystem")

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = true,
    public = false
}

-- Track active instance
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- 2. STATUS MESSAGES WITH HTML FORMATTING :cite[1]
local function updateStatus()
    systemChannel:DisplaySystemMessage(
        "<font color='#00FFFF'>[SPY " .. (Config.enabled and "ENABLED" or "DISABLED") .. "]</font>"
    )
end

-- 3. COMMAND HANDLER (CLIENT-SIDE)
player.Chatted:Connect(function(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateStatus()
    end
end)

-- 4. MESSAGE PROCESSING CORE :cite[3]:cite[6]
TextChatService.MessageReceived:Connect(function(message)
    if not Config.enabled or _G.chatSpyInstance ~= instance then return end

    -- 5. VERIFY MESSAGE SOURCE
    local textSource = message.TextSource
    if not textSource then return end
    
    -- 6. MODERN CHANNEL DETECTION (2025 STANDARD) :cite[7]
    local channel = message.TextChannel
    if not channel then return end
    local channelName = channel.Name
    local isPrivate = (channelName == "Whisper" or channelName == "Team")  -- ✅ 2025 names
    
    -- 7. MANDATORY PRIVACY CHECK :cite[3]
    local canSpy = true
    if isPrivate then
        canSpy = pcall(function()
            return #TextChatService:CanUsersDirectChatAsync(player.UserId, {textSource.UserId}) > 0
        end)
    end

    local isLocalPlayer = textSource.UserId == player.UserId

    -- 8. LOGGING WITH ANTI-FILTER DELAY :cite[1]
    if isPrivate and canSpy and (Config.spyOnMyself or not isLocalPlayer) then
        task.wait(0.1)  -- ⏰ Prevent cascade filtering
        local msgContent = message.Text
        local senderName = textSource.DisplayName or textSource.Name

        -- 9. GUARANTEED OUTPUT :cite[2]
        local spyMessage = "<font color='#00FFFF'>[SPY] ["..senderName.."]: "..msgContent.."</font>"
        systemChannel:DisplaySystemMessage(spyMessage)
    end
end)

-- Initialization
updateStatus()
print("✅ Spy Active - Private messages will now log")
