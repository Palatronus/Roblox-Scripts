print("-- Chat Spy Executed --")
print("Type \"spy\" to enable or disable the chat spy.")
print("https://github.com/dehoisted/Chat-Spy")

-- Config
Config = {
	enabled = true,
	spyOnMyself = true,
	public = false,
	publicItalics = true
}

-- Customizing Log Output
PrivateProperties = {
	Color = Color3.fromRGB(0,255,255); 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}

local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

local function processMessage(text, source, status)
	if not Config.enabled then return end
	if status ~= Enum.TextChatMessageStatus.Success then return end
	
	local speaker = Players:GetPlayerByUserId(source.UserId)
	if not speaker then return end
	if speaker == player and not Config.spyOnMyself then return end
	
	if Config.public then
		local formatted = (Config.publicItalics and "/me " or '').."{SPY} [".. speaker.Name .."]: "..text
		TextChatService.TextChannels.RBXGeneral:SendAsync(formatted)
	else
		PrivateProperties.Text = "{SPY} [".. speaker.Name .."]: "..text
		StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
	end
end

TextChatService.MessageReceived:Connect(function(message)
	if _G.chatSpyInstance ~= instance then return end
	processMessage(message.Text, message.TextSource, message.Status)
end)

TextChatService.SendingMessage:Connect(function(message)
	if _G.chatSpyInstance ~= instance then return end
	local text = message.Text
	if string.sub(text:lower(), 1, 4) == "/spy" then
		Config.enabled = not Config.enabled
		task.wait(0.3)
		PrivateProperties.Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}"
		StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
		message.Text = ""
	end
end)

PrivateProperties.Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}"
StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
