--[[
   Modern Chat Spy (Client-Side)
   Type "/spy" to toggle
   Fixed: "Private is not a valid member of Enum.TextChatMessageStatus"
--]]

print("-- Modern Chat Spy Loaded --")
print("Type \"/spy\" to toggle spy mode")

-- Configuration
local Config = {
    enabled = true,
    spyOnMyself = false,
    public = false,
    publicItalics = true
}

-- Message styling
local SpyMessageProperties = {
    Color = Color3.fromRGB(0, 255, 255),
    Font = Enum.Font.SourceSansBold,
    TextSize = 18
}

-- Services
local TextChatService = game:GetService("TextChatService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local textChannels = TextChatService:WaitForChild("TextChannels")
local systemChannel = textChannels:WaitForChild("RBXSystem")  -- :cite[2]

-- Instance tracking
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

-- Toggle spy status
local function updateSpyStatus()
    systemChannel:DisplaySystemMessage(
        "<font color='#00FFFF'>[SPY " .. (Config.enabled and "ENABLED" or "DISABLED") .. "]</font>"
    )
end

-- Command handling
local function processCommand(message)
    if string.lower(message) == "/spy" then
        Config.enabled = not Config.enabled
        updateSpyStatus()
        return true
    end
    return false
end

-- Main message handler (FIXED)
local function onMessageAdded(message, channel)
    if _G.chatSpyInstance ~= instance then return end
    if not Config.enabled then return end
    
    local textSource = message.TextSource
    if not textSource then return end
    
    local isLocalPlayer = textSource.UserId == player.UserId
    local channelName = channel.Name
    
    -- Detect private messages by channel type :cite[5]:cite[8]
    local isPrivate = (channelName == "RBXWhisper" or channelName == "RBXTeam")
    
    if isPrivate and (Config.spyOnMyself or not isLocalPlayer) then
        local msgContent = message.Text
        local senderName = textSource.Name
        
        if Config.public then
            local formatted = Config.publicItalics and "/me " or ""
            formatted = formatted .. "{SPY} [".. senderName .."]: ".. msgContent
            textChannels.RBXGeneral:SendAsync(formatted)  -- Use general channel
        else
            systemChannel:DisplaySystemMessage(
                "<font color='#00FFFF'>[SPY] [".. senderName .."]: ".. msgContent .. "</font>"
            )
        end
    end
end

-- Initialize
TextChatService.OnMessageAdded:Connect(onMessageAdded)  -- :cite[5]
player.Chatted:Connect(processCommand)
updateSpyStatus()
