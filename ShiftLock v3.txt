--[[
	PC Roblox Shiftlock Replication Script
	Frontend-Compatible | Emulator-Ready | Shift Key Toggle Only
	
	Replicates the exact behavior of PC Roblox's native Shiftlock system
	- Triggered exclusively by Shift key (no UI elements)
	- Precise camera positioning and character rotation
	- Full frontend compatibility for emulators
	- Toggle functionality matching PC Roblox behavior
]]

-- Performance optimized function references
local task_spawn = task.spawn
local task_wait = task.wait
local math_rad = math.rad
local math_clamp = math.clamp
local os_clock = os.clock

-- Core Roblox services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

-- Player references
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = Workspace.CurrentCamera

-- Shiftlock state management
local ShiftlockEnabled = false
local ShiftlockAllowed = true

-- Camera and character references
local Character = nil
local Humanoid = nil
local RootPart = nil

-- Camera positioning constants (matching PC Roblox)
local CAMERA_OFFSET = Vector3.new(1.75, 0, 0) -- Right shoulder offset
local CAMERA_DISTANCE = 12.5 -- Distance from character
local ROTATION_SPEED = 0.007 -- Mouse sensitivity multiplier

-- Input state tracking
local LastMouseBehavior = UserInputService.MouseBehavior
local MouseLocked = false

-- Frontend-safe property setter
local function SafeSetProperty(instance, property, value)
	local success, error = pcall(function()
		instance[property] = value
	end)
	if not success then
		warn("Shiftlock: Failed to set " .. property .. " - " .. tostring(error))
	end
	return success
end

-- Get character and validate components (FE compatible)
local function GetCharacterComponents()
	Character = LocalPlayer.Character
	if not Character then return false end
	
	RootPart = Character:FindFirstChild("HumanoidRootPart") or 
	          Character:FindFirstChild("Torso") or 
	          Character:FindFirstChild("UpperTorso")
	          
	Humanoid = Character:FindFirstChildOfClass("Humanoid")
	
	-- Verify we can access these components
	if RootPart and Humanoid then
		local success = pcall(function()
			local _ = RootPart.CFrame
			local _ = Humanoid.AutoRotate
		end)
		return success
	end
	
	return false
end

-- Calculate precise camera position (PC Roblox style)
local function CalculateCameraPosition()
	if not GetCharacterComponents() then return end
	
	local rootCFrame = RootPart.CFrame
	local rootPosition = rootCFrame.Position
	
	-- Get camera's current look direction
	local cameraLookVector = Camera.CFrame.LookVector
	local cameraRightVector = Camera.CFrame.RightVector
	local cameraUpVector = Camera.CFrame.UpVector
	
	-- Calculate offset position (right shoulder view)
	local offsetPosition = rootPosition + 
		(cameraRightVector * CAMERA_OFFSET.X) +
		(cameraUpVector * CAMERA_OFFSET.Y) +
		(cameraLookVector * CAMERA_OFFSET.Z)
	
	-- Position camera behind and to the right of character
	local cameraPosition = offsetPosition - (cameraLookVector * CAMERA_DISTANCE)
	
	-- Create camera CFrame looking at character
	local targetCFrame = CFrame.lookAt(cameraPosition, rootPosition + Vector3.new(0, 2, 0))
	
	return targetCFrame
end

-- Synchronize character rotation with camera (PC Roblox behavior)
local function SynchronizeCharacterRotation()
	if not GetCharacterComponents() then return end
	
	-- Get camera's horizontal look direction
	local cameraLookVector = Camera.CFrame.LookVector
	local horizontalLook = Vector3.new(cameraLookVector.X, 0, cameraLookVector.Z).Unit
	
	-- Create rotation CFrame maintaining Y position
	local currentPosition = RootPart.Position
	local targetCFrame = CFrame.lookAt(currentPosition, currentPosition + horizontalLook)
	
	-- Apply rotation (FE safe)
	SafeSetProperty(RootPart, "CFrame", targetCFrame)
end

-- Handle mouse movement for camera rotation
local function HandleMouseMovement(input)
	if not ShiftlockEnabled or not MouseLocked then return end
	
	local mouseDelta = UserInputService:GetMouseDelta()
	local rotationX = mouseDelta.X * ROTATION_SPEED
	local rotationY = mouseDelta.Y * ROTATION_SPEED
	
	-- Apply camera rotation
	local currentCFrame = Camera.CFrame
	local newCFrame = currentCFrame * CFrame.Angles(-rotationY, -rotationX, 0)
	
	SafeSetProperty(Camera, "CFrame", newCFrame)
end

-- Enable Shiftlock mode
local function EnableShiftlock()
	if not ShiftlockAllowed or not GetCharacterComponents() then return end
	
	ShiftlockEnabled = true
	
	-- Lock mouse to center (PC Roblox behavior)
	MouseLocked = true
	SafeSetProperty(UserInputService, "MouseBehavior", Enum.MouseBehavior.LockCenter)
	
	-- Disable character auto-rotation
	SafeSetProperty(Humanoid, "AutoRotate", false)
	
	print("Shiftlock: Enabled")
end

-- Disable Shiftlock mode
local function DisableShiftlock()
	ShiftlockEnabled = false
	MouseLocked = false
	
	-- Restore default mouse behavior
	SafeSetProperty(UserInputService, "MouseBehavior", Enum.MouseBehavior.Default)
	
	-- Re-enable character auto-rotation
	if GetCharacterComponents() then
		SafeSetProperty(Humanoid, "AutoRotate", true)
	end
	
	print("Shiftlock: Disabled")
end

-- Toggle Shiftlock state (PC Roblox behavior)
local function ToggleShiftlock()
	if ShiftlockEnabled then
		DisableShiftlock()
	else
		EnableShiftlock()
	end
end

-- Handle Shift key input
local function OnInputBegan(input, gameProcessed)
	if gameProcessed then return end
	
	-- Check for Shift key press (both left and right shift)
	if input.KeyCode == Enum.KeyCode.LeftShift or input.KeyCode == Enum.KeyCode.RightShift then
		ToggleShiftlock()
	end
end

-- Handle mouse movement input
local function OnInputChanged(input, gameProcessed)
	if gameProcessed then return end
	
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		HandleMouseMovement(input)
	end
end

-- Main update loop (matches PC Roblox timing)
local function UpdateShiftlock()
	if not ShiftlockEnabled or not GetCharacterComponents() then return end
	
	-- Synchronize character rotation with camera
	SynchronizeCharacterRotation()
	
	-- Update camera position for shoulder view
	local targetCameraFrame = CalculateCameraPosition()
	if targetCameraFrame then
		SafeSetProperty(Camera, "CFrame", targetCameraFrame)
	end
end

-- Handle character respawn
local function OnCharacterAdded(character)
	Character = character
	
	-- Wait for character to fully load
	character:WaitForChild("HumanoidRootPart", 5)
	character:WaitForChild("Humanoid", 5)
	
	-- Reset shiftlock state on respawn
	if ShiftlockEnabled then
		DisableShiftlock()
	end
end

-- Initialize connections
UserInputService.InputBegan:Connect(OnInputBegan)
UserInputService.InputChanged:Connect(OnInputChanged)
RunService.Heartbeat:Connect(UpdateShiftlock)

-- Handle character respawning
LocalPlayer.CharacterAdded:Connect(OnCharacterAdded)
if LocalPlayer.Character then
	OnCharacterAdded(LocalPlayer.Character)
end

-- Prevent mouse behavior changes when locked
UserInputService:GetPropertyChangedSignal("MouseBehavior"):Connect(function()
	if MouseLocked and UserInputService.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
		SafeSetProperty(UserInputService, "MouseBehavior", Enum.MouseBehavior.LockCenter)
	end
end)

-- API for external control (optional)
local ShiftlockAPI = {
	-- Toggle shiftlock state
	Toggle = function()
		ToggleShiftlock()
		return ShiftlockEnabled
	end,
	
	-- Enable shiftlock
	Enable = function()
		EnableShiftlock()
		return ShiftlockEnabled
	end,
	
	-- Disable shiftlock
	Disable = function()
		DisableShiftlock()
		return ShiftlockEnabled
	end,
	
	-- Check if shiftlock is enabled
	IsEnabled = function()
		return ShiftlockEnabled
	end,
	
	-- Check if shiftlock is allowed
	IsAllowed = function()
		return ShiftlockAllowed
	end,
	
	-- Set shiftlock permission
	SetAllowed = function(allowed)
		ShiftlockAllowed = allowed
		if not allowed and ShiftlockEnabled then
			DisableShiftlock()
		end
		return ShiftlockAllowed
	end
}

-- Initialize
print("PC Roblox Shiftlock System Loaded!")
print("Press Shift to toggle Shiftlock mode")
print("Frontend-compatible | Emulator-ready")

-- Export API
return ShiftlockAPI
