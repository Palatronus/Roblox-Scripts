--[[
    Frontend-compatible Shiftlock
    PC-accurate behavior with emulator-safe handling (e.g., LDPlayer).
    - Prevents involuntary camera locking
    - Preserves full camera movement freedom
    - Matches PC Shiftlock by locking mouse to center and offsetting camera to shoulder
    - Avoids direct Camera CFrame/Focus manipulation
]]

local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
local UserInputService = game:GetService("UserInputService")

local Player = Players.LocalPlayer

-- UI
local ShiftLockScreenGui = Instance.new("ScreenGui")
ShiftLockScreenGui.Name = "Shiftlock (CoreGui)"
ShiftLockScreenGui.Parent = CoreGui
ShiftLockScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ShiftLockScreenGui.ResetOnSpawn = false

local States = {
    Off = "rbxasset://textures/ui/mouseLock_off@2x.png",
    On = "rbxasset://textures/ui/mouseLock_on@2x.png",
    Lock = "rbxasset://textures/MouseLockedCursor.png"
}

local ShiftLockButton = Instance.new("ImageButton")
ShiftLockButton.Parent = ShiftLockScreenGui
ShiftLockButton.BackgroundTransparency = 1
ShiftLockButton.Position = UDim2.new(0.86, 0, 0.5, 0)
ShiftLockButton.Size = UDim2.new(0.064, 0, 0.066, 0)
ShiftLockButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
ShiftLockButton.Image = States.Off

local ShiftlockCursor = Instance.new("ImageLabel")
ShiftlockCursor.Name = "ShiftlockCursor"
ShiftlockCursor.Parent = ShiftLockScreenGui
ShiftlockCursor.Image = States.Lock
ShiftlockCursor.Size = UDim2.new(0.03, 0, 0.03, 0)
ShiftlockCursor.Position = UDim2.new(0.5, 0, 0.5, 0)
ShiftlockCursor.AnchorPoint = Vector2.new(0.5, 0.5)
ShiftlockCursor.SizeConstraint = Enum.SizeConstraint.RelativeXX
ShiftlockCursor.BackgroundTransparency = 1
ShiftlockCursor.Visible = false

-- State
local enabled = false

local function getHumanoid()
    local char = Player.Character
    if not char then return nil end
    return char:FindFirstChildOfClass("Humanoid")
end

local function canLockMouse()
    -- On pure touch devices, donâ€™t force mouse lock. Emulators with keyboard/mouse are fine.
    if UserInputService.TouchEnabled and not UserInputService.MouseEnabled and not UserInputService.KeyboardEnabled then
        return false
    end
    return true
end

local function applyShiftlockState(on)
    local humanoid = getHumanoid()
    if humanoid then
        -- PC behavior keeps AutoRotate; the avatar faces movement direction.
        humanoid.AutoRotate = true
        -- Shoulder offset matching PC shiftlock feel; avoids Camera CFrame mutations.
        humanoid.CameraOffset = on and Vector3.new(1.7, 0, 0) or Vector3.new(0, 0, 0)
    end

    if canLockMouse() then
        UserInputService.MouseBehavior = on and Enum.MouseBehavior.LockCenter or Enum.MouseBehavior.Default
        -- Hide default cursor when locked; show center crosshair instead.
        pcall(function()
            UserInputService.MouseIconEnabled = not on
        end)
    end

    ShiftLockButton.Image = on and States.On or States.Off
    ShiftlockCursor.Visible = on
end

local function toggle()
    enabled = not enabled
    applyShiftlockState(enabled)
end

-- Button toggle
ShiftLockButton.MouseButton1Click:Connect(toggle)

-- Keyboard toggle (PC-like): LeftShift
local function shiftlockAction(actionName, inputState, inputObject)
    if inputState == Enum.UserInputState.Begin then
        toggle()
    end
end
ContextActionService:BindAction("ShiftLockToggle", shiftlockAction, false, Enum.KeyCode.LeftShift)

-- Maintain state on respawn
Player.CharacterAdded:Connect(function()
    -- Wait briefly for Humanoid to exist
    local char = Player.Character
    if char then char:WaitForChild("Humanoid", 3) end
    applyShiftlockState(enabled)
end)

-- Initial application (in case character is already loaded)
applyShiftlockState(false)

return true
