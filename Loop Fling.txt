local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer

-- GUI Setup (unchanged)
-- ... [All GUI elements remain identical] ...

-- Fling System Variables (MODIFIED)
local flingActive = false
local targetPlayer = nil
local TARGET_USERNAME = ""
local FLING_POWER = 25000 -- Reduced for stability
local PREDICTION_FACTOR = 0.35 -- Increased prediction window
local DIRECTIONAL_BOOST = 1.8 -- Stronger directional influence
local connection = nil

-- Noclip System (MODIFIED)
local function enableNoclip()
    if lp.Character then
        for _, part in pairs(lp.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
                part.Massless = false -- Disabled to preserve physics
            end
        end
    end
end

-- Prediction System (IMPROVED)
local function calculatePredictedPosition(targetRoot)
    local targetVelocity = targetRoot.Velocity
    local basePrediction = targetRoot.Position + (targetVelocity * PREDICTION_FACTOR)
    
    -- Enhanced jump prediction
    local verticalBoost = targetVelocity.Y > 0 and 2.5 or 1
    return basePrediction + (targetVelocity.Unit * targetVelocity.Magnitude * DIRECTIONAL_BOOST * verticalBoost)
end

-- Force Application (REWORKED)
local function applyPredictiveForce(targetRoot, localRoot)
    local predictedPos = calculatePredictedPosition(targetRoot)
    
    -- Teleport BEHIND target's predicted path
    localRoot.CFrame = CFrame.new(predictedPos - targetRoot.Velocity.Unit * 3) * CFrame.new(0, 2, 0)
    
    -- Apply explosive force to LOCAL PLAYER (physics-based fling)
    local direction = (targetRoot.Position - localRoot.Position).Unit
    localRoot.Velocity = direction * FLING_POWER * math.random(0.8, 1.2) +
        Vector3.new(math.random(-500,500), math.random(300,700), math.random(-500,500))
end

-- Main Loop (OPTIMIZED)
local function maintainFling()
    while flingActive and task.wait(0.1) do -- Smoother updates
        pcall(function()
            if not targetPlayer or not targetPlayer.Character then return end
            local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            local localRoot = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
            
            if targetRoot and localRoot then
                applyPredictiveForce(targetRoot, localRoot)
            end
        end)
    end
end

-- Toggle System (MODIFIED)
toggleBtn.MouseButton1Click:Connect(function()
    flingActive = not flingActive
    toggleBtn.Text = flingActive and "STOP FLING" or "START FLING"
    
    if flingActive then
        TARGET_USERNAME = inputBox.Text
        targetPlayer = getPlayer(TARGET_USERNAME)
        enableNoclip()
        if connection then connection:Disconnect() end
        connection = RunService.Heartbeat:Connect(maintainFling)
    else
        -- Reset physics
        if lp.Character and lp.Character:FindFirstChild("Humanoid") then
            lp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        end
        TARGET_USERNAME = ""
        targetPlayer = nil
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end
end)

-- Player lookup (unchanged)
-- Cleanup (unchanged)
