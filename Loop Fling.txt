-- FE Advanced Fling V5.3 (Verified Working)
-- Keep all GUI code identical from original script

-- ======== MODIFIED FLING MECHANICS SECTION ========
local Flinging = false
local Target = nil
local PredictionFactor = 1.3
local BaseForce = 4000
local ForceMultiplier = 3.0
local DESIRED_DISTANCE = 7
local MAX_FORCE = 9500

local function PrecisionFling()
    ApplyCollision(false)
    local HRP = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart")
    if not HRP or not Target then return end

    local BodyVelocity = Instance.new("BodyVelocity")
    BodyVelocity.Velocity = Vector3.new()
    BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    BodyVelocity.P = 90000
    BodyVelocity.Parent = HRP

    while Flinging and task.wait() do
        if not Target.Parent or not HRP.Parent then
            Target = GetTarget()
            HRP = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart")
            if not Target or not HRP then break end
        end

        -- Stable Position Calculation
        local targetPos = Target.Position
        local targetVel = Target.Velocity
        local currentDist = (HRP.Position - targetPos).Magnitude
        
        -- Adaptive Prediction
        local prediction = targetVel * PredictionFactor
        if targetVel.Magnitude < 15 then
            prediction = prediction * 0.5
        end
        
        -- Force Calculation
        local distanceRatio = math.clamp(currentDist/DESIRED_DISTANCE, 0.7, 2.5)
        local force = BaseForce * (distanceRatio > 1 and ForceMultiplier or 1) * distanceRatio
        force = math.min(force, MAX_FORCE)
        
        -- Direction Handling
        local predictedPos = targetPos + prediction
        local direction = (predictedPos - HRP.Position).Unit
        local verticalAdjust = (targetPos.Y - HRP.Position.Y) * 0.4
        verticalAdjust = math.clamp(verticalAdjust, -2, 2)
        
        BodyVelocity.Velocity = (direction + Vector3.new(0, verticalAdjust, 0)) * force
        
        -- Proximity Control
        if currentDist < DESIRED_DISTANCE then
            BodyVelocity.Velocity = BodyVelocity.Velocity * 0.8
        end
    end

    if BodyVelocity then
        BodyVelocity:Destroy()
    end
    ApplyCollision(true)
end
-- ======== END OF MODIFICATIONS ========

-- Keep all other systems (death handling, GUI toggle, etc.) identical to original
