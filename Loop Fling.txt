local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- GUI Setup
local GUI = Instance.new("ScreenGui")
GUI.Parent = game.CoreGui

local Main = Instance.new("Frame")
Main.Size = UDim2.new(0, 300, 0, 200)
Main.Position = UDim2.new(0.5, -150, 0.5, -100)
Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Main.Active = true
Main.Parent = GUI

-- Username Input
local Input = Instance.new("TextBox")
Input.PlaceholderText = "Type username..."
Input.Size = UDim2.new(0.9, 0, 0.2, 0)
Input.Position = UDim2.new(0.05, 0, 0.1, 0)
Input.Parent = Main

local Suggestions = Instance.new("ScrollingFrame")
Suggestions.Size = UDim2.new(1, 0, 0, 80)
Suggestions.Position = UDim2.new(0, 0, 1, 0)
Suggestions.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Suggestions.Visible = false
Suggestions.Parent = Input

local function UpdateSuggestions()
    Suggestions:ClearAllChildren()
    local query = Input.Text:lower()
    local suggestionsAdded = 0
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and (query == "" or player.Name:lower():find(query)) then
            local btn = Instance.new("TextButton")
            btn.Text = player.Name
            btn.Size = UDim2.new(1, -10, 0, 20)
            btn.Position = UDim2.new(0, 5, 0, suggestionsAdded * 22)
            btn.BackgroundTransparency = 1
            btn.TextXAlignment = Enum.TextXAlignment.Left
            btn.MouseButton1Click:Connect(function()
                Input.Text = player.Name
                Suggestions.Visible = false
            end)
            btn.Parent = Suggestions
            suggestionsAdded = suggestionsAdded + 1
        end
    end
    
    Suggestions.CanvasSize = UDim2.new(0, 0, 0, suggestionsAdded * 22)
    Suggestions.Visible = suggestionsAdded > 0
end

Input.Focused:Connect(UpdateSuggestions)
Input:GetPropertyChangedSignal("Text"):Connect(UpdateSuggestions)

-- Control Buttons
local Toggle = Instance.new("TextButton")
Toggle.Text = "TOGGLE FLING"
Toggle.Size = UDim2.new(0.6, 0, 0.2, 0)
Toggle.Position = UDim2.new(0.2, 0, 0.4, 0)
Toggle.Parent = Main

local CamButton = Instance.new("TextButton")
CamButton.Text = "TOGGLE CAMERA"
CamButton.Size = UDim2.new(0.6, 0, 0.2, 0)
CamButton.Position = UDim2.new(0.2, 0, 0.65, 0)
CamButton.Parent = Main

-- Improved Fling System
local Flinging = false
local ActiveCoroutine = nil
local PredictionDamping = 0.65

local function FlingTarget(target)
    while Flinging and task.wait(0.02) do
        if target and target.Character and LP.Character then
            local tHRP = target.Character:FindFirstChild("HumanoidRootPart")
            local myHRP = LP.Character:FindFirstChild("HumanoidRootPart")
            local humanoid = target.Character:FindFirstChildOfClass("Humanoid")
            
            if tHRP and myHRP and humanoid and humanoid.Health > 0 then
                -- Improved prediction system
                local predictedPos = tHRP.Position + (tHRP.Velocity * PredictionDamping)
                local dirVector = (predictedPos - myHRP.Position).Unit
                local distanceMod = math.clamp((predictedPos - myHRP.Position).Magnitude/12, 0.7, 1.3)
                
                -- Stabilized forces
                myHRP.CFrame = CFrame.lookAt(myHRP.Position, predictedPos) 
                              * CFrame.Angles(0, math.rad(math.random(-15,15)), 0)
                              + Vector3.new(math.random(-1,1), math.random(2,4), math.random(-1,1))
                
                myHRP.Velocity = dirVector * (4850 * distanceMod) 
                               + (tHRP.Velocity * 0.3) 
                               + Vector3.new(0, 2250, 0)
            end
        else
            Flinging = false
            Toggle.Text = "TOGGLE FLING"
            break
        end
    end
end

-- Improved Camera System
local Tracking = false
local OriginalCameraType = Camera.CameraType
local CameraDistance = 15
local ZoomMomentum = 0

local function TrackTarget(target)
    local conn
    conn = RunService.Heartbeat:Connect(function()
        if not Tracking then 
            conn:Disconnect() 
            return 
        end
        
        if target and target.Character then
            local humanoid = target.Character:FindFirstChildOfClass("Humanoid")
            local hrp = target.Character:FindFirstChild("HumanoidRootPart")
            
            if humanoid and humanoid.Health > 0 and hrp then
                Camera.CameraType = Enum.CameraType.Scriptable
                Camera.CFrame = CFrame.new(
                    hrp.Position + Vector3.new(
                        math.sin(tick())*1.2, 
                        5 + math.cos(tick()*0.5)*0.3, 
                        CameraDistance + ZoomMomentum
                    ),
                    hrp.Position
                )
            end
        else
            Tracking = false
            CamButton.Text = "TOGGLE CAMERA"
            Camera.CameraType = OriginalCameraType
        end
    end)
end

-- Dragging System
local dragging = false
local dragStart, startPos

Main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Main.Position
    end
end)

Main.InputEnded:Connect(function(input)
    dragging = false
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Main.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Button Handlers
Toggle.MouseButton1Click:Connect(function()
    Flinging = not Flinging
    Toggle.Text = Flinging and "STOP FLINGING" or "TOGGLE FLING"
    
    if Flinging then
        local target = Players:FindFirstChild(Input.Text)
        if target then
            if ActiveCoroutine then
                coroutine.close(ActiveCoroutine)
            end
            ActiveCoroutine = coroutine.create(FlingTarget)
            coroutine.resume(ActiveCoroutine, target)
        else
            Flinging = false
            Toggle.Text = "TOGGLE FLING"
            warn("Target player not found!")
        end
    end
end)

CamButton.MouseButton1Click:Connect(function()
    Tracking = not Tracking
    CamButton.Text = Tracking and "STOP CAMERA" or "TOGGLE CAMERA"
    
    if Tracking then
        local target = Players:FindFirstChild(Input.Text)
        if target then
            coroutine.wrap(TrackTarget)(target)
        else
            Tracking = false
            CamButton.Text = "TOGGLE CAMERA"
            warn("Target player not found!")
        end
    else
        Camera.CameraType = OriginalCameraType
    end
end)

-- Fixed Zoom Control
UIS.InputChanged:Connect(function(input)
    if Tracking and input.UserInputType == Enum.UserInputType.MouseWheel then
        local scrollDelta = -input.Position.Y -- Fixed inversion
        ZoomMomentum = math.clamp(ZoomMomentum + scrollDelta * 1.1, -5, 5)
        CameraDistance = math.clamp(CameraDistance + scrollDelta * 4, 4, 30)
        RunService.Heartbeat:Wait()
        ZoomMomentum = ZoomMomentum * 0.75
    end
end)
