local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer
local mouse = lp:GetMouse()
local flingEnabled = false
local target = nil
local connection = nil

-- GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "FlingGUI"

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 120, 0, 40)
toggleBtn.Position = UDim2.new(1, -130, 0, 10)
toggleBtn.Text = "FLING: OFF"
toggleBtn.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Parent = gui

-- Prediction Variables
local predictionStrength = 0.4
local velocityMultiplier = 85
local maxDistance = 8
local flingPower = Vector3.new(500, 500, 500)

local function getPlr(name)
    name = name:lower()
    for _,v in pairs(Players:GetPlayers()) do
        if v ~= lp and (v.Name:lower():find(name) or v.DisplayName:lower():find(name)) then
            return v
        end
    end
end

local function setupCharacter()
    for _,v in pairs(lp.Character:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = false
            v.Massless = true
            sethiddenproperty(v, "NetworkIsSleeping", true)
        end
    end
    sethiddenproperty(lp, "SimulationRadius", 1000)
end

local function predictiveFling()
    if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local root = lp.Character.HumanoidRootPart
    local tRoot = target.Character.HumanoidRootPart
    local tVel = tRoot.Velocity * predictionStrength
    local futurePos = tRoot.Position + tVel
    
    -- Dynamic position adjustment
    local offset = Vector3.new(
        math.random(-maxDistance, maxDistance),
        math.random(3, maxDistance),
        math.random(-maxDistance, maxDistance)
    )
    
    -- Velocity prediction
    root.Velocity = ((futurePos + offset) - root.Position) * velocityMultiplier
    root.Velocity = root.Velocity:Clamp(-flingPower, flingPower)
    
    -- Movement hindrance
    if tVel.Magnitude > 10 then
        root.Velocity += tRoot.CFrame.LookVector * (tVel.Magnitude * 2)
    end
end

toggleBtn.MouseButton1Click:Connect(function()
    flingEnabled = not flingEnabled
    toggleBtn.Text = "FLING: " .. (flingEnabled and "ON" or "OFF")
    
    if flingEnabled then
        target = getPlr(mouse.Target and mouse.Target.Parent.Name or "")
        if not target then
            flingEnabled = false
            toggleBtn.Text = "FLING: OFF"
            return
        end
        
        setupCharacter()
        connection = RunService.Heartbeat:Connect(function()
            if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
                pcall(predictiveFling)
            else
                flingEnabled = false
                toggleBtn.Text = "FLING: OFF"
                connection:Disconnect()
            end
        end)
    else
        if connection then connection:Disconnect() end
        if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
            lp.Character.HumanoidRootPart.Velocity = Vector3.new()
        end
    end
end)

-- Auto-reconnect if target respawns
Players.PlayerAdded:Connect(function(plr)
    if plr == target then
        plr.CharacterAdded:Wait()
        if flingEnabled then
            task.wait(1)
            setupCharacter()
        end
    end
end)
