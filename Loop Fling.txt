-- FE LoopFling V3 (Prediction-Based)
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local Mouse = LP:GetMouse()

local FlingGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TargetBox = Instance.new("TextBox")
local ToggleBtn = Instance.new("TextButton")

-- GUI Setup
FlingGui.Parent = game.CoreGui
FlingGui.Name = "FlingControl"
Frame.Parent = FlingGui
Frame.Size = UDim2.new(0, 200, 0, 100)
Frame.Position = UDim2.new(0.5, -100, 0.5, -50)

TargetBox.Parent = Frame
TargetBox.Size = UDim2.new(0.9, 0, 0.4, 0)
TargetBox.Position = UDim2.new(0.05, 0, 0.1, 0)
TargetBox.PlaceholderText = "Enter Username"

ToggleBtn.Parent = Frame
ToggleBtn.Size = UDim2.new(0.9, 0, 0.4, 0)
ToggleBtn.Position = UDim2.new(0.05, 0, 0.55, 0)
ToggleBtn.Text = "Toggle Fling"
ToggleBtn.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)

-- Fling Configuration
local Flinging = false
local Target = nil
local LoopActive = false
local PredictionFactor = 1.25 -- Adjust prediction strength
local FlingForce = 5000 -- Base force (adjust carefully)
local DirectionChangeInterval = 0.1 -- Seconds between direction changes

local function GetTarget()
    local targetPlayer = Players:FindFirstChild(TargetBox.Text)
    return targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
end

local function ApplyCollision(state)
    if LP.Character then
        for _, part in pairs(LP.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = state
            end
        end
    end
end

local function PredictionFling()
    ApplyCollision(false)
    local HRP = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart")
    if not HRP or not Target then return end

    local BodyVelocity = Instance.new("BodyVelocity")
    BodyVelocity.Velocity = Vector3.new()
    BodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    BodyVelocity.P = 100000
    BodyVelocity.Parent = HRP

    local lastDirectionChange = tick()
    local currentDirection = Vector3.new()

    while Flinging and wait() do
        if not Target.Parent then
            Target = GetTarget()
            if not Target then break end
        end

        -- Calculate predicted position
        local targetVelocity = Target.Velocity
        local predictedPosition = Target.Position + (targetVelocity * PredictionFactor)

        -- Dynamic direction calculation with vertical component
        local baseDirection = (predictedPosition - HRP.Position).Unit
        local verticalComponent = Vector3.new(0, (Target.Position.Y - HRP.Position.Y > 3) and 2 or 1.5, 0)
        currentDirection = baseDirection + verticalComponent

        -- Apply random directional variation
        if tick() - lastDirectionChange > DirectionChangeInterval then
            currentDirection = currentDirection * Vector3.new(
                math.random(80, 120)/100,
                math.random(80, 120)/100,
                math.random(80, 120)/100
            )
            lastDirectionChange = tick()
        end

        -- Velocity adjustment based on distance
        local distanceFactor = math.clamp((HRP.Position - Target.Position).Magnitude / 10, 1, 5)
        BodyVelocity.Velocity = currentDirection * (FlingForce * distanceFactor)

        -- Anti-Jump/Spin compensation
        if Target.Velocity.Y > 5 then -- Detect jumping
            BodyVelocity.Velocity = BodyVelocity.Velocity + Vector3.new(0, FlingForce/2, 0)
        end
    end

    BodyVelocity:Destroy()
    ApplyCollision(true)
end

ToggleBtn.MouseButton1Click:Connect(function()
    Flinging = not Flinging
    ToggleBtn.BackgroundColor3 = Flinging and Color3.new(1, 0, 0) or Color3.new(0.3, 0.3, 0.3)
    
    if Flinging then
        Target = GetTarget()
        if Target then
            coroutine.wrap(PredictionFling)()
        end
    else
        Target = nil
    end
end)

-- Auto-reconnect system
RS.Heartbeat:Connect(function()
    if Flinging and (not Target or not Target.Parent) then
        Target = GetTarget()
        if not Target then
            Flinging = false
            ToggleBtn.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
        end
    end
end)
