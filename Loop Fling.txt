local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer

-- GUI Setup
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "FlingSystem"

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 250, 0, 150)
mainFrame.Position = UDim2.new(0.5, -125, 0.5, -75)
mainFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
mainFrame.Active = true
mainFrame.Parent = gui

local dragHandle = Instance.new("TextLabel")
dragHandle.Size = UDim2.new(1, 0, 0, 25)
dragHandle.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
dragHandle.Text = "Fling Controller"
dragHandle.TextColor3 = Color3.new(1, 1, 1)
dragHandle.Parent = mainFrame

-- Fixed dragging system
local dragging = false
local dragStartPos
local frameStartPos

dragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStartPos = Vector2.new(input.Position.X, input.Position.Y)
        frameStartPos = mainFrame.Position
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local dragDelta = Vector2.new(input.Position.X, input.Position.Y) - dragStartPos
        mainFrame.Position = UDim2.new(
            frameStartPos.X.Scale, 
            frameStartPos.X.Offset + dragDelta.X,
            frameStartPos.Y.Scale, 
            frameStartPos.Y.Offset + dragDelta.Y
        )
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0.9, 0, 0, 30)
inputBox.Position = UDim2.new(0.05, 0, 0.25, 0)
inputBox.PlaceholderText = "Enter username"
inputBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
inputBox.TextColor3 = Color3.new(1, 1, 1)
inputBox.Parent = mainFrame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0.9, 0, 0, 35)
toggleBtn.Position = UDim2.new(0.05, 0, 0.6, 0)
toggleBtn.Text = "START FLING"
toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Parent = mainFrame

-- Fling System
local flingActive = false
local TARGET_USERNAME = ""
local connection = nil
local FLING_POWER = 500
local PREDICTION_FACTOR = 0.2
local DIRECTIONAL_OFFSET = 0.8

local function getPlayer(name)
    name = name:lower()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= lp and (player.Name:lower():find(name) or player.DisplayName:lower():find(name)) then
            return player
        end
    end
    return nil
end

-- Improved character preparation
lp.CharacterAdded:Connect(function()
    prepareCharacter()
end)

local function prepareCharacter()
    repeat task.wait() until lp.Character
    for _, v in pairs(lp.Character:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = false
            v.Massless = true
        end
    end
    if lp.Character:FindFirstChild("Humanoid") then
        lp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
    end
end

local function aggressiveFling()
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
    if not lp.Character or not lp.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local root = lp.Character.HumanoidRootPart
    local tRoot = targetPlayer.Character.HumanoidRootPart
    
    local targetVelocity = tRoot.Velocity
    local basePrediction = tRoot.Position + (targetVelocity * PREDICTION_FACTOR)
    
    -- Enhanced directional prediction
    if targetVelocity.Magnitude > 5 then
        local movementDirection = targetVelocity.Unit
        basePrediction += (movementDirection * math.clamp(targetVelocity.Magnitude, 0, 30) * DIRECTIONAL_OFFSET)
    end

    local direction = (basePrediction - root.Position).Unit
    root.Velocity = direction * FLING_POWER + Vector3.new(
        math.random(-30, 30), --Reduced Randomness
        math.random(15, 35),
        math.random(-30, 30)
    )
end

-- Control System
toggleBtn.MouseButton1Click:Connect(function()
    flingActive = not flingActive
    toggleBtn.Text = flingActive and "STOP FLING" or "START FLING"
    
    if flingActive then
        TARGET_USERNAME = inputBox.Text
        local initialPlayer = getPlayer(TARGET_USERNAME)
        
        if not initialPlayer then
            inputBox.Text = "Invalid player!"
            task.wait(1)
            inputBox.Text = ""
            flingActive = false
            toggleBtn.Text = "START FLING"
            return
        end
        
        targetPlayer = initialPlayer
        prepareCharacter()
        
        -- Persistent tracking system
        connection = RunService.Heartbeat:Connect(function()
            -- Auto-reacquire target if missing
            if not targetPlayer or not targetPlayer.Parent then
                targetPlayer = getPlayer(TARGET_USERNAME)
            end
            
            pcall(aggressiveFling)
        end)
    else
        TARGET_USERNAME = ""
        if connection then
            connection:Disconnect()
            connection = nil
        end
        if lp.Character and lp.Character:FindFirstChild("HumanoidRootPart") then
            lp.Character.HumanoidRootPart.Velocity = Vector3.new()
        end
    end
end)

-- Auto-cleanup
Players.PlayerRemoving:Connect(function(player)
    if player == targetPlayer then
        flingActive = false
        toggleBtn.Text = "START FLING"
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end
end)

-- Final safety check
if connection then
    connection:Disconnect()
end
