local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI Creation
local gui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local textBox = Instance.new("TextBox")
local toggleButton = Instance.new("TextButton")
local dragHandle = Instance.new("Frame")

gui.Name = "FlingGUI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.BackgroundTransparency = 0.5
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Parent = gui

dragHandle.Name = "DragHandle"
dragHandle.Size = UDim2.new(1, 0, 0, 20)
dragHandle.BackgroundTransparency = 1
dragHandle.Parent = frame

textBox.Name = "TargetBox"
textBox.Size = UDim2.new(0.9, 0, 0.3, 0)
textBox.Position = UDim2.new(0.05, 0, 0.2, 0)
textBox.PlaceholderText = "Enter username"
textBox.Parent = frame

toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0.4, 0, 0.3, 0)
toggleButton.Position = UDim2.new(0.3, 0, 0.6, 0)
toggleButton.Text = "Start"
toggleButton.Parent = frame

-- Draggable GUI
local dragging, dragInput, dragStart, startPos

dragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

dragHandle.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Optimized Fling Core
local flingActive = false
local connections = {}
local anchor = nil
local alignments = {}

local function cleanUp()
    for _, conn in ipairs(connections) do conn:Disconnect() end
    table.clear(connections)
    
    if anchor then
        anchor:Destroy()
        anchor = nil
    end
    
    for part, _ in pairs(alignments) do
        if part:FindFirstChild("FlingAttachment") then
            part.FlingAttachment:Destroy()
        end
    end
    table.clear(alignments)
end

local function align(Part0, Part1)
    if alignments[Part0] then return end
    
    local att1 = Instance.new("Attachment")
    att1.Name = "FlingAttachment"
    att1.Parent = Part1

    local att0 = att1:Clone()
    att0.Parent = Part0

    local ap = Instance.new("AlignPosition")
    ap.ApplyAtCenterOfMass = true
    ap.MaxForce = 1e6 -- Reduced from 9e9
    ap.MaxVelocity = 1e4 -- Reduced from 9e9
    ap.Responsiveness = 100
    ap.Attachment1 = att1
    ap.Attachment0 = att0
    ap.Parent = att0

    alignments[Part0] = true
end

local function startFling(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    if not targetPlayer or targetPlayer == LocalPlayer then return end

    while flingActive and task.wait(0.5) do -- Throttled loop
        cleanUp()
        
        local character = LocalPlayer.Character
        local targetChar = targetPlayer.Character
        if not character or not targetChar or not targetChar:FindFirstChild("HumanoidRootPart") then continue end

        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then continue end

        -- Single anchor reuse
        anchor = Instance.new("Part")
        anchor.Name = "FlingAnchor"
        anchor.Anchored = true
        anchor.Transparency = 1
        anchor.CanCollide = false
        anchor.Size = Vector3.new(2, 2, 1)
        anchor.CFrame = hrp.CFrame
        anchor.Parent = character

        -- Reduced part scanning
        local parts = {}
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                if part.CanCollide then
                    table.insert(parts, part)
                else
                    part.Velocity = Vector3.new(0, -250, 0) -- Reduced force
                end
            end
        end

        -- Batch alignment
        for _, part in ipairs(parts) do
            align(part, anchor)
        end

        -- Optimized connections
        local follow = RunService.Stepped:Connect(function()
            if targetChar:FindFirstChild("HumanoidRootPart") then
                anchor.CFrame = targetChar.HumanoidRootPart.CFrame
            end
        end)

        local spin = RunService.Heartbeat:Connect(function()
            for _, part in ipairs(parts) do
                part.RotVelocity = Vector3.new(500, 500, 500) -- Reduced rotation
            end
        end)

        table.insert(connections, follow)
        table.insert(connections, spin)
    end
end

-- Toggle Control
toggleButton.MouseButton1Click:Connect(function()
    flingActive = not flingActive
    toggleButton.Text = flingActive and "Stop" or "Start"
    
    if flingActive then
        startFling(textBox.Text)
    else
        cleanUp()
    end
end)

-- Auto-reinit with cooldown
LocalPlayer.CharacterAdded:Connect(function()
    if flingActive then
        task.wait(2) -- Increased cooldown
        startFling(textBox.Text)
    end
end)
