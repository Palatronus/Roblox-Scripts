local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer

-- GUI Setup (unchanged)
-- ... [Keep all your original GUI code] ...

-- Fling System Variables (MODIFIED)
local flingActive = false
local targetPlayer = nil
local TARGET_USERNAME = ""
local FLING_POWER = 35000
local PREDICTION_FACTOR = 0.2
local REQUIRED_DISTANCE = 50 -- Max distance for activation (studs)
local connection = nil

-- Optimized noclip (FIXED)
local function enableNoclip()
    if lp.Character then
        for _, part in pairs(lp.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end

-- Prediction system (FIXED)
local function calculatePredictedPosition(targetRoot)
    local targetVelocity = targetRoot.Velocity
    return targetRoot.Position + (targetVelocity * PREDICTION_FACTOR)
end

-- Main fling logic (REWORKED)
local function maintainFling()
    while flingActive and task.wait(0.15) do
        pcall(function()
            if not targetPlayer then return end
            local character = targetPlayer.Character
            if not character then return end
            
            -- WaitForChild to prevent "not valid member" errors
            local targetRoot = character:WaitForChild("HumanoidRootPart", 2)
            local localRoot = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
            
            if targetRoot and localRoot then
                -- Distance check
                if (targetRoot.Position - localRoot.Position).Magnitude > REQUIRED_DISTANCE then
                    -- Teleport closer if too far
                    localRoot.CFrame = targetRoot.CFrame * CFrame.new(0, 3, -5)
                end
                
                -- Apply predictive force
                local predictedPos = calculatePredictedPosition(targetRoot)
                localRoot.CFrame = CFrame.new(predictedPos + Vector3.new(0, 2, 0))
                
                -- Direct force application to TARGET
                targetRoot.Velocity = (targetRoot.Position - localRoot.Position).Unit * FLING_POWER +
                    Vector3.new(math.random(-800,800), math.random(300,600), math.random(-800,800))
            end
        end)
    end
end

-- Toggle system (MODIFIED)
toggleBtn.MouseButton1Click:Connect(function()
    flingActive = not flingActive
    toggleBtn.Text = flingActive and "STOP FLING" or "START FLING"
    
    if flingActive then
        TARGET_USERNAME = inputBox.Text
        targetPlayer = getPlayer(TARGET_USERNAME)
        if targetPlayer then
            enableNoclip()
            if connection then connection:Disconnect() end
            connection = RunService.Heartbeat:Connect(maintainFling)
        end
    else
        -- Reset physics
        if lp.Character and lp.Character:FindFirstChild("Humanoid") then
            lp.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        end
        TARGET_USERNAME = ""
        targetPlayer = nil
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end
end)

-- Player lookup (ADDED VALIDATION)
local function getPlayer(name)
    if not name or name == "" then return nil end
    name = name:lower()
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= lp then
            if player.Name:lower():find(name) or player.DisplayName:lower():find(name) then
                return player
            end
        end
    end
    return nil
end
