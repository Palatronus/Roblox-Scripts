local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")
local Camera = workspace.CurrentCamera
local UIS = game:GetService("UserInputService")

-- Cleanup previous GUIs
if CoreGui:FindFirstChild("FlingSystem") then
    CoreGui.FlingSystem:Destroy()
end

-- GUI Construction
local GUI = Instance.new("ScreenGui")
GUI.Name = "FlingSystem"
GUI.Parent = CoreGui

local Main = Instance.new("Frame")
Main.Size = UDim2.new(0, 300, 0, 180)
Main.Position = UDim2.new(0.5, -150, 0.5, -90)
Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Main.Active = true
Main.Parent = GUI

-- Dragging System (Working)
local dragging, dragStart, startPos
Main.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Main.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Main.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X,
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Username Prediction (Fixed)
local Input = Instance.new("TextBox")
Input.PlaceholderText = "Type username..."
Input.Size = UDim2.new(0.9, 0, 0.2, 0)
Input.Position = UDim2.new(0.05, 0, 0.1, 0)
Input.Parent = Main

local Suggestions = Instance.new("Frame")
Suggestions.Size = UDim2.new(1, 0, 0, 80)
Suggestions.Position = UDim2.new(0, 0, 1, 0)
Suggestions.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Suggestions.Visible = false
Suggestions.Parent = Input

local function UpdateSuggestions()
    Suggestions:ClearAllChildren()
    local query = Input.Text:lower()
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player.Name:lower():find(query) then
            local btn = Instance.new("TextButton")
            btn.Text = player.Name
            btn.Size = UDim2.new(1, -10, 0, 20)
            btn.Position = UDim2.new(0, 5, 0, #Suggestions:GetChildren()*22)
            btn.BackgroundTransparency = 1
            btn.TextXAlignment = Enum.TextXAlignment.Left
            btn.MouseButton1Click:Connect(function()
                Input.Text = player.Name
                Suggestions.Visible = false
            end)
            btn.Parent = Suggestions
        end
    end
    Suggestions.Visible = #Suggestions:GetChildren() > 0
end

Input.Focused:Connect(UpdateSuggestions)
Input.Changed:Connect(UpdateSuggestions)

-- Auto-complete on Enter
Input.FocusLost:Connect(function(enterPressed)
    if enterPressed and #Suggestions:GetChildren() > 0 then
        Input.Text = Suggestions:GetChildren()[1].Text
        Suggestions.Visible = false
    end
end)

-- Original Working Fling System
local Flinging = false
local function ViolentFling(target)
    while Flinging and task.wait() do
        if LP.Character and target.Character then
            local tHRP = target.Character:FindFirstChild("HumanoidRootPart")
            local myHRP = LP.Character:FindFirstChild("HumanoidRootPart")
            
            if tHRP and myHRP then
                -- Original working offsets/velocity
                local offset = CFrame.new(
                    math.random(-3, 3),
                    math.random(-1, 2),
                    math.random(-3, 3)
                )
                
                myHRP.CFrame = tHRP.CFrame * offset
                myHRP.Velocity = (tHRP.Position - myHRP.Position).Unit * 2000 + Vector3.new(0, 500, 0)
                
                -- Network control
                if tHRP:GetNetworkOwner() ~= LP then
                    tHRP:SetNetworkOwner(LP)
                end
            end
        end
    end
end

-- Fixed Camera System
local Tracking = false
local CameraThread
local function TrackTarget(target)
    while Tracking and task.wait() do
        if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
            Camera.CameraType = Enum.CameraType.Scriptable
            Camera.CFrame = CFrame.new(
                target.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 8),
                target.Character.HumanoidRootPart.Position
            )
        end
    end
    Camera.CameraType = Enum.CameraType.Custom
end

-- Control Buttons
local Toggle = Instance.new("TextButton")
Toggle.Text = "TOGGLE FLING"
Toggle.Size = UDim2.new(0.6, 0, 0.2, 0)
Toggle.Position = UDim2.new(0.2, 0, 0.4, 0)
Toggle.Parent = Main

local CamButton = Instance.new("TextButton")
CamButton.Text = "TOGGLE CAMERA"
CamButton.Size = UDim2.new(0.6, 0, 0.2, 0)
CamButton.Position = UDim2.new(0.2, 0, 0.65, 0)
CamButton.Parent = Main

Toggle.MouseButton1Click:Connect(function()
    Flinging = not Flinging
    if Flinging then
        local target = Players:FindFirstChild(Input.Text)
        if target then
            task.spawn(ViolentFling, target)
        end
    end
end)

CamButton.MouseButton1Click:Connect(function()
    Tracking = not Tracking
    if Tracking then
        local target = Players:FindFirstChild(Input.Text)
        if target then
            CameraThread = task.spawn(TrackTarget, target)
        end
    else
        if CameraThread then
            task.cancel(CameraThread)
        end
        Camera.CameraType = Enum.CameraType.Custom
    end
end)

-- Initialize
GUI.Enabled = true
