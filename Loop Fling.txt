local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Fling mechanics (optimized)
local function align(Part0, Part1)
    local att1 = Instance.new("Attachment")
    att1.Position = Vector3.new(0, 0, 0)
    local att0 = att1:Clone()

    local ap = Instance.new("AlignPosition", att0)
    ap.ApplyAtCenterOfMass = true
    ap.MaxForce = 9e9
    ap.MaxVelocity = 9e9
    ap.ReactionForceEnabled = false
    ap.Responsiveness = 200
    ap.RigidityEnabled = false
    ap.Attachment1 = att1
    ap.Attachment0 = att0

    att1.Parent = Part1
    att0.Parent = Part0
    return {att0, att1, ap} -- Return objects for cleanup
end

local flingEnabled = false
local currentTarget = nil
local activeAnchor = nil
local mainLoop = nil
local alignObjects = {}

-- GUI Creation (unchanged)
local gui = Instance.new("ScreenGui")
gui.Name = "FlingGUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0.5, -100, 0.5, -60)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 20)
title.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
title.Text = "Drag Me - Fling GUI"
title.Parent = frame

local input = Instance.new("TextBox")
input.PlaceholderText = "Target Username"
input.Size = UDim2.new(0.9, 0, 0, 25)
input.Position = UDim2.new(0.05, 0, 0.25, 0)
input.Parent = frame

local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0.9, 0, 0, 25)
toggle.Position = UDim2.new(0.05, 0, 0.6, 0)
toggle.Text = "Start Fling"
toggle.Parent = frame

-- Dragging functionality (unchanged)
local dragging, dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Optimized fling logic
local function fullCleanup()
    -- Clean all physics objects
    if activeAnchor then
        activeAnchor:Destroy()
        activeAnchor = nil
    end
    
    for _, obj in ipairs(alignObjects) do
        for _, item in ipairs(obj) do
            pcall(function() item:Destroy() end)
        end
    end
    alignObjects = {}
end

local heartbeatConnection
local steppedConnection

local function startFling(targetChar)
    local character = LocalPlayer.Character
    if not character or not targetChar or not targetChar:FindFirstChild("HumanoidRootPart") then return end

    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    -- Clean previous instances
    fullCleanup()

    -- Create single anchor
    activeAnchor = Instance.new("Part")
    activeAnchor.Name = "FlingAnchor"
    activeAnchor.Anchored = true
    activeAnchor.Transparency = 1
    activeAnchor.CanCollide = false
    activeAnchor.Size = Vector3.new(2, 2, 1)
    activeAnchor.CFrame = hrp.CFrame
    activeAnchor.Parent = character

    -- Align parts once
    local parts = {}
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            if part.CanCollide then
                table.insert(parts, part)
            else
                part.Velocity = Vector3.new(0, -1000, 0)
            end
        end
    end

    -- Create alignments
    for _, part in ipairs(parts) do
        table.insert(alignObjects, align(part, activeAnchor))
    end

    -- Single optimized heartbeat connection
    heartbeatConnection = RunService.Heartbeat:Connect(function()
        if activeAnchor and targetChar:FindFirstChild("HumanoidRootPart") then
            activeAnchor.CFrame = targetChar.HumanoidRootPart.CFrame
            for _, part in ipairs(parts) do
                part.Velocity = Vector3.new(0, -25.05, 0)
                part.RotVelocity = Vector3.new(9999, 9999, 9999)
            end
        end
    end)
end

-- Optimized management
local function manageFling()
    while flingEnabled and currentTarget do
        local targetPlayer = Players:FindFirstChild(currentTarget)
        if targetPlayer then
            local targetChar = targetPlayer.Character
            if targetChar then
                startFling(targetChar)
                targetPlayer.CharacterAdded:Wait()
            end
        end
        task.wait(1) -- Reduced check frequency
    end
end

-- Toggle handler
toggle.MouseButton1Click:Connect(function()
    flingEnabled = not flingEnabled
    currentTarget = input.Text
    
    if flingEnabled then
        toggle.Text = "Stop Fling"
        -- Kill previous loop
        if mainLoop then task.cancel(mainLoop) end
        mainLoop = task.spawn(manageFling)
    else
        toggle.Text = "Start Fling"
        -- Cleanup everything
        fullCleanup()
        if heartbeatConnection then
            heartbeatConnection:Disconnect()
            heartbeatConnection = nil
        end
        if mainLoop then
            task.cancel(mainLoop)
            mainLoop = nil
        end
    end
end)

gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
