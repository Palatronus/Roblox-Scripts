local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer

-- GUI Setup (unchanged)
-- ... [All GUI elements remain the same] ...

-- Fling System Variables (UPDATED)
local flingActive = false
local targetPlayer = nil
local TARGET_USERNAME = ""
local FLING_POWER = 50000
local PREDICTION_FACTOR = 0.25 -- Time ahead to predict (seconds)
local VELOCITY_THRESHOLD = 5 -- Minimum speed for prediction (studs/sec)
local connection = nil

-- Noclip System (unchanged)
local function enableNoclip()
    if lp.Character then
        for _, part in pairs(lp.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end

-- ===== NEW PREDICTION SYSTEM =====
local function calculatePredictedPosition(targetRoot)
    local velocity = targetRoot.Velocity
    if velocity.Magnitude > VELOCITY_THRESHOLD then
        return targetRoot.Position + (velocity * PREDICTION_FACTOR)
    else
        return targetRoot.Position -- No prediction if moving slowly
    end
end

-- ===== MODIFIED FORCE APPLICATION =====
local function applyForce(targetRoot, localRoot)
    -- Get predicted position (accounts for movement direction)
    local predictedPos = calculatePredictedPosition(targetRoot)
    
    -- Teleport to predicted spot with vertical offset
    localRoot.CFrame = CFrame.new(predictedPos + Vector3.new(0, 3, 0))
    
    -- Calculate force direction based on target's movement
    local forceDirection = targetRoot.Velocity.Unit
    local verticalBoost = targetRoot.Velocity.Y > 0 and 1.5 or 1 -- Extra boost for jumps
    
    -- Apply predictive force
    targetRoot.Velocity = (forceDirection * FLING_POWER * verticalBoost) +
        Vector3.new(math.random(-200,200), math.random(100,300), math.random(-200,200))
end

-- ===== UPDATED MAIN LOOP =====
local function maintainFling()
    while flingActive and task.wait(0.15) do
        pcall(function()
            if not targetPlayer or not targetPlayer.Character then return end
            local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            local localRoot = lp.Character and lp.Character:FindFirstChild("HumanoidRootPart")
            
            if targetRoot and localRoot then
                applyForce(targetRoot, localRoot)
            end
        end)
    end
end

-- Rest of the script remains unchanged
-- ... [Player search, toggle logic, cleanup identical] ...
