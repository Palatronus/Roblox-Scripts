local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI Creation
local gui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local textBox = Instance.new("TextBox")
local toggleButton = Instance.new("TextButton")
local dragHandle = Instance.new("Frame")

gui.Name = "FlingGUI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.BackgroundTransparency = 0.5
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Parent = gui

dragHandle.Name = "DragHandle"
dragHandle.Size = UDim2.new(1, 0, 0, 20)
dragHandle.BackgroundTransparency = 1
dragHandle.Parent = frame

textBox.Name = "TargetBox"
textBox.Size = UDim2.new(0.9, 0, 0.3, 0)
textBox.Position = UDim2.new(0.05, 0, 0.2, 0)
textBox.PlaceholderText = "Enter username"
textBox.Parent = frame

toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0.4, 0, 0.3, 0)
toggleButton.Position = UDim2.new(0.3, 0, 0.6, 0)
toggleButton.Text = "Start"
toggleButton.Parent = frame

-- Draggable GUI
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

dragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

dragHandle.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Fling Core
local align = function(Part0, Part1)
    local att1 = Instance.new("Attachment")
    att1.Position = Vector3.new(0, 0, 0)
    local att0 = att1:Clone()

    local ap = Instance.new("AlignPosition")
    ap.ApplyAtCenterOfMass = true
    ap.MaxForce = 9e9
    ap.MaxVelocity = 9e9
    ap.ReactionForceEnabled = false
    ap.Responsiveness = 200
    ap.RigidityEnabled = false
    ap.Attachment1 = att1
    ap.Attachment0 = att0
    ap.Parent = att0

    att1.Parent = Part1
    att0.Parent = Part0
end

local flingActive = false
local connections = {}

local function startFling(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    if not targetPlayer or targetPlayer == LocalPlayer then return end

    local function flingLoop()
        repeat
            task.wait(0.1)
            local character = LocalPlayer.Character
            local targetChar = targetPlayer.Character
            if not character or not targetChar or not targetChar:FindFirstChild("HumanoidRootPart") then continue end

            local hrp = character:FindFirstChild("HumanoidRootPart")
            if not hrp then continue end

            -- Store original state
            local originalCFrame = hrp.CFrame
            local originalRot = hrp.RotVelocity
            local originalVelocity = hrp.Velocity

            -- Teleport
            hrp.CFrame = targetChar.HumanoidRootPart.CFrame

            -- Fling setup
            local parts = {}
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    if part.CanCollide then
                        table.insert(parts, part)
                    else
                        part.Velocity = Vector3.new(0, -1000, 0)
                    end
                end
            end

            local anchor = Instance.new("Part")
            anchor.Name = "FlingAnchor"
            anchor.Anchored = true
            anchor.Transparency = 1
            anchor.CanCollide = false
            anchor.Size = Vector3.new(2, 2, 1)
            anchor.CFrame = hrp.CFrame
            anchor.Parent = character

            for _, part in ipairs(parts) do
                align(part, anchor)
            end

            -- Persistent connections
            local follow = RunService.Stepped:Connect(function()
                if targetChar and targetChar.Parent and targetChar:FindFirstChild("HumanoidRootPart") then
                    anchor.CFrame = targetChar.HumanoidRootPart.CFrame
                end
            end)

            local spin = RunService.Heartbeat:Connect(function()
                for _, part in ipairs(parts) do
                    part.Velocity = Vector3.new(0, -25.05, 0)
                    part.RotVelocity = Vector3.new(9999, 9999, 9999)
                end
            end)

            table.insert(connections, follow)
            table.insert(connections, spin)

            -- Auto-reconnect on character change
            local function onCharacterAdded(newChar)
                task.wait(1)
                anchor:Destroy()
                for _, v in ipairs(connections) do v:Disconnect() end
                table.clear(connections)
                flingLoop()
            end

            LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
            targetPlayer.CharacterAdded:Connect(onCharacterAdded)
        until not flingActive
    end
    flingLoop()
end

-- Toggle Control
toggleButton.MouseButton1Click:Connect(function()
    flingActive = not flingActive
    toggleButton.Text = flingActive and "Stop" or "Start"
    
    if flingActive then
        startFling(textBox.Text)
    else
        for _, conn in ipairs(connections) do
            conn:Disconnect()
        end
        table.clear(connections)
        if LocalPlayer.Character then
            local anchor = LocalPlayer.Character:FindFirstChild("FlingAnchor")
            if anchor then anchor:Destroy() end
        end
    end
end)

-- Auto-reinit
LocalPlayer.CharacterAdded:Connect(function()
    if flingActive then
        task.wait(1)
        startFling(textBox.Text)
    end
end)
