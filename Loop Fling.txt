--!luau
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")

-- Compatible module loading for Lua 5.1
local ItemModule = require(ReplicatedStorage:WaitForChild("ItemModule"))

-- Traditional table initialization
local STORE_ITEMS = {
    [1] = {
        Name = "Basic Sword",
        Price = 100,
        UnlockFlag = 1,
        AssetId = 0000000
    },
    [2] = {
        Name = "Premium Armor",
        Price = 500,
        UnlockFlag = 2,
        AssetId = 0000000
    }
}

local function displayStoreItems(player)
    local playerData = {
        Coins = player:WaitForChild("leaderstats").Coins,
        Upgrades = player:GetAttribute("Upgrades") or 0
    }

    -- Lua 5.1-compatible bitwise operations
    local unlockedItems = {}
    for index = 1, #STORE_ITEMS do
        local item = STORE_ITEMS[index]
        if bit32.band(item.UnlockFlag, playerData.Upgrades) ~= 0 then
            table.insert(unlockedItems, item)
        end
    end

    -- Traditional numeric for-loop
    for i = 1, #unlockedItems do
        local item = unlockedItems[i]
        local itemFrame = Instance.new("Frame")
        -- ... GUI creation logic ...
    end
end

local function attemptPurchase(player, itemId)
    local itemData = STORE_ITEMS[itemId]
    if not itemData then return false end

    -- Safe numerical comparison
    if player.leaderstats.Coins.Value >= itemData.Price then
        player.leaderstats.Coins.Value = player.leaderstats.Coins.Value - itemData.Price
        -- Update upgrades using bit32
        player:SetAttribute("Upgrades", bit32.bor(
            player:GetAttribute("Upgrades"),
            itemData.UnlockFlag
        ))
        return true
    end
    return false
end

-- Proper event connection syntax
game.Players.PlayerAdded:Connect(function(player)
    player:WaitForChild("leaderstats")
    displayStoreItems(player)
    
    -- Module communication using WaitForChild
    local purchaseEvent = ReplicatedStorage:WaitForChild("PurchaseEvent")
    purchaseEvent.OnServerEvent:Connect(function(plr, itemId)
        if plr == player then
            attemptPurchase(plr, itemId)
        end
    end)
end)
