local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "FlingGUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0.5, -100, 0.5, -60)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.Active = true
frame.Draggable = false

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 20)
title.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
title.Text = "Drag Me | Fling GUI"
title.TextColor3 = Color3.new(1, 1, 1)
title.Parent = frame

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0.9, 0, 0, 25)
textBox.Position = UDim2.new(0.05, 0, 0.25, 0)
textBox.PlaceholderText = "Enter Username"
textBox.Parent = frame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.9, 0, 0, 25)
toggleButton.Position = UDim2.new(0.05, 0, 0.55, 0)
toggleButton.Text = "Start Fling"
toggleButton.Parent = frame

frame.Parent = gui
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Dragging Logic
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Fling Logic
local flingEnabled = false
local activeConnections = {}
local targetPlayer
local anchorPart

local function align(Part0, Part1)
    local att1 = Instance.new("Attachment")
    local att0 = att1:Clone()

    local ap = Instance.new("AlignPosition", att0)
    ap.ApplyAtCenterOfMass = true
    ap.MaxForce = 9e9
    ap.MaxVelocity = 9e9
    ap.ReactionForceEnabled = false
    ap.Responsiveness = 200
    ap.RigidityEnabled = false
    ap.Attachment1 = att1
    ap.Attachment0 = att0

    att1.Parent = Part1
    att0.Parent = Part0
end

local function cleanUp()
    -- Destroy physical components
    if anchorPart then anchorPart:Destroy() end
    
    -- Disconnect all active connections
    for _, conn in pairs(activeConnections) do
        conn:Disconnect()
    end
    activeConnections = {}
end

local function flingTarget(targetChar)
    cleanUp()
    if not LocalPlayer.Character or not targetChar then return end

    -- Wait for HRP stability
    local hrp = LocalPlayer.Character:WaitForChild("HumanoidRootPart", 2)
    local targetHrp = targetChar:WaitForChild("HumanoidRootPart", 2)
    if not hrp or not targetHrp then return end

    -- Teleport to target
    hrp.CFrame = targetHrp.CFrame

    -- Create anchor
    anchorPart = Instance.new("Part")
    anchorPart.Name = "FlingAnchor"
    anchorPart.Anchored = true
    anchorPart.Transparency = 1
    anchorPart.CanCollide = false
    anchorPart.Size = Vector3.new(2, 2, 1)
    anchorPart.CFrame = hrp.CFrame
    anchorPart.Parent = LocalPlayer.Character

    -- Align all parts
    local parts = {}
    for _, part in ipairs(LocalPlayer.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            if part.CanCollide then
                table.insert(parts, part)
                align(part, anchorPart)
            else
                part.Velocity = Vector3.new(0, -1000, 0)
            end
        end
    end

    -- Persistent tracking
    activeConnections.follow = RunService.Stepped:Connect(function()
        if targetChar.Parent and targetHrp then
            anchorPart.CFrame = targetHrp.CFrame
        end
    end)

    activeConnections.spin = RunService.Heartbeat:Connect(function()
        for _, part in ipairs(parts) do
            part.Velocity = Vector3.new(0, -25.05, 0)
            part.RotVelocity = Vector3.new(9999, 9999, 9999)
        end
    end)

    -- Auto-reconnect on target respawn
    activeConnections.targetDied = targetChar:GetPropertyChangedSignal("Parent"):Connect(function()
        if not targetChar.Parent then
            local newChar = targetPlayer.CharacterAdded:Wait()
            task.wait(0.5) -- Allow character to load
            flingTarget(newChar)
        end
    end)
end

local function monitorTarget()
    -- Find target player (supports rejoin)
    targetPlayer = Players:FindFirstChild(textBox.Text)
    if not targetPlayer then return end

    -- Connect existing character
    if targetPlayer.Character then
        flingTarget(targetPlayer.Character)
    end

    -- Connect future characters
    activeConnections.charAdded = targetPlayer.CharacterAdded:Connect(function(newChar)
        newChar:WaitForChild("HumanoidRootPart", 2)
        flingTarget(newChar)
    end)

    -- Handle player leaving/returning
    activeConnections.playerRemoved = targetPlayer.AncestryChanged:Connect(function()
        if targetPlayer.Parent == nil then
            task.wait(1)
            monitorTarget() -- Rescan for rejoined player
        end
    end)
end

-- Toggle logic
toggleButton.MouseButton1Click:Connect(function()
    flingEnabled = not flingEnabled
    toggleButton.Text = flingEnabled and "Stop Fling" or "Start Fling"

    if flingEnabled then
        -- Re-init on local respawn
        activeConnections.localRespawn = LocalPlayer.CharacterAdded:Connect(function()
            task.wait(1)
            if flingEnabled then monitorTarget() end
        end)
        
        monitorTarget()
    else
        cleanUp()
    end
end)

-- Initial cleanup safeguard
cleanUp()
