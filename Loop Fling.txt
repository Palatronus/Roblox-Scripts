local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI Construction
local gui = Instance.new("ScreenGui")
gui.Name = "FlingController"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0.5, -100, 0.5, -60)
frame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.15)
frame.Active = true

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 20)
title.Text = "Fling Controller (Drag)"
title.BackgroundColor3 = Color3.new(0.25, 0.25, 0.25)
title.TextColor3 = Color3.new(1, 1, 1)
title.Parent = frame

local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(0.9, 0, 0, 25)
inputBox.Position = UDim2.new(0.05, 0, 0.25, 0)
inputBox.PlaceholderText = "Target Username"
inputBox.Parent = frame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0.9, 0, 0, 25)
toggleBtn.Position = UDim2.new(0.05, 0, 0.55, 0)
toggleBtn.Text = "ENABLE FLING"
toggleBtn.Parent = frame

frame.Parent = gui
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Dragging Mechanism
local dragToggle, dragInput, dragStart, startPos
title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)

title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragToggle then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Core Fling System
local activeConnections = {}
local targetPlayer
local anchorPart
local originalState = {}

local function alignParts(part1, part2)
    local att0 = Instance.new("Attachment")
    local att1 = att0:Clone()
    
    local alignPos = Instance.new("AlignPosition")
    alignPos.Attachment0 = att0
    alignPos.Attachment1 = att1
    alignPos.ApplyAtCenterOfMass = true
    alignPos.MaxForce = 9e9
    alignPos.Responsiveness = 200
    alignPos.Parent = att0

    att0.Parent = part1
    att1.Parent = part2
end

local function terminateFling()
    -- Cleanup connections and parts
    for _, conn in pairs(activeConnections) do
        conn:Disconnect()
    end
    activeConnections = {}
    
    if anchorPart then
        anchorPart:Destroy()
        anchorPart = nil
    end
    
    -- Restore original state
    if LocalPlayer.Character and originalState.CFrame then
        local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = originalState.CFrame
            hrp.Velocity = originalState.Velocity
            hrp.RotVelocity = originalState.RotVelocity
        end
    end
end

local function executeFling(targetHRP)
    terminateFling() -- Clear previous
    
    if not LocalPlayer.Character or not targetHRP then return end
    local localHRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localHRP then return end

    -- Store original state
    originalState.CFrame = localHRP.CFrame
    originalState.Velocity = localHRP.Velocity
    originalState.RotVelocity = localHRP.RotVelocity

    -- Teleport to target
    localHRP.CFrame = targetHRP.CFrame

    -- Create anchor
    anchorPart = Instance.new("Part")
    anchorPart.Name = "FlingCore"
    anchorPart.Anchored = true
    anchorPart.Transparency = 1
    anchorPart.Size = Vector3.new(2, 2, 1)
    anchorPart.CFrame = localHRP.CFrame
    anchorPart.Parent = LocalPlayer.Character

    -- Configure parts
    local flingParts = {}
    for _, part in ipairs(LocalPlayer.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            if part.CanCollide then
                table.insert(flingParts, part)
                alignParts(part, anchorPart)
            else
                part.Velocity = Vector3.new(0, -1000, 0)
            end
        end
    end

    -- Persistent tracking
    activeConnections.follow = RunService.Stepped:Connect(function()
        if targetHRP and targetHRP.Parent then
            anchorPart.CFrame = targetHRP.CFrame
        end
    end)

    activeConnections.spin = RunService.Heartbeat:Connect(function()
        for _, part in ipairs(flingParts) do
            part.Velocity = Vector3.new(0, -25.05, 0)
            part.RotVelocity = Vector3.new(9999, 9999, 9999)
        end
    end)

    -- Death/rejoin handler
    activeConnections.targetTracker = targetHRP:GetPropertyChangedSignal("Parent"):Connect(function()
        if not targetHRP.Parent then
            -- Wait for new character
            local newChar
            activeConnections.charWait = targetPlayer.CharacterAdded:Connect(function(char)
                newChar = char
                char:WaitForChild("HumanoidRootPart", 2)
                executeFling(char.HumanoidRootPart)
            end)
        end
    end)
end

local function monitorTarget()
    -- Find target player (supports name changes/rejoins)
    targetPlayer = Players:FindFirstChild(inputBox.Text)
    if not targetPlayer then return end

    -- Existing character
    if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        executeFling(targetPlayer.Character.HumanoidRootPart)
    end

    -- New characters
    activeConnections.charAdded = targetPlayer.CharacterAdded:Connect(function(char)
        char:WaitForChild("HumanoidRootPart", 2)
        executeFling(char.HumanoidRootPart)
    end)

    -- Player leave/rejoin handler
    activeConnections.playerTracker = targetPlayer.AncestryChanged:Connect(function()
        if targetPlayer.Parent == nil then
            -- Player left, wait for return
            activeConnections.rejoinTracker = Players.PlayerAdded:Connect(function(newPlayer)
                if newPlayer.Name == inputBox.Text then
                    targetPlayer = newPlayer
                    monitorTarget()
                end
            end)
        end
    end)
end

-- Control Logic
toggleBtn.MouseButton1Click:Connect(function()
    if toggleBtn.Text == "ENABLE FLING" then
        toggleBtn.Text = "DISABLE FLING"
        monitorTarget()
        
        -- Reconnect on local respawn
        activeConnections.respawnTracker = LocalPlayer.CharacterAdded:Connect(function()
            task.wait(1)
            monitorTarget()
        end)
    else
        toggleBtn.Text = "ENABLE FLING"
        terminateFling()
    end
end)
