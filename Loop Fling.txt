local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- GUI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "FlingGUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0.5, -100, 0.5, -60)
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.Active = true
frame.Draggable = false

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 20)
title.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
title.Text = "Drag Me | Fling GUI"
title.TextColor3 = Color3.new(1, 1, 1)
title.Parent = frame

local textBox = Instance.new("TextBox")
textBox.Size = UDim2.new(0.9, 0, 0, 25)
textBox.Position = UDim2.new(0.05, 0, 0.25, 0)
textBox.PlaceholderText = "Enter Username"
textBox.Parent = frame

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0.9, 0, 0, 25)
toggleButton.Position = UDim2.new(0.05, 0, 0.55, 0)
toggleButton.Text = "Start Fling"
toggleButton.Parent = frame

frame.Parent = gui
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Dragging Logic
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Fling Logic
local flingEnabled = false
local connections = {}
local targetMonitorConnections = {}
local anchorPart

local function align(Part0, Part1)
    local att1 = Instance.new("Attachment")
    att1.Position = Vector3.new(0, 0, 0)
    local att0 = att1:Clone()

    local ap = Instance.new("AlignPosition", att0)
    ap.ApplyAtCenterOfMass = true
    ap.MaxForce = 9e9
    ap.MaxVelocity = 9e9
    ap.ReactionForceEnabled = false
    ap.Responsiveness = 200
    ap.RigidityEnabled = false
    ap.Attachment1 = att1
    ap.Attachment0 = att0

    att1.Parent = Part1
    att0.Parent = Part0
end

local function cleanUp()
    if anchorPart then anchorPart:Destroy() end
    for _, conn in pairs(connections) do
        conn:Disconnect()
    end
    connections = {}
end

local function flingTarget(targetChar)
    cleanUp() -- Clear previous connections before new setup
    
    if not LocalPlayer.Character or not targetChar or not targetChar:FindFirstChild("HumanoidRootPart") then return end
    local hrp = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    hrp.CFrame = targetChar.HumanoidRootPart.CFrame
    
    local parts = {}
    for _, part in ipairs(LocalPlayer.Character:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            table.insert(parts, part)
        elseif part:IsA("BasePart") then
            part.Velocity = Vector3.new(0, -1000, 0)
        end
    end

    anchorPart = Instance.new("Part")
    anchorPart.Name = "FlingAnchor"
    anchorPart.Anchored = true
    anchorPart.Transparency = 1
    anchorPart.CanCollide = false
    anchorPart.Size = Vector3.new(2, 2, 1)
    anchorPart.CFrame = hrp.CFrame
    anchorPart.Parent = LocalPlayer.Character

    for _, part in ipairs(parts) do
        align(part, anchorPart)
    end

    connections.follow = RunService.Stepped:Connect(function()
        if targetChar and targetChar.Parent and targetChar:FindFirstChild("HumanoidRootPart") then
            anchorPart.CFrame = targetChar.HumanoidRootPart.CFrame
        end
    end)

    connections.spin = RunService.Heartbeat:Connect(function()
        for _, part in ipairs(parts) do
            part.Velocity = Vector3.new(0, -25.05, 0)
            part.RotVelocity = Vector3.new(9999, 9999, 9999)
        end
    end)
end

local function monitorTarget()
    for _, v in pairs(targetMonitorConnections) do v:Disconnect() end
    targetMonitorConnections = {}

    while flingEnabled do
        local targetName = textBox.Text
        local targetPlayer = Players:FindFirstChild(targetName)
        
        if targetPlayer then
            -- Connect to existing character
            if targetPlayer.Character then
                flingTarget(targetPlayer.Character)
            end
            
            -- Connect to future characters
            local conn1 = targetPlayer.CharacterAdded:Connect(function(char)
                task.wait(1) -- Wait for character to fully load
                flingTarget(char)
            end)
            table.insert(targetMonitorConnections, conn1)
            
            -- Listen for player leaving
            local conn2 = targetPlayer.AncestryChanged:Connect(function()
                if not targetPlayer.Parent then
                    cleanUp()
                end
            end)
            table.insert(targetMonitorConnections, conn2)
        end
        
        -- Listen for new players with target name
        local conn3 = Players.PlayerAdded:Connect(function(newPlayer)
            if newPlayer.Name == targetName then
                local conn4 = newPlayer.CharacterAdded:Connect(function(char)
                    task.wait(1)
                    flingTarget(char)
                end)
                table.insert(targetMonitorConnections, conn4)
            end
        end)
        table.insert(targetMonitorConnections, conn3)
        
        task.wait(1) -- Prevent tight loop
    end
end

toggleButton.MouseButton1Click:Connect(function()
    flingEnabled = not flingEnabled
    toggleButton.Text = flingEnabled and "Stop Fling" or "Start Fling"
    
    if flingEnabled then
        -- Re-init when local player respawns
        LocalPlayer.CharacterAdded:Connect(function()
            if flingEnabled then
                task.wait(1)
                monitorTarget()
            end
        end)
        
        -- Start monitoring
        monitorTarget()
    else
        cleanUp()
        for _, v in pairs(targetMonitorConnections) do v:Disconnect() end
        targetMonitorConnections = {}
    end
end)
