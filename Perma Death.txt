----- [ PART 1: Server-Side Setup (in Tool) ] -----
local Tool = script.Parent
local Players = game:GetService("Players")
local ReanimateEvent = game:GetService("ReplicatedStorage"):WaitForChild("ReanimateEvent")
local deadPlayers = {} -- Tracks { [player] = corpse }

-- Disable auto-respawn
Players.RespawnTime = 0

-- Handle player death
local function onPlayerDeath(player)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    
    humanoid.Died:Connect(function()
        -- Clone corpse and mark it
        local corpse = character:Clone()
        corpse:SetAttribute("IsReanimatable", true)
        corpse:PivotTo(character:GetPivot())
        corpse.Parent = workspace
        deadPlayers[player] = corpse
        
        -- Delete original character
        character:Destroy()
    end)
end

-- Reanimate a corpse
local function reanimatePlayer(player, corpse)
    if corpse and corpse:GetAttribute("IsReanimatable") then
        -- Respawn the dead player
        local targetPlayer = nil
        for p, c in pairs(deadPlayers) do
            if c == corpse then
                targetPlayer = p
                break
            end
        end
        
        if targetPlayer then
            targetPlayer:LoadCharacter()
            corpse:Destroy()
            deadPlayers[targetPlayer] = nil
        end
    end
end

-- Listen for reanimation requests
ReanimateEvent.OnServerEvent:Connect(function(player, corpse)
    reanimatePlayer(player, corpse)
end)

-- Track players
Players.PlayerAdded:Connect(onPlayerDeath)
Players.PlayerRemoving:Connect(function(player)
    if deadPlayers[player] then
        deadPlayers[player]:Destroy()
    end
end)

----- [ PART 2: Client-Side Tool Logic (in Tool) ] -----
if Tool:IsA("Tool") then
    local localPlayer = Players.LocalPlayer
    local mouse = localPlayer:GetMouse()
    
    Tool.Activated:Connect(function()
        local target = mouse.Target
        if target and target.Parent:GetAttribute("IsReanimatable") then
            -- Send the corpse to the server for reanimation
            ReanimateEvent:FireServer(target.Parent)
        end
    end)
end
