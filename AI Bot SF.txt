-- Execute attack with improved combat flow
    local function ExecuteAttack()
        if not persistentData.LinkedSword then
            forcePrint("LinkedSwordAI: Cannot attack - No sword equipped")
            return
        end
        
        if persistentData.AttackSequenceActive then
            return
        end
        
        persistentData.AttackSequenceActive = true
        persistentData.LastAttackTime = tick()
        
        if persistentData.StatusGUI then
            persistentData.StatusGUI.UpdateStatus("Attacking")
            persistentData.StatusGUI.UpdateDebug("Executing attack sequence")
        end
        
        -- Execute a smoother lunge combo
        spawn(function()
            -- First activation
            forcePrint("LinkedSwordAI: Attack 1/3")
            pcall(function() persistentData.LinkedSword:Activate() end)
            
            -- Shorter delay between attacks for smoother combo
            wait(CONFIG.LUNGE_DELAY * 0.8)
            
            -- Second activation
            forcePrint("LinkedSwordAI: Attack 2/3")
            pcall(function() persistentData.LinkedSword:Activate() end)
            
            -- Slightly longer delay before final attack for better rhythm
            wait(CONFIG.LUNGE_DELAY * 1.2)
            
            -- Third activation
            forcePrint("LinkedSwordAI: Attack 3/3")
            pcall(function() persistentData.LinkedSword:Activate() end)
            
            -- Shorter cooldown before allowing next attack sequence
            wait(0.15)
            persistentData.AttackSequenceActive = false
            
            -- Move slightly toward target after attack to maintain engagement
            if persistentData.CurrentTarget and 
               persistentData.CurrentTarget.Character and 
               persistentData.CurrentTarget.Character:FindFirstChild("HumanoidRootPart") then
                local targetPos = persistentData.CurrentTarget.Character.HumanoidRootPart.Position
                local moveDir = (targetPos - HumanoidRootPart.Position).Unit
                local followPos = HumanoidRootPart.Position + moveDir * 2
                
                -- Use MoveTo for smooth follow-up movement
                MoveTo(followPos)
            end
        end)
    end
