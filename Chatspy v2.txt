-- Universal Chat Spy Script for Roblox
-- Client-side only, avoids TextChatService conflicts

if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- Get necessary services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Create spy GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ChatSpyGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Name = "ChatFrame"
frame.Size = UDim2.new(0.4, 0, 0.3, 0)
frame.Position = UDim2.new(0.01, 0, 0.69, 0)
frame.BackgroundTransparency = 0.7
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.Parent = screenGui

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "MessageLog"
scrollingFrame.Size = UDim2.new(1, -10, 1, -10)
scrollingFrame.Position = UDim2.new(0, 5, 0, 5)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.ScrollBarThickness = 5
scrollingFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrollingFrame.ScrollingDirection = Enum.ScrollingDirection.Y
scrollingFrame.Parent = frame

local uiListLayout = Instance.new("UIListLayout")
uiListLayout.Parent = scrollingFrame

-- Function to display messages
local function displaySpyMessage(player, message)
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = string.format("[SPY] %s: %s", player, message)
    textLabel.TextColor3 = Color3.new(1, 0.33, 0.33) -- Red color
    textLabel.TextSize = 16
    textLabel.BackgroundTransparency = 1
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Size = UDim2.new(1, 0, 0, 20)
    textLabel.Parent = scrollingFrame
    
    -- Auto-scroll to bottom
    scrollingFrame.CanvasPosition = Vector2.new(0, scrollingFrame.CanvasSize.Y.Offset)
end

-- Main chat capture function
local function captureChatMessages()
    -- Function to handle player messages
    local function handlePlayerChat(player, message)
        if player ~= LocalPlayer then
            displaySpyMessage(player.Name, message)
        end
    end

    -- Capture existing players
    for _, player in ipairs(Players:GetPlayers()) do
        player.Chatted:Connect(function(message)
            handlePlayerChat(player, message)
        end)
    end
    
    -- Capture new players
    Players.PlayerAdded:Connect(function(player)
        player.Chatted:Connect(function(message)
            handlePlayerChat(player, message)
        end)
    end)
    
    -- Initial message
    displaySpyMessage("System", "Chat spy activated")
end

-- Initialize with error handling
local success, err = pcall(captureChatMessages)
if success then
    print("Chat Spy Activated - Messages appear in bottom-left window")
else
    -- Ultimate fallback if everything fails
    displaySpyMessage("System", "Spy activated with limited functionality")
    
    -- Simple console logging
    for _, player in ipairs(Players:GetPlayers()) do
        player.Chatted:Connect(function(message)
            if player ~= LocalPlayer then
                print("[SPY] " .. player.Name .. ": " .. message)
            end
        end)
    end
end
