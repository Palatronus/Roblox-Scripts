-- Universal Chat Spy Script for Roblox TextChatService
-- Compatible with most executors
-- Updated for Roblox's latest TextChatService API

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local function createChatSpy()
    -- Server-side component
    local serverScript = [[
        local Players = game:GetService("Players")
        local TextChatService = game:GetService("TextChatService")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        
        -- Create remote event
        local ChatSpyRemote
        if not ReplicatedStorage:FindFirstChild("ChatSpyRemote") then
            ChatSpyRemote = Instance.new("RemoteEvent")
            ChatSpyRemote.Name = "ChatSpyRemote"
            ChatSpyRemote.Parent = ReplicatedStorage
        else
            ChatSpyRemote = ReplicatedStorage.ChatSpyRemote
        end
        
        -- Message handler
        TextChatService.OnIncomingMessage = function(message)
            if message.MessageType == "Text" and message.TextSource then
                local player = Players:GetPlayerByUserId(message.TextSource.UserId)
                if player then
                    local spyMessage = string.format(
                        '[SPY] %s: %s',
                        player.Name,
                        message.Text
                    )
                    ChatSpyRemote:FireAllClients(spyMessage)
                end
            end
            return nil
        end
        
        warn("Chat Spy Server Module Activated")
        return true
    ]]
    
    -- Client-side component
    local clientScript = [[
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local TextChatService = game:GetService("TextChatService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        -- Wait for remote event
        local ChatSpyRemote
        repeat task.wait(1)
            ChatSpyRemote = ReplicatedStorage:FindFirstChild("ChatSpyRemote")
        until ChatSpyRemote
        
        -- Create bubble chat listener
        local function displaySpyMessage(message)
            local text = string.format(
                '<font color="#FF5555">%s</font>',
                message
            )
            
            -- Try both methods to ensure compatibility
            if TextChatService.DisplaySystemMessage then
                TextChatService:DisplaySystemMessage(text)
            end
            
            if LocalPlayer:FindFirstChild("PlayerGui") then
                local chatMain = LocalPlayer.PlayerGui:FindFirstChild("ChatMain", true)
                if chatMain then
                    local messageLog = chatMain:FindFirstChild("MessageLogDisplay", true)
                    if messageLog then
                        local newMessage = Instance.new("TextLabel")
                        newMessage.Text = text
                        newMessage.RichText = true
                        newMessage.TextSize = 18
                        newMessage.BackgroundTransparency = 1
                        newMessage.TextXAlignment = Enum.TextXAlignment.Left
                        newMessage.Size = UDim2.new(1, 0, 0, 24)
                        newMessage.Parent = messageLog
                    end
                end
            end
        end
        
        -- Message receiver
        ChatSpyRemote.OnClientEvent:Connect(displaySpyMessage)
        
        print("Chat Spy Client Module Activated")
        return true
    ]]
    
    -- Execution logic
    if is_sirhurt_closure or syn or KRNL_LOADED then
        -- Server injection for executors with server access
        local serverSuccess, serverErr = pcall(function()
            local serverModule = require(game:GetService("ServerScriptService"):WaitForChild("ServerModule", 10))
            if serverModule then
                serverModule:Execute(serverScript)
            else
                error("Could not find ServerModule")
            end
        end)
        
        if not serverSuccess then
            warn("Server injection failed: "..serverErr)
        end
    end
    
    -- Client injection
    local clientSuccess, clientErr = pcall(function()
        local script = Instance.new("LocalScript")
        script.Source = clientScript
        script.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerScripts", 10)
    end)
    
    if not clientSuccess then
        warn("Client injection failed: "..clientErr)
        -- Fallback to direct execution
        loadstring(clientScript)()
    end
    
    return "Chat Spy Activated"
end

-- Execute the chat spy
local success, result = pcall(createChatSpy)
if not success then
    warn("Chat Spy Error: "..tostring(result))
else
    print(result)
end
