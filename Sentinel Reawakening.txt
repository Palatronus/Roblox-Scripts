-- SFOTHO Security Bot Script
-- FE Compatible Vigilante Security System

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local botOwner = LocalPlayer.Name -- The account running this script is the bot

-- Configuration
local DISTANCE_WARNING = 15 -- Distance for warning kill
local DISTANCE_LOOPKILL = 25 -- Distance for loopkill
local ADMIN_LOAD_WAIT = 5 -- Wait time for admin script to load

-- Whitelist Systems
local OWNER_WHITELIST = {
    -- Add owner usernames here (completely immune, prevents serverhopping)
    "HollowGol"
}

local MOD_WHITELIST = {
    -- Add mod usernames here (immune to actions but allows serverhopping)
    "STEVETheReal916",
    "ColonThreeSpam",
    "SpawnYellow2",
    "SpawnBlack1",
    "s71pl",
    "TheSwordFightingBot2",
    "Jacobthecool292",
    "babyyodasonglol",
    "Kandale_Dingul",
    "redalert_E",
    "fariahoque28",
    "baze15651",
    "well_ihateboblux",
    "0bj687Alt"
}

-- Loopkills list (will be updated dynamically)
local loopkillsList = {
    "@BoomyRealTop1Global", "@Lucasshed_1", "@SpawnYeIIow8", "@noradrenilne", "@djskfjdskfjkdsjfkds",
    "@spy6767676767678", "@gavotx", "@7389322", "@SayuriWasTaken", "@bacondude629", "@sdsssssssssssssssfss",
    "@entity9258", "@tomitoest", "@randomsnakeguy2", "@soetidjou", "@dontyoudare911", "@aerotypings",
    "@vaziolele2222", "@fdgdffdsf3424", "@hiyahiya583", "@CapyBarchik87", "@burpboy67", "@SkinnyLegendCeana",
    "@norasnewaccheh", "@Sugarcrashjojo", "@thetgpugooner", "@Mr_Remembers", "@Tomryden2cuzwhynot",
    "@slaitmyarwse", "@Aquatic_515", "@lukenicolotreoyo", "@Man06Tay10", "@unknownexp9", "@Jaja1og5",
    "@unknownexp10", "@unknownexp12", "@hazaeur", "@homier_822825", "@cookie_333128", "@wubberio",
    "@yesus120strange", "@guest_201406", "@LOS_HACKERSS", "@inbluejeans", "@nicopla1234", "@baskanpro200",
    "@Luc_2004sad", "@suspiciousacc15", "@ohnobabyohno11", "@1B0b7", "@c00l_stark", "@miscoloredspawn",
    "@tytytyttyyyttyytyy", "@hackerdude977", "@bloxfruit4372763", "@PavoIski", "@ceanaphobic",
    "@BannedYouXx4_1x1x1x1", "@russki_krutoi", "@JustAnExploiterr", "@Tuscan_12345689", "@DERZKO69",
    "@Reallylongnamelololm", "@yahyaslapbattle", "@SonicShadows126", "@sadssdasddasss", "@falooda12345_1",
    "@bombplanner256", "@h00zgui", "@deaglestabbed", "@Luka123631", "@luigimario_1241", "@Hackerbacon694",
    "@WhiteGuy603", "@aygul3103", "@TMKOC63", "@damnitnega", "@haushhidnuxw8eu", "@PurpleGuySmashes1",
    "@PurpleGuySmashes", "@T0_Testing", "@Dollmyaccdisabled686", "@benzoine", "@Jqsminx", "@TheBoselyMan"
}

-- State tracking
local playerPositions = {}
local playerDeaths = {}
local botInitialized = false
local lastBotPosition = Vector3.new(0, 0, 0)
local commandQueue = {}
local isExecutingCommands = false

-- Utility Functions
local function isWhitelisted(username)
    for _, name in pairs(OWNER_WHITELIST) do
        if name == username then
            return "owner"
        end
    end
    for _, name in pairs(MOD_WHITELIST) do
        if name == username then
            return "mod"
        end
    end
    return false
end

local function addToLoopkills(username)
    local formattedUsername = "@" .. username
    for _, name in pairs(loopkillsList) do
        if name == formattedUsername then
            return -- Already in list
        end
    end
    table.insert(loopkillsList, formattedUsername)
    print("[Security Bot] Added " .. formattedUsername .. " to loopkills list")
end

local function executeCommand(command)
    table.insert(commandQueue, command)
end

local function processCommandQueue()
    if isExecutingCommands or #commandQueue == 0 then
        return
    end
    
    isExecutingCommands = true
    local command = table.remove(commandQueue, 1)
    
    -- Simulate pressing comma key to open command bar
    local VirtualInputManager = game:GetService("VirtualInputManager")
    
    -- Press comma key (ÅŸ key as specified)
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Comma, false, Enum.UserInputType.Keyboard)
    wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Comma, false, Enum.UserInputType.Keyboard)
    wait(0.2)
    
    -- Type the command
    for i = 1, #command do
        local char = command:sub(i, i)
        VirtualInputManager:SendTextInputCharacterEvent(char)
        wait(0.02) -- Small delay between characters to prevent lag issues
    end
    
    wait(0.1)
    
    -- Press Enter to execute
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, Enum.UserInputType.Keyboard)
    wait(0.1)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, Enum.UserInputType.Keyboard)
    
    wait(0.5) -- Wait before processing next command
    isExecutingCommands = false
end

local function initializeBot()
    if botInitialized then return end
    
    print("[Security Bot] Initializing...")
    wait(ADMIN_LOAD_WAIT) -- Wait for admin script to load
    
    -- Execute initial commands
    executeCommand("novoid")
    executeCommand("inf^10^tppos 0 -1000000 0")
    
    -- Add existing loopkills
    if #loopkillsList > 0 then
        local loopkillCommand = "inf^0.1^loopkill " .. table.concat(loopkillsList, ",")
        executeCommand(loopkillCommand)
        
        local loopgotoCommand = "inf^0.1^loopgoto " .. table.concat(loopkillsList, ",") .. " 0"
        executeCommand(loopgotoCommand)
    end
    
    executeCommand("inf^2^walkfling")
    executeCommand("instarespawn")
    executeCommand("antiban")
    executeCommand("lessfilter 1")
    
    botInitialized = true
    print("[Security Bot] Initialization complete")
end

local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function checkAccountAge(player)
    return player.AccountAge
end

local function shouldServerHop()
    local playerCount = 0
    local hasOwner = false
    
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name ~= botOwner then
            playerCount = playerCount + 1
            if isWhitelisted(player.Name) == "owner" then
                hasOwner = true
            end
        end
    end
    
    -- Don't serverhop if owner is present
    if hasOwner then
        return false
    end
    
    -- Serverhop if only bot remains (ignoring mods)
    local nonModPlayers = 0
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name ~= botOwner and isWhitelisted(player.Name) ~= "mod" then
            nonModPlayers = nonModPlayers + 1
        end
    end
    
    return nonModPlayers == 0
end

local function serverHop()
    print("[Security Bot] Server hopping...")
    local success, errorMessage = pcall(function()
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end)
    if not success then
        print("[Security Bot] Serverhop failed: " .. errorMessage)
        wait(5)
        serverHop() -- Retry
    end
end

-- Main Detection Systems
local function onPlayerDied(player, killer)
    if not player or not killer then return end
    if player.Name == killer.Name then return end -- Suicide
    
    local whitelistStatus = isWhitelisted(killer.Name)
    if whitelistStatus then return end -- Ignore whitelisted players
    
    -- Check if bot was killed
    if player.Name == botOwner then
        print("[Security Bot] Bot was killed by " .. killer.Name .. "! Initiating revenge...")
        addToLoopkills(killer.Name)
        executeCommand("inf^0.1^loopkill @" .. killer.Name)
        executeCommand("inf^0.1^loopgoto @" .. killer.Name .. " 0")
        return
    end
    
    -- Get positions at time of death
    local killerChar = killer.Character
    local victimChar = player.Character
    
    if not killerChar or not victimChar then return end
    if not killerChar:FindFirstChild("HumanoidRootPart") or not victimChar:FindFirstChild("HumanoidRootPart") then return end
    
    local distance = getDistance(killerChar.HumanoidRootPart.Position, victimChar.HumanoidRootPart.Position)
    
    print("[Security Bot] Kill detected: " .. killer.Name .. " -> " .. player.Name .. " (Distance: " .. math.floor(distance) .. " studs)")
    
    if distance >= DISTANCE_LOOPKILL then
        print("[Security Bot] Long distance kill detected! Loopkilling " .. killer.Name)
        addToLoopkills(killer.Name)
        executeCommand("inf^0.1^loopkill @" .. killer.Name)
        executeCommand("inf^0.1^loopgoto @" .. killer.Name .. " 0")
    elseif distance >= DISTANCE_WARNING then
        print("[Security Bot] Suspicious kill detected! Warning kill on " .. killer.Name)
        executeCommand("kill @" .. killer.Name)
    end
end

local function checkNewPlayers()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name == botOwner then continue end
        if isWhitelisted(player.Name) then continue end
        
        local accountAge = checkAccountAge(player)
        if accountAge == 0 then
            print("[Security Bot] 0-day account detected: " .. player.Name .. "! Adding to loopkills...")
            addToLoopkills(player.Name)
            executeCommand("inf^0.1^loopkill @" .. player.Name)
            executeCommand("inf^0.1^loopgoto @" .. player.Name .. " 0")
        end
    end
end

-- Event Connections
Players.PlayerRemoving:Connect(function(player)
    wait(2) -- Wait a bit before checking serverhop condition
    if shouldServerHop() then
        serverHop()
    end
end)

Players.PlayerAdded:Connect(function(player)
    wait(1) -- Wait for player to fully load
    checkNewPlayers()
    
    player.CharacterAdded:Connect(function(character)
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.Died:Connect(function()
            -- Find who killed this player
            local killer = nil
            local killerName = humanoid:FindFirstChild("creator")
            if killerName and killerName.Value then
                killer = killerName.Value
            else
                -- Fallback: check for recent damage dealers
                local tags = character:GetChildren()
                for _, tag in pairs(tags) do
                    if tag.Name == "creator" and tag:IsA("ObjectValue") and tag.Value then
                        killer = tag.Value
                        break
                    end
                end
            end
            
            if killer then
                local killerPlayer = Players:FindFirstChild(killer)
                if killerPlayer then
                    onPlayerDied(player, killerPlayer)
                end
            end
        end)
    end)
end)

-- Main Loop
RunService.Heartbeat:Connect(function()
    processCommandQueue()
    
    -- Track bot position for death detection
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local currentPos = LocalPlayer.Character.HumanoidRootPart.Position
        
        -- Check if bot was teleported to void (indicating death/exploit)
        if currentPos.Y < -500000 and lastBotPosition.Y > -500000 then
            print("[Security Bot] Bot position anomaly detected! Possible exploit attack.")
        end
        
        lastBotPosition = currentPos
    end
end)

-- Initialize the bot
spawn(function()
    initializeBot()
    checkNewPlayers() -- Check existing players
    
    -- Initial serverhop check
    wait(10)
    if shouldServerHop() then
        serverHop()
    end
end)

print("[Security Bot] Script loaded successfully!")
print("[Security Bot] Bot Owner: " .. botOwner)
print("[Security Bot] Monitoring for exploiters...")
