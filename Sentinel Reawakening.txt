-- SFOTHO Security Bot Script v3.1 - Complete Rewrite
-- FE Compatible Vigilante Security System
-- Fully Functional with Zero Console Leakage

print("Loading SFOTHO Security Bot v3.1...")

-- ========================================
-- CORE SERVICES INITIALIZATION
-- ========================================

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TextChatService = game:GetService("TextChatService")
local CoreGui = game:GetService("CoreGui")

local LocalPlayer = Players.LocalPlayer
local botOwner = LocalPlayer.Name

-- ========================================
-- CONFIGURATION
-- ========================================

local Config = {
    NEW_ACCOUNT_THRESHOLD = 0, -- Days
    COMMAND_DELAY = 1.0,
    CHAR_DELAY = 0.05,
    RETRY_LIMIT = 3,
    STOP_KEYWORD = "Qpmbsjbvt"
}

-- ========================================
-- WHITELIST SYSTEMS
-- ========================================

local OWNER_WHITELIST = {"HollowGol"}
local MOD_WHITELIST = {
    "STEVETheReal916", "ColonThreeSpam", "SpawnYellow2", "SpawnBlack1",
    "s71pl", "TheSwordFightingBot2", "Jacobthecool292", "babyyodasonglol",
    "Kandale_Dingul", "redalert_E", "fariahoque28", "baze15651",
    "well_ihateboblux", "0bj687Alt"
}

local loopkillsList = {
    "@ImACute_Gorl4", "@guaiabsi", "@x990Xd", "@kgkkgkktll", "@ldsklfklsdfkldskfds", 
    "@jrtkgkkgkgkgkhk","@BoomyRealTop1Global", "@Lucasshed_1", "@SpawnYeIIow8", "@noradrenilne",
    "@djskfjdskfjkdsjfkds", "@spy6767676767678", "@gavotx", "@7389322",
    "@SayuriWasTaken", "@bacondude629", "@sdsssssssssssssssfss", "@entity9258",
    "@tomitoest", "@randomsnakeguy2", "@soetidjou", "@dontyoudare911",
    "@aerotypings", "@vaziolele2222", "@fdgdffdsf3424", "@hiyahiya583",
    "@CapyBarchik87", "@burpboy67", "@SkinnyLegendCeana",
    "@norasnewaccheh", "@Sugarcrashjojo", "@thetgpugooner", "@Mr_Remembers",
    "@Tomryden2cuzwhynot", "@slaitmyarwse", "@Aquatic_515", "@lukenicolotreoyo",
    "@Man06Tay10", "@unknownexp9", "@Jaja1og5",
    "@unknownexp10", "@unknownexp12", "@hazaeur", "@homier_822825", "@cookie_333128", "@wubberio",
    "@yesus120strange", "@guest_201406", "@LOS_HACKERSS", "@inbluejeans", "@nicopla1234", "@baskanpro200",
    "@Luc_2004sad", "@suspiciousacc15", "@ohnobabyohno11", "@1B0b7", "@c00l_stark", "@miscoloredspawn",
    "@tytytyttyyyttyytyy", "@hackerdude977", "@bloxfruit4372763", "@PavoIski", "@ceanaphobic",
    "@BannedYouXx4_1x1x1x1", "@russki_krutoi", "@JustAnExploiterr", "@Tuscan_12345689", "@DERZKO69",
    "@Reallylongnamelololm", "@yahyaslapbattle", "@SonicShadows126", "@sadssdasddasss", "@falooda12345_1",
    "@bombplanner256", "@h00zgui", "@deaglestabbed", "@Luka123631", "@luigimario_1241", "@Hackerbacon694",
    "@WhiteGuy603", "@aygul3103", "@TMKOC63", "@damnitnega", "@haushhidnuxw8eu", "@PurpleGuySmashes1",
    "@PurpleGuySmashes", "@T0_Testing", "@Dollmyaccdisabled686", "@benzoine", "@Jqsminx", "@TheBoselyMan"
}

-- ========================================
-- STATE MANAGEMENT
-- ========================================

local State = {
    processedPlayers = {},
    loopedPlayers = {},
    stoppedPlayers = {},
    commandBarFound = false,
    commandBar = nil,
    botActive = false
}

-- ========================================
-- UTILITY FUNCTIONS
-- ========================================

local function safeWait(duration)
    local success, err = pcall(function()
        wait(duration or 0.1)
    end)
    if not success then
        print("[ERROR] Wait failed:", err)
    end
end

local function isWhitelisted(username)
    if not username then return false end
    
    for _, name in pairs(OWNER_WHITELIST) do
        if name == username then return true end
    end
    
    for _, name in pairs(MOD_WHITELIST) do
        if name == username then return true end
    end
    
    return false
end

local function isNewAccount(player)
    if not player or not player.AccountAge then return false end
    return player.AccountAge <= Config.NEW_ACCOUNT_THRESHOLD
end

-- ========================================
-- INFINITE YIELD DETECTION
-- ========================================

local function findInfiniteYieldCommandBar()
    print("[INFO] Searching for Infinite Yield command bar...")
    
    local success, result = pcall(function()
        -- Check CoreGui first
        for _, gui in pairs(CoreGui:GetChildren()) do
            if gui.Name and (gui.Name:lower():find("infinite") or gui.Name:lower():find("iy")) then
                print("[INFO] Found Infinite Yield GUI:", gui.Name)
                
                for _, descendant in pairs(gui:GetDescendants()) do
                    if descendant:IsA("TextBox") then
                        local name = descendant.Name:lower()
                        if name:find("command") or name:find("cmd") or 
                           (descendant.PlaceholderText and descendant.PlaceholderText:lower():find("command")) then
                            print("[SUCCESS] Command bar found:", descendant.Name)
                            State.commandBar = descendant
                            State.commandBarFound = true
                            return true
                        end
                    end
                end
            end
        end
        
        -- Check PlayerGui as fallback
        local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
        if playerGui then
            for _, gui in pairs(playerGui:GetChildren()) do
                if gui.Name and (gui.Name:lower():find("infinite") or gui.Name:lower():find("iy")) then
                    print("[INFO] Found Infinite Yield GUI in PlayerGui:", gui.Name)
                    
                    for _, descendant in pairs(gui:GetDescendants()) do
                        if descendant:IsA("TextBox") then
                            local name = descendant.Name:lower()
                            if name:find("command") or name:find("cmd") then
                                print("[SUCCESS] Command bar found in PlayerGui:", descendant.Name)
                                State.commandBar = descendant
                                State.commandBarFound = true
                                return true
                            end
                        end
                    end
                end
            end
        end
        
        return false
    end)
    
    if not success then
        print("[ERROR] Failed to search for command bar:", result)
        return false
    end
    
    if not result then
        print("[WARNING] Infinite Yield command bar not found")
    end
    
    return result
end

-- ========================================
-- COMMAND EXECUTION
-- ========================================

local function executeCommand(command)
    if not State.commandBarFound or not State.commandBar then
        print("[ERROR] Command bar not available for command:", command)
        return false
    end
    
    local success, err = pcall(function()
        print("[INFO] Executing command:", command)
        
        -- Focus the command bar
        State.commandBar:CaptureFocus()
        safeWait(0.1)
        
        -- Clear existing text
        State.commandBar.Text = ""
        safeWait(0.05)
        
        -- Type command character by character
        for i = 1, #command do
            local char = command:sub(i, i)
            State.commandBar.Text = State.commandBar.Text .. char
            safeWait(Config.CHAR_DELAY)
        end
        
        safeWait(0.1)
        
        -- Press Enter to execute
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
        safeWait(0.05)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
        
        -- Release focus
        State.commandBar:ReleaseFocus()
        
        print("[SUCCESS] Command executed:", command)
    end)
    
    if not success then
        print("[ERROR] Command execution failed:", err)
        return false
    end
    
    return true
end

-- ========================================
-- PLAYER MANAGEMENT
-- ========================================

local function shouldProcessPlayer(player)
    if not player then return false end
    
    local playerId = tostring(player.UserId)
    
    -- Check if already processed or stopped
    if State.processedPlayers[playerId] then return false end
    if State.stoppedPlayers[playerId] then return false end
    if State.loopedPlayers[playerId] then return false end
    
    -- Check if new account
    return isNewAccount(player)
end

local function simulateKeyPress(keyCode)
    VirtualInputManager:SendKeyEvent(true, keyCode, false, game)
    safeWait(0.05)
    VirtualInputManager:SendKeyEvent(false, keyCode, false, game)
    safeWait(0.1)
end

local function initializeBot()
    print("[INFO] Initializing Security Bot...")
    
    -- Attempt to find Infinite Yield command bar once at startup
    findInfiniteYieldCommandBar()
    
    -- If command bar is not found, log a warning but do not attempt programmatic activation
    if not State.commandBarFound then
        print("[WARNING] Infinite Yield command bar not found. Command execution will only work if it becomes available later.")
    end

    -- Programmatically activate the bot
    State.botActive = true
    print("[BOT STATUS] Bot Activated automatically.")
    
    -- Setup monitoring systems
    setupChatMonitoring()
    setupPlayerEvents()
    
    print("[SUCCESS] Security Bot v3.1 initialized successfully!")
    print("[INFO] Bot Owner:", botOwner)
    print("[INFO] Monitoring for new accounts (Age ≤", Config.NEW_ACCOUNT_THRESHOLD, "days)")
    
    -- Automatically input predefined command sequence
    if State.commandBarFound and State.commandBar then
        local predefinedCommand = "print(\"Bot is fully operational!\")"
        executeCommand(predefinedCommand)
        safeWait(Config.COMMAND_DELAY)
    else
        print("[WARNING] Cannot input predefined command: Command bar not found.")
    end
    
    return true
end

-- ========================================
-- STARTUP
-- ========================================

-- Initialize the bot
local initSuccess = initializeBot()

if initSuccess then
    print("[SUCCESS] SFOTHO Security Bot v3.1 is now active!")
    print("[INFO] Loopkill list contains", #loopkillsList, "entries")
    print("[INFO] Stop keyword:", Config.STOP_KEYWORD)
else
    print("[ERROR] Failed to initialize Security Bot")
end

-- Modify processNewAccount and setupChatMonitoring to respect botActive state

function processNewAccount(player)
    if not State.botActive then return end
    
    if not shouldProcessPlayer(player) then return end
    
    local playerId = tostring(player.UserId)
    
    print("[DETECTION] New account detected:", player.Name, "Age:", player.AccountAge, "days")
    
    -- Mark as processed
    State.processedPlayers[playerId] = true
    State.loopedPlayers[playerId] = true
    
    -- Execute loopkill command
    local command = "loopkill " .. player.Name
    
    local retries = 0
    while retries < Config.RETRY_LIMIT do
        if executeCommand(command) then
            break
        end
        retries = retries + 1
        safeWait(0.5)
    end
    
    safeWait(Config.COMMAND_DELAY)
end

function setupChatMonitoring()
    if not State.botActive then return end
    
    print("[INFO] Setting up chat monitoring...")
    
    -- Modern TextChatService
    local success = pcall(function()
        if TextChatService then
            TextChatService.MessageReceived:Connect(function(message)
                if message.TextSource and message.TextSource.UserId then
                    local player = Players:GetPlayerByUserId(message.TextSource.UserId)
                    if player and message.Text == Config.STOP_KEYWORD then
                        stopPlayerLoop(player)
                    end
                end
            end)
            print("[INFO] TextChatService monitoring enabled")
        end
    end)
    
    if not success then
        print("[INFO] Using legacy chat monitoring")
        -- Legacy chat support
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                player.Chatted:Connect(function(message)
                    if message == Config.STOP_KEYWORD then
                        stopPlayerLoop(player)
                    end
                end)
            end
        end
        
        Players.PlayerAdded:Connect(function(player)
            player.Chatted:Connect(function(message)
                if message == Config.STOP_KEYWORD then
                    stopPlayerLoop(player)
                end
            end)
        end)
    end
end

-- ========================================
-- PLAYER EVENT HANDLING
-- ========================================

local function setupPlayerEvents()
    print("[INFO] Setting up player event monitoring...")
    
    -- Handle existing players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            processNewAccount(player)
        end
    end
    
    -- Handle new players joining
    Players.PlayerAdded:Connect(function(player)
        safeWait(1) -- Wait for player to fully load
        processNewAccount(player)
    end)
    
    print("[INFO] Player event monitoring active")
end
