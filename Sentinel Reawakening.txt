local OwnerUsernames = {"HollowGol"}
local ModeratorUsernames = {"MOD_USERNAME_1", "MOD_USERNAME_2"}

local TargetUsernames = {"4bductedbyaIiens", "ADD_OTHER_NAMES_HERE"}
local warning_kill = {}
local LoopkillTargets = {}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TextChatService = game:GetService("TextChatService")
local workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local BringOffset = Vector3.new(1.25, 3, -1.75)
local HighAltitude = -10000000
local toolname = "Sword"
workspace.FallenPartsDestroyHeight = 0/0

local processedHumanoids = {}
local playerKillData = {}
local killDetectionInitialized = false

local function isOwner(name)
	for _, ownerName in ipairs(OwnerUsernames) do
		if ownerName == name then
			return true
		end
	end
	return false
end

local function isModerator(name)
	for _, modName in ipairs(ModeratorUsernames) do
		if modName == name then
			return true
		end
	end
	return false
end

local function isRanked(name)
	if isOwner(name) or isModerator(name) then
		return true
	end
	return false
end

local function setupCharacter(Character)
	if not Character then return end
	task.wait(0.5)
	for _, Part in ipairs(Character:GetDescendants()) do
		if Part:IsA("BasePart") then Part.CanCollide = false end
	end
	local HRP = Character:FindFirstChild("HumanoidRootPart")
	if HRP then
		local TargetCFrame = CFrame.new(0, HighAltitude, 0)
		HRP.CFrame = TargetCFrame
	end
	local Backpack = LocalPlayer:FindFirstChild("Backpack")
	if Backpack then
		for _, Item in ipairs(Backpack:GetChildren()) do
			if Item:IsA("Tool") and Item.Parent == Backpack then
				Item.Parent = Character
			end
		end
	end
end

if not LocalPlayer then
	repeat task.wait() until Players.LocalPlayer
	LocalPlayer = Players.LocalPlayer
end

LocalPlayer.CharacterAdded:Connect(setupCharacter)

if LocalPlayer.Character then
	setupCharacter(LocalPlayer.Character)
end

local function onHumanoidAdded(humanoid)
	humanoid:GetPropertyChangedSignal("Health"):Connect(function()
		if humanoid.Health <= 0 and not processedHumanoids[humanoid] then
			
			local victimPlayer = Players:GetPlayerFromCharacter(humanoid.Parent)
			if victimPlayer then
				for i, name in ipairs(warning_kill) do
					if name == victimPlayer.Name then
						table.remove(warning_kill, i)
						break
					end
				end
			end
			
			processedHumanoids[humanoid] = true
			local creatorTag = humanoid:FindFirstChild("creator")

			if creatorTag and creatorTag:IsA("ObjectValue") and creatorTag.Value and creatorTag.Value:IsA("Player") then
				local victimCharacter = humanoid.Parent
				
				if victimPlayer == LocalPlayer then
					local creatorPlayer = creatorTag.Value
					local creatorName = creatorPlayer.Name
					
					if isRanked(creatorName) then
						return
					end
					
					local alreadyExists = false
					for _, name in ipairs(TargetUsernames) do
						if name == creatorName then
							alreadyExists = true
							break
						end
					end
					if not alreadyExists then
						table.insert(TargetUsernames, creatorName)
					end
					return
				end
				
				local victimName = victimCharacter.Name
				if isRanked(victimName) then
					return
				end
				
				local isIgnored = false
				for _, name in ipairs(TargetUsernames) do
					if name == victimName then
						isIgnored = true
						break
					end
				end
				
				if isIgnored then
					return
				end

				local creatorPlayer = creatorTag.Value
				local creatorName = creatorPlayer.Name
				
				if isRanked(creatorName) then
					return
				end
				
				local creatorCharacter = creatorPlayer.Character
				local victimRootPart = victimCharacter:FindFirstChild("HumanoidRootPart")

				if creatorCharacter and victimRootPart then
					local creatorRootPart = creatorCharacter:FindFirstChild("HumanoidRootPart")
					if creatorRootPart then
						local distance = (victimRootPart.Position - creatorRootPart.Position).Magnitude
						local roundedDistance = math.floor(distance + 0.5)

						print(creatorName .. " killed " .. victimCharacter.Name .. " with " .. roundedDistance .. " stud distance")

						if distance >= 25 then
							local currentTime = tick()
							if not playerKillData[creatorName] then
								playerKillData[creatorName] = {lastKillTime = 0, recentKillCount = 0}
							end
							
							local data = playerKillData[creatorName]
							local timeSinceLast = currentTime - data.lastKillTime

							if timeSinceLast <= 0.25 then
								data.recentKillCount = data.recentKillCount + 1
							else
								data.recentKillCount = 1
							end
							
							data.lastKillTime = currentTime

							if data.recentKillCount >= 2 then
								local alreadyExists = false
								for _, name in ipairs(TargetUsernames) do
									if name == creatorName then
										alreadyExists = true
										break
									end
								end
								if not alreadyExists then
									table.insert(TargetUsernames, creatorName)
								end
								data.recentKillCount = 0
							end
						end
						
						if distance >= 15 then
							local alreadyExists = false
							for _, name in ipairs(warning_kill) do
								if name == creatorName then
									alreadyExists = true
									break
								end
							end
							if not alreadyExists then
								table.insert(warning_kill, creatorName)
							end
						end
					end
				end
			end
		end
	end)
end

local function onDescendantAdded(descendant)
	if descendant:IsA("Humanoid") then
		onHumanoidAdded(descendant)
	end
end

local function initializeKillDetection()
	for _, descendant in ipairs(workspace:GetDescendants()) do
		if descendant:IsA("Humanoid") then
			onHumanoidAdded(descendant)
		end
	end
	workspace.DescendantAdded:Connect(onDescendantAdded)
end

TextChatService.MessageReceived:Connect(function(message)
	local text = message.Text
	local senderPlayer = message.TextSource
	
	if not senderPlayer then
		return
	end
	
	local senderName = senderPlayer.Name
	local senderIsOwner = isOwner(senderName)
	local senderIsMod = isModerator(senderName)
	
	if not senderIsOwner and not senderIsMod then
		return
	end
	
	local parts = text:split(" ")
	
	if parts[1] == "sentinel" and parts[2] == "jump" and parts[3] then
		local targetName = parts[3]
		local targetIsOwner = isOwner(targetName)
		local targetIsMod = isModerator(targetName)
		
		if senderIsMod and (targetIsOwner or targetIsMod) then
			return
		end
		
		if targetName == senderName then
			return
		end
		
		local alreadyExists = false
		for _, name in ipairs(LoopkillTargets) do
			if name == targetName then
				alreadyExists = true
				break
			end
		end
		
		if not alreadyExists then
			table.insert(LoopkillTargets, targetName)
		end
		
	elseif parts[1] == "sentinel" and parts[2] == "unloop" and parts[3] then
		local targetName = parts[3]
		local targetIsOwner = isOwner(targetName)
		local targetIsMod = isModerator(targetName)
		
		if senderIsMod and (targetIsOwner or targetIsMod) then
			return
		end
		
		for i, name in ipairs(LoopkillTargets) do
			if name == targetName then
				table.remove(LoopkillTargets, i)
				break
			end
		end
	end
end)

task.wait(0.1)

task.spawn(function()
	while true do
		pcall(function()
			if LocalPlayer.Backpack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
				if LocalPlayer.Backpack:FindFirstChild(toolname) and LocalPlayer.Character:FindFirstChild(toolname) == nil then
					local tool = LocalPlayer.Backpack:FindFirstChild(toolname)
					LocalPlayer.Character.Humanoid:EquipTool(tool)
				end
			end
		end)
		task.wait()
	end
end)

task.spawn(function()
	while true do
		pcall(function()
			if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
				local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
				if humanoid.Health > 0 then
					local tool = LocalPlayer.Character:FindFirstChild(toolname)
					if tool then
						tool:Activate()
					end
				end
			end
		end)
		task.wait()
	end
end)

while true do
	local Character = LocalPlayer.Character
	if Character then
		local HRP = Character:FindFirstChild("HumanoidRootPart")
		if HRP then
			local TargetCFrame = CFrame.new(0, HighAltitude, 0)
			HRP.CFrame = TargetCFrame
			
			if not killDetectionInitialized and HRP.CFrame.Position == Vector3.new(0, HighAltitude, 0) then
				killDetectionInitialized = true
				task.spawn(initializeKillDetection)
			end
		end
	end

	local SpeakerHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if SpeakerHRP then
		for _, TargetUsername in ipairs(TargetUsernames) do
			if isRanked(TargetUsername) then
				continue
			end
			local TargetPlayer = Players:FindFirstChild(TargetUsername)
			if TargetPlayer and TargetPlayer.Character then
				local TargetHRP = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
				if TargetHRP then
					local RelativeOffsetCFrame = CFrame.new(BringOffset)
					TargetHRP.CFrame = SpeakerHRP.CFrame * RelativeOffsetCFrame
				end
			end
		end
		
		for _, TargetUsername in ipairs(warning_kill) do
			if isRanked(TargetUsername) then
				continue
			end
			local TargetPlayer = Players:FindFirstChild(TargetUsername)
			if TargetPlayer and TargetPlayer.Character then
				local TargetHRP = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
				if TargetHRP then
					local RelativeOffsetCFrame = CFrame.new(BringOffset)
					TargetHRP.CFrame = SpeakerHRP.CFrame * RelativeOffsetCFrame
				end
			end
		end
		
		for _, TargetUsername in ipairs(LoopkillTargets) do
			local TargetPlayer = Players:FindFirstChild(TargetUsername)
			if TargetPlayer and TargetPlayer.Character then
				local TargetHRP = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
				if TargetHRP then
					local RelativeOffsetCFrame = CFrame.new(BringOffset)
					TargetHRP.CFrame = SpeakerHRP.CFrame * RelativeOffsetCFrame
				end
			end
		end
	end

	task.wait(0.01)
end

