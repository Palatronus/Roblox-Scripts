local TargetUsernames = {"4bductedbyaIiens", "ADD_OTHER_NAMES_HERE"}
local warning_kill = {}

local Owners = {"Hollowgol"}
local Moderators = {"ADD_MOD_NAME_HERE"}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local workspace = game:GetService("Workspace")
local TextChatService = game:GetService("TextChatService")
local LocalPlayer = Players.LocalPlayer
local BringOffset = Vector3.new(1.25, 3, -1.75)
local HighAltitude = -10000000
local toolname = "Sword"
workspace.FallenPartsDestroyHeight = 0/0

local processedHumanoids = {}
local playerKillData = {}
local killDetectionInitialized = false

local function getRank(username)
	for _, ownerName in ipairs(Owners) do
		if ownerName == username then
			return "Owner"
		end
	end
	for _, modName in ipairs(Moderators) do
		if modName == username then
			return "Moderator"
		end
	end
	return "User"
end

local function setupCharacter(Character)
	if not Character then return end
	task.wait(0.5)
	for _, Part in ipairs(Character:GetDescendants()) do
		if Part:IsA("BasePart") then Part.CanCollide = false end
	end
	local HRP = Character:FindFirstChild("HumanoidRootPart")
	if HRP then
		local TargetCFrame = CFrame.new(0, HighAltitude, 0)
		HRP.CFrame = TargetCFrame
	end
	local Backpack = LocalPlayer:FindFirstChild("Backpack")
	if Backpack then
		for _, Item in ipairs(Backpack:GetChildren()) do
			if Item:IsA("Tool") and Item.Parent == Backpack then
				Item.Parent = Character
			end
		end
	end
end

if not LocalPlayer then
	repeat task.wait() until Players.LocalPlayer
	LocalPlayer = Players.LocalPlayer
end

LocalPlayer.CharacterAdded:Connect(setupCharacter)

if LocalPlayer.Character then
	setupCharacter(LocalPlayer.Character)
end

local function onHumanoidAdded(humanoid)
	humanoid:GetPropertyChangedSignal("Health"):Connect(function()
		if humanoid.Health <= 0 and not processedHumanoids[humanoid] then
			
			local victimPlayer = Players:GetPlayerFromCharacter(humanoid.Parent)
			if victimPlayer then
				for i, name in ipairs(warning_kill) do
					if name == victimPlayer.Name then
						table.remove(warning_kill, i)
						break
					end
				end
			end
			
			processedHumanoids[humanoid] = true
			local creatorTag = humanoid:FindFirstChild("creator")

			if creatorTag and creatorTag:IsA("ObjectValue") and creatorTag.Value and creatorTag.Value:IsA("Player") then
				local victimCharacter = humanoid.Parent
				
				if victimPlayer == LocalPlayer then
					local creatorPlayer = creatorTag.Value
					local creatorName = creatorPlayer.Name
					local alreadyExists = false
					for _, name in ipairs(TargetUsernames) do
						if name == creatorName then
							alreadyExists = true
							break
						end
					end
					if not alreadyExists then
						table.insert(TargetUsernames, creatorName)
					end
					return
				end
				
				local victimName = victimCharacter.Name
				local isIgnored = false
				for _, name in ipairs(TargetUsernames) do
					if name == victimName then
						isIgnored = true
						break
					end
				end
				
				if isIgnored then
					return
				end

				local creatorPlayer = creatorTag.Value
				local creatorName = creatorPlayer.Name
				
				local creatorRank = getRank(creatorName)
				if creatorRank == "Owner" or creatorRank == "Moderator" then
					return
				end
				
				local creatorCharacter = creatorPlayer.Character
				local victimRootPart = victimCharacter:FindFirstChild("HumanoidRootPart")

				if creatorCharacter and victimRootPart then
					local creatorRootPart = creatorCharacter:FindFirstChild("HumanoidRootPart")
					if creatorRootPart then
						local distance = (victimRootPart.Position - creatorRootPart.Position).Magnitude
						local roundedDistance = math.floor(distance + 0.5)

						print(creatorName .. " killed " .. victimCharacter.Name .. " with " .. roundedDistance .. " stud distance")

						if distance >= 25 then
							local currentTime = tick()
							if not playerKillData[creatorName] then
								playerKillData[creatorName] = {lastKillTime = 0, recentKillCount = 0}
							end
							
							local data = playerKillData[creatorName]
							local timeSinceLast = currentTime - data.lastKillTime

							if timeSinceLast <= 0.25 then
								data.recentKillCount = data.recentKillCount + 1
							else
								data.recentKillCount = 1
							end
							
							data.lastKillTime = currentTime

							if data.recentKillCount >= 2 then
								local alreadyExists = false
								for _, name in ipairs(TargetUsernames) do
									if name == creatorName then
										alreadyExists = true
										break
									end
								end
								if not alreadyExists then
									table.insert(TargetUsernames, creatorName)
								end
								data.recentKillCount = 0
							end
						end
						
						if distance >= 15 then
							local alreadyExists = false
							for _, name in ipairs(warning_kill) do
								if name == creatorName then
									alreadyExists = true
									break
								end
							end
							if not alreadyExists then
								table.insert(warning_kill, creatorName)
							end
						end
					end
				end
			end
		end
	end)
end

local function onDescendantAdded(descendant)
	if descendant:IsA("Humanoid") then
		onHumanoidAdded(descendant)
	end
end

local function initializeKillDetection()
	for _, descendant in ipairs(workspace:GetDescendants()) do
		if descendant:IsA("Humanoid") then
			onHumanoidAdded(descendant)
		end
	end
	workspace.DescendantAdded:Connect(onDescendantAdded)
end

TextChatService.MessageReceived:Connect(function(message)
	if not message.TextSource then return end
	
	local senderName = message.TextSource.Name
	local senderRank = getRank(senderName)
	
	if senderRank == "User" then return end
	
	local text = message.Text
	local generalChannel = TextChatService.TextChannels.RBXGeneral

	local jumpMatch = string.match(text, "^jump (.+)")
	if jumpMatch then
		local targetUsername = jumpMatch
		local targetRank = getRank(targetUsername)
		
		if senderRank == "Moderator" and (targetRank == "Owner" or targetRank == "Moderator") then
			if generalChannel then
				generalChannel:SendAsync("USER:" .. senderName .. ", RANK:" .. senderRank .. ", PERMISSION DENIED")
			end
			return
		end
		
		table.insert(TargetUsernames, targetUsername)
		if generalChannel then
			generalChannel:SendAsync("USER:" .. senderName .. ", RANK:" .. senderRank .. ", JUMP COMMAND INITIATED ON " .. targetUsername)
		end
		return
	end

	local unloopMatch = string.match(text, "^unloop (.+)")
	if unloopMatch then
		local targetUsername = unloopMatch
		local targetRank = getRank(targetUsername)
		
		if senderRank == "Moderator" and (targetRank == "Owner" or targetRank == "Moderator") then
			if generalChannel then
				generalChannel:SendAsync("USER:" .. senderName .. ", RANK:" .. senderRank .. ", PERMISSION DENIED")
			end
			return
		end
		
		for i, name in ipairs(TargetUsernames) do
			if name == targetUsername then
				table.remove(TargetUsernames, i)
				break
			end
		end
		if generalChannel then
			generalChannel:SendAsync("USER:" .. senderName .. ", RANK:" .. senderRank .. ", UNLOOP COMMAND INITIATED ON " .. targetUsername)
		end
		return
	end
end)

task.wait(0.1)

task.spawn(function()
	while true do
		pcall(function()
			if LocalPlayer.Backpack and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
				if LocalPlayer.Backpack:FindFirstChild(toolname) and LocalPlayer.Character:FindFirstChild(toolname) == nil then
					local tool = LocalPlayer.Backpack:FindFirstChild(toolname)
					LocalPlayer.Character.Humanoid:EquipTool(tool)
				end
			end
		end)
		task.wait()
	end
end)

task.spawn(function()
	while true do
		pcall(function()
			if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
				local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
				if humanoid.Health > 0 then
					local tool = LocalPlayer.Character:FindFirstChild(toolname)
					if tool then
						tool:Activate()
						local handle = tool:FindFirstChild("Handle")
						if handle then
							local boxReach = handle:FindFirstChild("BoxReach")
							if not boxReach then
								boxReach = Instance.new("Part")
								boxReach.Name = "BoxReach"
								boxReach.Size = Vector3.new(10, 10, 10)
								boxReach.CFrame = handle.CFrame
								boxReach.Anchored = false
								boxReach.CanCollide = false
								boxReach.Transparency = 1
								boxReach.Parent = handle

								local boxWeld = Instance.new("WeldConstraint")
								boxWeld.Part0 = handle
								boxWeld.Part1 = boxReach
								boxWeld.Parent = handle

								boxReach.Touched:Connect(function(hit)
									if not hit or not hit.Parent then return end
									local char = hit.Parent
									if char == LocalPlayer.Character then return end
									
									local hitHumanoid = char:FindFirstChildOfClass("Humanoid")
									if hitHumanoid and hitHumanoid.Health > 0 then
										hitHumanoid:TakeDamage(100)
									end
								end)
							end
							boxReach.CFrame = boxReach.CFrame * CFrame.Angles(0, 1, 0)
						end
					end
				end
			end
		end)
		task.wait()
	end
end)

while true do
	local Character = LocalPlayer.Character
	if Character then
		local HRP = Character:FindFirstChild("HumanoidRootPart")
		if HRP then
			local TargetCFrame = CFrame.new(0, HighAltitude, 0)
			HRP.CFrame = TargetCFrame
			
			if not killDetectionInitialized and HRP.CFrame.Position == Vector3.new(0, HighAltitude, 0) then
				killDetectionInitialized = true
				task.spawn(initializeKillDetection)
			end
		end
	end

	local SpeakerHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if SpeakerHRP then
		for _, TargetUsername in ipairs(TargetUsernames) do
			local TargetPlayer = Players:FindFirstChild(TargetUsername)
			if TargetPlayer and TargetPlayer.Character then
				local TargetHRP = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
				if TargetHRP then
					local RelativeOffsetCFrame = CFrame.new(BringOffset)
					TargetHRP.CFrame = SpeakerHKRP.CFrame * RelativeOffsetCFrame
				end
			end
		end
		
		for _, TargetUsername in ipairs(warning_kill) do
			local TargetPlayer = Players:FindFirstChild(TargetUsername)
			if TargetPlayer and TargetPlayer.Character then
				local TargetHRP = TargetPlayer.Character:FindFirstChild("HumanoidRootPart")
				if TargetHRP then
					local RelativeOffsetCFrame = CFrame.new(BringOffset)
					TargetHRP.CFrame = SpeakerHRP.CFrame * RelativeOffsetCFrame
				end
			end
		end
	end

	task.wait(0.01)
end
