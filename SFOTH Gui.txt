-- Define Constants
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

-- Define Armor Stands and Heal Pads
local armorStand1 = workspace:WaitForChild("BattleArmorStand1")
local armorStand2 = workspace:WaitForChild("BattleArmorStand2")
local healPad1 = workspace:WaitForChild("HealPad1")
local healPad2 = workspace:WaitForChild("HealPad2")

-- Helper Functions
local function equipArmor()
    -- Check if an armor stand is available
    local armorStand = nil
    if not armorStand1:FindFirstChild("Touched") then
        armorStand = armorStand1
    elseif not armorStand2:FindFirstChild("Touched") then
        armorStand = armorStand2
    end
    
    if armorStand then
        -- Simulate armor equip (this would be game-specific logic)
        print("Equipping armor from " .. armorStand.Name)
        -- Example logic to double HP; modify based on game mechanics
        player.Character:FindFirstChild("Humanoid").MaxHealth = player.Character:FindFirstChild("Humanoid").MaxHealth * 2
    else
        print("No available armor stand.")
    end
end

local function triggerHealPad()
    -- Check if the heal pads are active or inactive
    local healPadToUse = nil
    if healPad1.BrickColor == BrickColor.new("Bright red") then
        healPadToUse = healPad1
    elseif healPad2.BrickColor == BrickColor.new("Bright red") then
        healPadToUse = healPad2
    end

    if healPadToUse then
        -- Trigger the heal pad (simulate healing here)
        print("Triggering heal pad: " .. healPadToUse.Name)
        -- Simulate healing process (this would be game-specific logic)
        healPadToUse.BrickColor = BrickColor.new("Bright green") -- Mark it as active
        -- Heal player
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.Health = humanoid.MaxHealth
        end
        wait(2)  -- Simulate a short healing time
        healPadToUse.BrickColor = BrickColor.new("Bright red") -- Mark the heal pad as inactive
    else
        print("No available heal pads.")
    end
end

local function checkPlayerHealth()
    -- Trigger heal pad if health is lower than max
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health < humanoid.MaxHealth then
        triggerHealPad()
    end
end

-- Main Loop
local function autoEquipAndHeal()
    -- Equip armor on spawn
    equipArmor()

    -- Check if the player needs healing after taking damage
    player.CharacterAdded:Connect(function()
        -- Equip armor again when the character respawns
        equipArmor()
    end)

    -- Check player health and activate heal pads accordingly
    RunService.Heartbeat:Connect(function()
        checkPlayerHealth()
    end)
end

-- Start the auto equip and heal process
autoEquipAndHeal()
