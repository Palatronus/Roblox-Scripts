local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LP = Players.LocalPlayer
local Toggle = true

-- Verified color values
local ACTIVE_COLOR = Color3.new(0, 1, 0) -- Bright green
local INACTIVE_COLOR = Color3.new(196/255, 40/255, 28/255) -- Exact RGB: 196,40,28

-- Toggle system with debug
UIS.InputBegan:Connect(function(Input)
    if Input.KeyCode == Enum.KeyCode.H then
        Toggle = not Toggle
        print("System toggled:", Toggle)
    end
end)

local function GetHealPadTarget()
    local closestPad
    local closestDistance = math.huge
    local characterPos = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") and LP.Character.HumanoidRootPart.Position

    if not characterPos then return nil end

    for _, pad in ipairs(workspace:GetDescendants()) do
        if pad.Name == "HealPad" and pad:IsA("Model") then
            local mainPart = pad:FindFirstChild("Pad") or pad:FindFirstChildWhichIsA("BasePart")
            if mainPart and mainPart.Color == ACTIVE_COLOR then
                local distance = (characterPos - mainPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPad = mainPart
                end
            end
        end
    end
    return closestPad
end

local function ForceHeal()
    if not Toggle or not LP.Character then return end
    
    local pad = GetHealPadTarget()
    if pad and LP.Character.Humanoid.Health < LP.Character.Humanoid.MaxHealth then
        -- Quadruple activation pattern
        for _ = 1, 4 do
            firetouchinterest(LP.Character.HumanoidRootPart, pad, 0)
            task.wait(0.08)
            firetouchinterest(LP.Character.HumanoidRootPart, pad, 1)
            task.wait(0.08)
        end
        return true
    end
    return false
end

local function MaintainArmor()
    local armors = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj.Name == "BattleArmorStand" and obj:IsA("Model") then
            local part = obj:FindFirstChildWhichIsA("BasePart")
            if part then table.insert(armors, part) end
        end
    end
    
    -- Brute-force with priority to nearest
    table.sort(armors, function(a,b)
        return (LP.Character.HumanoidRootPart.Position - a.Position).Magnitude <
               (LP.Character.HumanoidRootPart.Position - b.Position).Magnitude
    end)
    
    for _, armor in ipairs(armors) do
        for _ = 1, 3 do  -- Triple activation
            firetouchinterest(LP.Character.HumanoidRootPart, armor, 0)
            task.wait(0.05)
            firetouchinterest(LP.Character.HumanoidRootPart, armor, 1)
        end
        if LP.Character:FindFirstChild("BattleArmor") then break end
    end
end

-- Core system with resurrection handling
LP.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").HealthChanged:Connect(function()
        if Toggle then
            repeat
                local success = ForceHeal()
                task.wait(0.1)
            until not Toggle or LP.Character.Humanoid.Health == LP.Character.Humanoid.MaxHealth
        end
    end)
end)

task.spawn(function()
    while task.wait(0.3) do
        if Toggle and LP.Character then
            -- Armor system
            if not LP.Character:FindFirstChild("BattleArmor") then
                MaintainArmor()
            end
            
            -- Emergency heal check
            if LP.Character.Humanoid.Health < LP.Character.Humanoid.MaxHealth then
                ForceHeal()
            end
        end
    end
end)

print("Script loaded - Press H to toggle")
