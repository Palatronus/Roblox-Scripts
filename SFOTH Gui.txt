local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LP = Players.LocalPlayer
local Toggle = true

-- Toggle System
UIS.InputBegan:Connect(function(Input)
    if Input.KeyCode == Enum.KeyCode.H then
        Toggle = not Toggle
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "SYSTEM: "..(Toggle and "ON" or "OFF"),
            Duration = 1
        })
    end
end)

local function GetActiveHealPads()
    local activePads = {}
    for _, padModel in ipairs(workspace:GetDescendants()) do
        if padModel.Name == "HealPad" and padModel:IsA("Model") then
            local smoothBlock = padModel:FindFirstChild("Smooth Block Model")
            if smoothBlock then
                local snapCount = #smoothBlock:GetChildren()
                if snapCount >= 3 then  -- Active pad has 3+ snaps
                    local touchPart = padModel:FindFirstChildWhichIsA("Part")
                    if touchPart then
                        table.insert(activePads, touchPart)
                    end
                end
            end
        end
    end
    return activePads
end

local function ForceHeal()
    if not Toggle or not LP.Character then return end
    
    local healPads = GetActiveHealPads()
    for _, pad in ipairs(healPads) do
        if LP.Character.Humanoid.Health < LP.Character.Humanoid.MaxHealth then
            -- Double activation pattern
            firetouchinterest(LP.Character.HumanoidRootPart, pad, 0)
            task.wait(0.1)
            firetouchinterest(LP.Character.HumanoidRootPart, pad, 1)
            task.wait(0.1)
            firetouchinterest(LP.Character.HumanoidRootPart, pad, 0)
            task.wait(0.1)
            firetouchinterest(LP.Character.HumanoidRootPart, pad, 1)
        end
    end
end

local function ArmorSystem()
    if not LP.Character then return end
    
    -- Collect from all armor stands
    local armorStands = {}
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj.Name == "BattleArmorStand" and obj:IsA("Model") then
            local part = obj:FindFirstChildWhichIsA("Part")
            if part then
                table.insert(armorStands, part)
            end
        end
    end
    
    -- Force armor collection
    for _, armor in ipairs(armorStands) do
        firetouchinterest(LP.Character.HumanoidRootPart, armor, 0)
        task.wait(0.1)
        firetouchinterest(LP.Character.HumanoidRootPart, armor, 1)
        if LP.Character:FindFirstChild("BattleArmor") then break end
    end
end

-- Main systems
LP.CharacterAdded:Connect(function(char)
    local humanoid = char:WaitForChild("Humanoid")
    humanoid.HealthChanged:Connect(function()
        if Toggle and humanoid.Health < humanoid.MaxHealth then
            ForceHeal()
        end
    end)
end)

task.spawn(function()
    while task.wait(0.5) do
        if Toggle then
            -- Maintain armor
            if LP.Character and not LP.Character:FindFirstChild("BattleArmor") then
                ArmorSystem()
            end
            
            -- Emergency heal check
            if LP.Character and LP.Character.Humanoid.Health < LP.Character.Humanoid.MaxHealth then
                ForceHeal()
            end
        end
    end
end)
