local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer
local Toggle = false
local Debounce = false

-- Toggle with H key (visual feedback)
UIS.InputBegan:Connect(function(Input)
    if Input.KeyCode == Enum.KeyCode.H then
        Toggle = not Toggle
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Auto Armor/Heal",
            Text = Toggle and "ACTIVATED" or "DEACTIVATED",
            Icon = Toggle and "rbxassetid://9594108935" or "rbxassetid://9594110550",
            Duration = 1
        })
    end
end)

local function FindModel(Name)
    return workspace:FindFirstChild(Name, true) -- Search recursively
end

local function CollectItem(ModelName, PartName)
    if Debounce or not Toggle then return end
    Debounce = true
    
    local Model = FindModel(ModelName)
    if Model and LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
        local ItemPart = Model:FindFirstChild(PartName) or Model:FindFirstChildOfClass("Part")
        local OriginalCF = LP.Character.HumanoidRootPart.CFrame
        
        if ItemPart then
            -- Teleport to item
            LP.Character.HumanoidRootPart.CFrame = ItemPart.CFrame + Vector3.new(0, 3, 0)
            
            -- Wait for collection
            RunService.Heartbeat:Wait()
            task.wait(0.2)
            
            -- Return to original position
            LP.Character.HumanoidRootPart.CFrame = OriginalCF
            
            -- Remove item locally
            if Model.Parent == workspace then
                Model:Destroy()
            end
        end
    end
    Debounce = false
end

-- Auto armor on spawn/respawn
LP.CharacterAdded:Connect(function(Char)
    if Toggle then
        repeat task.wait() until Char:FindFirstChild("HumanoidRootPart")
        CollectItem("BattleArmorStand", "ArmorPart") -- Change "ArmorPart" to actual interactable part name if different
    end
end)

-- Auto heal when damaged
LP.CharacterAdded:Connect(function(Char)
    local Hum = Char:WaitForChild("Humanoid")
    Hum.HealthChanged:Connect(function()
        if Toggle and Hum.Health < Hum.MaxHealth then
            CollectItem("HealPad", "HealPart") -- Change "HealPart" to actual interactable part name if different
        end
    end)
end)

-- Initial execution
if LP.Character then
    CollectItem("BattleArmorStand", "ArmorPart")
end

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "SFOTH Auto-Script Loaded",
    Text = "Press H to toggle system\nArmor: BattleArmorStand\nHeal: HealPad",
    Duration = 5
})
