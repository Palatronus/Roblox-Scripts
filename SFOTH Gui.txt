local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LP = Players.LocalPlayer
local Toggle = true
local HealActive = false
local ArmorActive = false

-- Toggle system with light feedback
UIS.InputBegan:Connect(function(Input)
    if Input.KeyCode == Enum.KeyCode.H then
        Toggle = not Toggle
    end
end)

local function GetPads()
    local pads = {}
    for _,v in ipairs(workspace:GetDescendants()) do
        if v.Name == "HealPad" and v:IsA("Model") then
            local part = v:FindFirstChild("Main") or v:FindFirstChildWhichIsA("BasePart")
            if part then
                table.insert(pads, part)
            end
        end
    end
    return pads
end

local function SmartHeal()
    if not Toggle or HealActive then return end
    HealActive = true
    
    local character = LP.Character
    if not character then return end
    local humanoid = character:FindFirstChild("Humanoid")
    if not humanoid or humanoid.Health >= humanoid.MaxHealth then
        HealActive = false
        return
    end

    -- Batch-process pads with controlled timing
    local pads = GetPads()
    for _, pad in ipairs(pads) do
        if humanoid.Health < humanoid.MaxHealth then
            -- Double-tap with optimized timing
            firetouchinterest(character.HumanoidRootPart, pad, 0)
            task.wait(0.1)
            firetouchinterest(character.HumanoidRootPart, pad, 1)
            task.wait(0.15) -- Reduced frequency
        end
    end
    HealActive = false
end

local function GetArmors()
    local armors = {}
    for _,v in ipairs(workspace:GetDescendants()) do
        if v.Name == "BattleArmorStand" and v:IsA("Model") then
            local part = v:FindFirstChild("ArmorPart") or v:FindFirstChildWhichIsA("BasePart")
            if part then
                table.insert(armors, part)
            end
        end
    end
    return armors
end

local function MaintainArmor()
    if not Toggle or ArmorActive then return end
    ArmorActive = true
    
    local character = LP.Character
    if character and not character:FindFirstChild("BattleArmor") then
        local armors = GetArmors()
        for _, armor in ipairs(armors) do
            -- Single interaction per check
            firetouchinterest(character.HumanoidRootPart, armor, 0)
            task.wait(0.1)
            firetouchinterest(character.HumanoidRootPart, armor, 1)
            if character:FindFirstChild("BattleArmor") then break end
        end
    end
    ArmorActive = false
end

-- Optimized main loop
task.spawn(function()
    while task.wait() do
        if Toggle then
            -- Throttled armor checks (every 2 seconds)
            coroutine.wrap(function()
                task.wait(2)
                MaintainArmor()
            end)()

            -- Responsive healing system (every 0.3 seconds)
            if LP.Character and LP.Character:FindFirstChild("Humanoid") then
                if LP.Character.Humanoid.Health < LP.Character.Humanoid.MaxHealth then
                    coroutine.wrap(SmartHeal)()
                end
            end
        end
    end
end)
