local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local LP = Players.LocalPlayer

-- Verified Configuration
local ACTIVE_HEAL_COLOR = Color3.new(75/255, 151/255, 75/255)
local ARMOR_NAME = "BattleArmor"
local HEAL_PAD_NAME = "HealPad"
local ARMOR_STAND_NAME = "BattleArmorStand"

-- System State
local Active = true
local ArmorParts = {}
local HealPadParts = {}

-- Find all armor and heal pad parts
local function InitializeCache()
    ArmorParts = {}
    HealPadParts = {}
    
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj.Name == ARMOR_STAND_NAME and obj:IsA("Model") then
            local part = obj:FindFirstChildWhichIsA("BasePart") or obj.PrimaryPart
            if part then
                table.insert(ArmorParts, part)
            end
        elseif obj.Name == HEAL_PAD_NAME and obj:IsA("Model") then
            local part = obj:FindFirstChild("Pad") or obj:FindFirstChildWhichIsA("BasePart") or obj.PrimaryPart
            if part then
                table.insert(HealPadParts, part)
            end
        end
    end
end

InitializeCache()

-- Simple armor acquisition
local function EquipArmor()
    if not LP.Character or LP.Character:FindFirstChild(ARMOR_NAME) then return end
    
    local root = LP.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end
    
    for _, armorPart in ipairs(ArmorParts) do
        if armorPart and armorPart.Parent then
            firetouchinterest(root, armorPart, 0)
            firetouchinterest(root, armorPart, 1)
        end
    end
end

-- Simple healing system
local function TriggerHeal()
    if not LP.Character then return end
    
    local humanoid = LP.Character:FindFirstChild("Humanoid")
    local root = LP.Character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not root or humanoid.Health >= humanoid.MaxHealth then return end
    
    for _, padPart in ipairs(HealPadParts) do
        if padPart and padPart.Parent and padPart.Color == ACTIVE_HEAL_COLOR then
            firetouchinterest(root, padPart, 0)
            firetouchinterest(root, padPart, 1)
        end
    end
end

-- Main system
local function MainLoop()
    while Active do
        -- Refresh cache periodically
        if #ArmorParts == 0 or #HealPadParts == 0 then
            InitializeCache()
        end
        
        -- Process armor if needed
        if LP.Character and not LP.Character:FindFirstChild(ARMOR_NAME) then
            EquipArmor()
        end
        
        -- Process healing if needed
        if LP.Character and LP.Character:FindFirstChild("Humanoid") then
            if LP.Character.Humanoid.Health < LP.Character.Humanoid.MaxHealth then
                TriggerHeal()
            end
        end
        
        task.wait(0.5)
    end
end

-- Toggle system
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.H then
        Active = not Active
        if Active then
            task.spawn(MainLoop)
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "SYSTEM: "..(Active and "ON" or "OFF"),
            Duration = 1
        })
    end
end)

-- Start the system
task.spawn(MainLoop)

-- Handle respawns
LP.CharacterAdded:Connect(function(character)
    task.wait(0.5) -- Wait for character to stabilize
    EquipArmor() -- Always equip armor on respawn
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "SIMPLIFIED SYSTEM ACTIVE",
    Text = "Guaranteed armor acquisition\nPress H to toggle",
    Duration = 5
})
